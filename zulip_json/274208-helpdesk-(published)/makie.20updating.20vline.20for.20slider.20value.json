[
    {
        "content": "<p>Based heavily on the documentation, I have created the following code to interactivly explore some theoretical expressions. Non-relevant funfact is that R_load=R_cell should indicate the peak in load-power:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span> <span class=\"n\">GLMakie</span>\n\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">Figure</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">Axis</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s\">\"Current and power-output from a solar cell\"</span>\n\n<span class=\"n\">lsgrid</span> <span class=\"o\">=</span> <span class=\"n\">labelslidergrid!</span><span class=\"p\">(</span>\n    <span class=\"n\">fig</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"s\">\"V cell\"</span><span class=\"p\">,</span> <span class=\"s\">\"R cell\"</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"mf\">0.1</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"mf\">0.1</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"p\">];</span>\n    <span class=\"n\">formats</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"o\">-&gt;</span> <span class=\"s\">\"</span><span class=\"si\">$</span><span class=\"p\">(</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">digits</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"si\">$s</span><span class=\"s\">\"</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"k\">in</span> <span class=\"p\">[</span><span class=\"s\">\"V\"</span><span class=\"p\">,</span> <span class=\"s\">\"Ω\"</span><span class=\"p\">]],</span>\n    <span class=\"n\">tellwidth</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">)</span>\n<span class=\"n\">set_close_to!</span><span class=\"p\">(</span><span class=\"n\">lsgrid</span><span class=\"o\">.</span><span class=\"n\">sliders</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">set_close_to!</span><span class=\"p\">(</span><span class=\"n\">lsgrid</span><span class=\"o\">.</span><span class=\"n\">sliders</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">V_cell</span> <span class=\"o\">=</span> <span class=\"n\">lsgrid</span><span class=\"o\">.</span><span class=\"n\">sliders</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span>\n<span class=\"n\">R_cell</span> <span class=\"o\">=</span> <span class=\"n\">lsgrid</span><span class=\"o\">.</span><span class=\"n\">sliders</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span>\n\n<span class=\"n\">fig</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">lsgrid</span><span class=\"o\">.</span><span class=\"n\">layout</span>\n\n<span class=\"n\">R_load</span> <span class=\"o\">=</span> <span class=\"kt\">LinRange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n\n<span class=\"n\">R_tot</span> <span class=\"o\">=</span> <span class=\"nd\">@lift</span> <span class=\"o\">$</span><span class=\"n\">R_cell</span> <span class=\"o\">.+</span> <span class=\"o\">$</span><span class=\"n\">R_load</span>\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nd\">@lift</span> <span class=\"o\">$</span><span class=\"n\">V_cell</span> <span class=\"o\">./</span> <span class=\"o\">$</span><span class=\"n\">R_tot</span>\n<span class=\"n\">p_load</span> <span class=\"o\">=</span> <span class=\"nd\">@lift</span> <span class=\"o\">$</span><span class=\"n\">R_load</span> <span class=\"o\">.*</span> <span class=\"o\">$</span><span class=\"n\">i</span><span class=\"o\">.^</span><span class=\"mi\">2</span>\n\n<span class=\"n\">lines!</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">R_load</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"Current [A]\"</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"ss\">:red</span><span class=\"p\">)</span>\n<span class=\"n\">lines!</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">R_load</span><span class=\"p\">,</span> <span class=\"n\">p_load</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"Load power [P]\"</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"ss\">:black</span><span class=\"p\">)</span>\n\n<span class=\"n\">axislegend</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">ylims!</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s\">\"Load resistance [Ω]\"</span>\n</code></pre></div>\n<p>.<br>\nThis all works great - the sliders look good, and everything updates in a very satisfying way. The problem occurs when I try and add a simple vertical line indicating the value of one of the sliders. I define it in the exact same way as R_tot, i and p_load:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"c\"># Observable{Any} =&gt; Observable{Float64}, just in case:</span>\n<span class=\"c\"># R_cell_float is then created just like the other values</span>\n<span class=\"n\">R_cell_float</span> <span class=\"o\">=</span> <span class=\"nd\">@lift</span> <span class=\"o\">$</span><span class=\"n\">R_cell</span> <span class=\"o\">*</span> <span class=\"mi\">1</span>\n</code></pre></div>\n<p>.<br>\nAnd from here, things go downhill. The following two attempts should work as far as I can tell, but throw different errors involving coversion-errors:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">vline!</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">R_cell_float</span><span class=\"p\">)</span>\n<span class=\"n\">ERROR</span><span class=\"o\">:</span> <span class=\"n\">Cannot</span> <span class=\"n\">convert</span> <span class=\"n\">Axis</span> <span class=\"n\">to</span> <span class=\"n\">series</span> <span class=\"n\">data</span> <span class=\"k\">for</span> <span class=\"n\">plotting</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">vlines!</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">R_cell_float</span><span class=\"p\">])</span>\n<span class=\"n\">ERROR</span><span class=\"o\">:</span> <span class=\"kt\">MethodError</span><span class=\"o\">:</span> <span class=\"n\">Cannot</span> <span class=\"sb\">`convert`</span> <span class=\"n\">an</span> <span class=\"n\">object</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"kt\">Observable</span><span class=\"p\">{</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">}}</span> <span class=\"n\">to</span> <span class=\"n\">an</span> <span class=\"n\">object</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"kt\">Float32</span>\n</code></pre></div>\n<p>.<br>\nA two final attempts actually plot the desired line (Wheey!), but they do not at all respond to the slider - it is very static. The two attempts are:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">lines!</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">R_cell_val</span><span class=\"p\">,</span> <span class=\"n\">R_cell_val</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"n\">linestyle</span><span class=\"o\">=</span><span class=\"ss\">:dash</span><span class=\"p\">)</span>\n<span class=\"n\">vlines!</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">R_cell_float</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">])</span>\n</code></pre></div>\n<p>Do anyone know what I am doing wrong, and how one would simply display the current value of one of the sliders as a vertical line?</p>",
        "id": 238262788,
        "sender_full_name": "KronosTheLate",
        "timestamp": 1620717795
    },
    {
        "content": "<p>I figured it out! Even through the examples over at <a href=\"https://makie.juliaplots.org/stable/makielayout/axis.html#Vertical-/-Horizontal-Lines\">https://makie.juliaplots.org/stable/makielayout/axis.html#Vertical-/-Horizontal-Lines</a> give the values at which one wants lines as vectors, the problem was fixed by passing them directly. So passing the line value as <code>Observable{Float64}</code>, or <code>Observable{Vector{Float64}}</code> both work, whereas <code>Vector{Observable{Float64}}</code>does not.</p>\n<p>For completeness, a full working example follows:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span> <span class=\"n\">GLMakie</span>\n\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">Figure</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">Axis</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">ylims!</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">yscale</span> <span class=\"o\">=</span> <span class=\"n\">log</span>\n\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s\">\"Current and power-output from a solar cell\"</span>\n\n<span class=\"n\">lsgrid</span> <span class=\"o\">=</span> <span class=\"n\">labelslidergrid!</span><span class=\"p\">(</span>\n    <span class=\"n\">fig</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"s\">\"V cell\"</span><span class=\"p\">,</span> <span class=\"s\">\"R cell\"</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"mf\">0.1</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"mf\">0.1</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"p\">];</span>\n    <span class=\"n\">formats</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"o\">-&gt;</span> <span class=\"s\">\"</span><span class=\"si\">$</span><span class=\"p\">(</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">digits</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"si\">$s</span><span class=\"s\">\"</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"k\">in</span> <span class=\"p\">[</span><span class=\"s\">\"V\"</span><span class=\"p\">,</span> <span class=\"s\">\"Ω\"</span><span class=\"p\">]],</span>\n    <span class=\"n\">tellwidth</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">)</span>\n<span class=\"n\">set_close_to!</span><span class=\"p\">(</span><span class=\"n\">lsgrid</span><span class=\"o\">.</span><span class=\"n\">sliders</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">set_close_to!</span><span class=\"p\">(</span><span class=\"n\">lsgrid</span><span class=\"o\">.</span><span class=\"n\">sliders</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">V_cell</span> <span class=\"o\">=</span> <span class=\"n\">lsgrid</span><span class=\"o\">.</span><span class=\"n\">sliders</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span>\n<span class=\"n\">R_cell</span> <span class=\"o\">=</span> <span class=\"n\">lsgrid</span><span class=\"o\">.</span><span class=\"n\">sliders</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span>\n\n<span class=\"n\">fig</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">lsgrid</span><span class=\"o\">.</span><span class=\"n\">layout</span>\n\n<span class=\"n\">R_load</span> <span class=\"o\">=</span> <span class=\"kt\">LinRange</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n\n<span class=\"n\">R_tot</span> <span class=\"o\">=</span> <span class=\"nd\">@lift</span> <span class=\"o\">$</span><span class=\"n\">R_cell</span> <span class=\"o\">.+</span> <span class=\"o\">$</span><span class=\"n\">R_load</span>\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nd\">@lift</span> <span class=\"o\">$</span><span class=\"n\">V_cell</span> <span class=\"o\">./</span> <span class=\"o\">$</span><span class=\"n\">R_tot</span>\n<span class=\"n\">p_load</span> <span class=\"o\">=</span> <span class=\"nd\">@lift</span> <span class=\"o\">$</span><span class=\"n\">R_load</span> <span class=\"o\">.*</span> <span class=\"o\">$</span><span class=\"n\">i</span><span class=\"o\">.^</span><span class=\"mi\">2</span>\n\n<span class=\"n\">p_load_max</span> <span class=\"o\">=</span> <span class=\"nd\">@lift</span> <span class=\"n\">maximum</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">p_load</span><span class=\"p\">)</span>\n<span class=\"n\">R_cell_float</span> <span class=\"o\">=</span> <span class=\"nd\">@lift</span> <span class=\"o\">$</span><span class=\"n\">R_cell</span> <span class=\"o\">*</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">lines!</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">R_load</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"Current [A]\"</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"ss\">:red</span><span class=\"p\">)</span>\n<span class=\"n\">lines!</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">R_load</span><span class=\"p\">,</span> <span class=\"n\">p_load</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">\"Load power [W]\"</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"ss\">:black</span><span class=\"p\">)</span>\n\n<span class=\"n\">axislegend</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s\">\"Load resistance [Ω]\"</span>\n\n<span class=\"n\">vlines!</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">R_cell_float</span><span class=\"p\">,</span> <span class=\"n\">linestyle</span><span class=\"o\">=</span><span class=\"ss\">:dash</span><span class=\"p\">)</span>\n<span class=\"n\">hlines!</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">p_load_max</span><span class=\"p\">,</span> <span class=\"n\">linestyle</span><span class=\"o\">=</span><span class=\"ss\">:dash</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span>\n</code></pre></div>",
        "id": 238284265,
        "sender_full_name": "KronosTheLate",
        "timestamp": 1620729044
    },
    {
        "content": "<p>Even through I realize  I am just talking to myself in public, I like completeness. So here is the GitHub issue with a proper writeup of the problem as I see it: <a href=\"https://github.com/JuliaPlots/Makie.jl/issues/946\">https://github.com/JuliaPlots/Makie.jl/issues/946</a></p>",
        "id": 238287431,
        "sender_full_name": "KronosTheLate",
        "timestamp": 1620730808
    }
]