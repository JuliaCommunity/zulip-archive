[
    {
        "content": "<p>Given <code>v = [1,2,3,4,5]</code> and <code>inds = (1,2,3)</code>, how do you produce the view <code>view(v, inds)</code> without allocating memory?</p>\n<p>Currently I am collecting the tuple into a vector with <code>view(v, collect(inds))</code> but that seems unnecessary?</p>",
        "id": 225568568,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1612801508
    },
    {
        "content": "<p>I am slightly surprised this works, but here's a concatenation of zero-dimensional views: </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span> <span class=\"n\">LazyStack</span><span class=\"p\">;</span> <span class=\"n\">stack</span><span class=\"p\">(</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">-&gt;</span> <span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"n\">inds</span><span class=\"p\">))</span>\n</code></pre></div>\n<p>This should also be zero-allocations:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span> <span class=\"n\">StaticArrays</span><span class=\"p\">;</span> <span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">SVector</span><span class=\"p\">(</span><span class=\"n\">inds</span><span class=\"o\">...</span><span class=\"p\">))</span>\n</code></pre></div>",
        "id": 225570697,
        "sender_full_name": "Michael Abbott",
        "timestamp": 1612802181
    },
    {
        "content": "<p>The <a href=\"https://github.com/search?q=StaticArrays.jl&amp;type=Repositories\">StaticArrays.jl</a> solution is the best in my use case that already depends on the package. I wonder if this should work with Tuple too? Perhaps an issue should be opened?</p>",
        "id": 225575177,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1612803914
    },
    {
        "content": "<p>Yeah that seems like a reasonable thing to support in base</p>",
        "id": 225575251,
        "sender_full_name": "Mason Protter",
        "timestamp": 1612803942
    }
]