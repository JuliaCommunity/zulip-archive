[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"390081\">qu bit</span> </p>\n<p>Apply the filter  &amp; percentile method to <br>\nremove outliers from the IQR as:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">begin</span>\n<span class=\"n\">first_perc</span> <span class=\"o\">=</span> <span class=\"n\">percentile</span><span class=\"p\">(</span><span class=\"n\">DF</span><span class=\"o\">.</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"n\">last_perc</span> <span class=\"o\">=</span> <span class=\"n\">percentile</span><span class=\"p\">(</span><span class=\"n\">DF</span><span class=\"o\">.</span><span class=\"n\">B</span><span class=\"p\">,</span><span class=\"mi\">75</span><span class=\"p\">)</span>\n<span class=\"n\">IQR_value</span> <span class=\"o\">=</span> <span class=\"n\">iqr</span><span class=\"p\">(</span><span class=\"n\">DF</span><span class=\"o\">.</span><span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"n\">DF_NO</span> <span class=\"o\">=</span> <span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-&gt;</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">B</span> <span class=\"o\">.&gt;</span> <span class=\"n\">first_perc</span> <span class=\"o\">-</span> <span class=\"mf\">1.5</span><span class=\"o\">*</span><span class=\"n\">IQR_value</span> <span class=\"o\">&amp;&amp;</span>\n             <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">B</span> <span class=\"o\">.&lt;</span> <span class=\"n\">last_perc</span> <span class=\"o\">+</span> <span class=\"mf\">1.5</span><span class=\"o\">*</span><span class=\"n\">IQR_value</span>  <span class=\"p\">,</span> <span class=\"n\">DF</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>You can then check the :std using the describe() method<br>\nto see what improvement might have been made from the <br>\nprocess (es).</p>",
        "id": 230813951,
        "sender_full_name": "qu bit",
        "timestamp": 1616043419
    },
    {
        "content": "<p>Have a look at<br>\n<a href=\"https://github.com/jbytecode/LinRegOutliers\">https://github.com/jbytecode/LinRegOutliers</a></p>",
        "id": 230815722,
        "sender_full_name": "Fredrik Bagge Carlson",
        "timestamp": 1616045443
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"272599\">Fredrik Bagge Carlson</span> </p>\n<p>Thanks for sharing. </p>\n<p>I wanted to extend the question a little<br>\nand was curious if the detectOutliers()<br>\nmethod could be used to remove rows<br>\nby index from a dataFrame where the <br>\noutlier's were detected (i.e. via Cook's <br>\nDistance). </p>\n<p>Best, </p>\n<p><span class=\"user-mention\" data-user-id=\"272771\">@Andrey Oskin</span></p>",
        "id": 231713528,
        "sender_full_name": "qu bit",
        "timestamp": 1616622025
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"272599\">Fredrik Bagge Carlson</span> </p>\n<p>Could you provide an example how this could <br>\nbe applied to the question I posted? </p>\n<p>Thank you,</p>",
        "id": 231729451,
        "sender_full_name": "qu bit",
        "timestamp": 1616631031
    }
]