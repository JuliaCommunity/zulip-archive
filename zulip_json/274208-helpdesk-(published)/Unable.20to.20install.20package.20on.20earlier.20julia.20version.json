[
    {
        "content": "<p>I'm trying to install <a href=\"https://github.com/search?q=DFTK.jl&amp;type=Repositories\">DFTK.jl</a> package in JuliaPro.<br>\nThe error I'm getting is</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"o\">.</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"n\">pkg</span><span class=\"o\">&gt;</span> <span class=\"n\">add</span> <span class=\"n\">DFTK</span>\n<span class=\"n\">ERROR</span><span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"n\">following</span> <span class=\"n\">package</span> <span class=\"n\">names</span> <span class=\"n\">could</span> <span class=\"n\">not</span> <span class=\"n\">be</span> <span class=\"n\">resolved</span><span class=\"o\">:</span>\n <span class=\"o\">*</span> <span class=\"n\">DFTK</span> <span class=\"p\">(</span><span class=\"n\">not</span> <span class=\"n\">found</span> <span class=\"kp\">in</span> <span class=\"n\">project</span><span class=\"p\">,</span> <span class=\"n\">manifest</span> <span class=\"n\">or</span> <span class=\"n\">registry</span><span class=\"p\">)</span>\n<span class=\"n\">Please</span> <span class=\"n\">specify</span> <span class=\"n\">by</span> <span class=\"n\">known</span> <span class=\"sb\">`name=uuid`</span><span class=\"o\">.</span>\n</code></pre></div>\n<p>However, earlier while using the REPL only, that is, the basic(?) Julia version, I faced no difficulty installing <a href=\"https://github.com/search?q=DFTK.jl&amp;type=Repositories\">DFTK.jl</a> and it worked fine.<br>\nSorry if this is a very newbie question <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 223919653,
        "sender_full_name": "Gaurav Wasnik",
        "timestamp": 1611591150
    },
    {
        "content": "<p>When you say \"Basic\" julia version, do you mean Julia version 1.0 as opposed to another version? Looking at that package's <a href=\"https://github.com/JuliaMolSim/DFTK.jl/blob/master/Project.toml#L68\"><code>Project.toml</code></a>, I notice that it lists compatibility only with julia version 1.4 and above, and it looks like you're on julia version 1.0. It's possible there are no versions of the package that are known to work with julia v1.0</p>\n<p>Is there some reason to be on julia v1.0? If you're able, I'd suggest using the most recent stable version (currently v1.5)</p>",
        "id": 223921714,
        "sender_full_name": "Kevin Bonham",
        "timestamp": 1611591927
    },
    {
        "content": "<p>Oh got it! It was because I had reinstalled Julia a short while ago, and by mistake installed the LTS v1.0.5-2 version.<br>\nThanks!</p>",
        "id": 223923126,
        "sender_full_name": "Gaurav Wasnik",
        "timestamp": 1611592334
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 223927179,
        "sender_full_name": "Kevin Bonham",
        "timestamp": 1611593975
    },
    {
        "content": "<p>Hope you don't mind, I updated the subject of the thread to more accurately reflect the content. Just in case someone comes searching later, it might make it easier to find</p>",
        "id": 223927381,
        "sender_full_name": "Kevin Bonham",
        "timestamp": 1611594044
    },
    {
        "content": "<p>I'm still getting the same error</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nd\">@JuliaPro_v1</span><span class=\"o\">.</span><span class=\"mf\">5.3</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"n\">pkg</span><span class=\"o\">&gt;</span> <span class=\"n\">add</span> <span class=\"n\">DFTK</span>\n<span class=\"n\">ERROR</span><span class=\"o\">:</span> <span class=\"n\">The</span> <span class=\"n\">following</span> <span class=\"n\">package</span> <span class=\"n\">names</span> <span class=\"n\">could</span> <span class=\"n\">not</span> <span class=\"n\">be</span> <span class=\"n\">resolved</span><span class=\"o\">:</span>\n <span class=\"o\">*</span> <span class=\"n\">DFTK</span> <span class=\"p\">(</span><span class=\"n\">not</span> <span class=\"n\">found</span> <span class=\"kp\">in</span> <span class=\"n\">project</span><span class=\"p\">,</span> <span class=\"n\">manifest</span> <span class=\"n\">or</span> <span class=\"n\">registry</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>What is going wrong here?</p>",
        "id": 223930228,
        "sender_full_name": "Gaurav Wasnik",
        "timestamp": 1611595110
    },
    {
        "content": "<p>Now it looks like you're on julia pro. Was that intentional? I don't have much experience with that, but it seems like it should work</p>",
        "id": 223934109,
        "sender_full_name": "Kevin Bonham",
        "timestamp": 1611596803
    },
    {
        "content": "<p>Yes, I'm on pro. (And by 'basic' earlier I meant the standard Julia installation, <a href=\"https://github.com/search?q=DFTK.jl&amp;type=Repositories\">DFTK.jl</a> was working fine there).<br>\nWhat else could I try to resolve the issue?</p>",
        "id": 223934465,
        "sender_full_name": "Gaurav Wasnik",
        "timestamp": 1611596981
    },
    {
        "content": "<p>Does pro link to a different registry by default?  that would seem silly, but I guess it's possible</p>",
        "id": 223934986,
        "sender_full_name": "Expanding Man",
        "timestamp": 1611597197
    },
    {
        "content": "<p>My simple advice would be to ditch the so-called JuliaPro installation (which is limiting by definition) and just use a standard Julia installation which works perfectly fine and has nothing to do with being basic.</p>",
        "id": 223935056,
        "sender_full_name": "Frederik Banning",
        "timestamp": 1611597235
    },
    {
        "content": "<p>no offense to the julia computing guys, but frankly I can't imagine what juliapro is doing for anybody right now</p>",
        "id": 223935066,
        "sender_full_name": "Expanding Man",
        "timestamp": 1611597240
    },
    {
        "content": "<p><img alt=\":julia:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/7178/emoji/images/15561.png\" title=\"julia\"> <img alt=\":pro:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/7178/emoji/images/16506.png\" title=\"pro\"> <img alt=\":look_of_disapproval:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/7178/emoji/images/15113.png\" title=\"look of disapproval\"></p>",
        "id": 223935347,
        "sender_full_name": "Frederik Banning",
        "timestamp": 1611597355
    },
    {
        "content": "<p>I wonder if perhaps Julia is now successful enough that all the previous incentives for them to offer something like JuliaPro have vanished.  I can see that due to the perversity of the software world, there was initially some incentive for them to do something like that, because getting large bureaucratic institutions to adopt new programming languages is a near impossible task, and many of them would place a completely inappropriate value on bullshitting together some bunch of random stuff into something that looks to them like what they call a \"product\" (whatever the hell that means), but Julia is a lot more mature, and much more widely used now.  It seems a lot less likely that even some unwieldy institution would insist on some dubiously supported kitchen sink package over the tried-and-true default binary builds.</p>",
        "id": 223936033,
        "sender_full_name": "Expanding Man",
        "timestamp": 1611597654
    },
    {
        "content": "<p>I'm new to Julia and I thought that long time Julia users all use JuliaPro. My personal motivation for switching to pro was to try out the Juno IDE which comes by default with pro.<br>\nNow this makes me wonder what environment do you all use? I could use a recommendation!</p>",
        "id": 223936983,
        "sender_full_name": "Gaurav Wasnik",
        "timestamp": 1611598084
    },
    {
        "content": "<p>If you want an IDE Experience like JetBrains, RStudio, Eclipse whatever, then use  VSCode + Julia plugin</p>",
        "id": 223937149,
        "sender_full_name": "Max KÃ¶hler",
        "timestamp": 1611598187
    },
    {
        "content": "<p>you can use Juno, VS code or anything else with the regular Julia binaries, you don't need to use pro.  The community uses a wide variety of editors, especially neovim, emacs, Juno (atom) and VS code (I know Juno is supposed to be on VS code at some point, but I don't know if they've done that yet).  Some people also use jupyter or pluto notebooks.</p>",
        "id": 223937235,
        "sender_full_name": "Expanding Man",
        "timestamp": 1611598213
    },
    {
        "content": "<p>but none of this in any way requires Julia pro</p>",
        "id": 223937253,
        "sender_full_name": "Expanding Man",
        "timestamp": 1611598222
    },
    {
        "content": "<p>I used JuliaPro until quite recently, mainly for Juno and being used to standard, easy installation over self installing binaries, but switched to \"vanilla\" Julia for better upgradability. I never had any problems with JuliaPro and don't think this error occurred because of a registry difference but can't say for sure.</p>",
        "id": 223937393,
        "sender_full_name": "David Weingut",
        "timestamp": 1611598299
    },
    {
        "content": "<p>I withdraw my previous statement. The registry is indeed different, namely <code>https://pkg.juliacomputing.com/registry/JuliaPro</code>. One could test this by running <code>registry status</code> in the pkg prompt. You could add the general registry by running <code>registry add https://github.com/JuliaRegistries/General.git</code> afaik.<br>\nApparently my package needs always consisted of only the common packages.</p>",
        "id": 223944329,
        "sender_full_name": "David Weingut",
        "timestamp": 1611601462
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"269446\">Expanding Man</span> <a href=\"#narrow/stream/274208-helpdesk-(published)/topic/Unable.20to.20install.20package.20on.20earlier.20julia.20version/near/223935066\">said</a>:</p>\n<blockquote>\n<p>no offense to the julia computing guys, but frankly I can't imagine what juliapro is doing for anybody right now</p>\n</blockquote>\n<p>I've some times found that after long convincing efforts, pythonist friends finally try julia. They find juliaPro, try it and then decide that I was crazy all along because it  gives more problems than solutions.</p>",
        "id": 224098045,
        "sender_full_name": "Argel RamÃ­rez Reyes",
        "timestamp": 1611692884
    },
    {
        "content": "<p>Yeah, I think JuliaPro is a good product, but it's confusingly marketed. First, it seems like a paid service but it's not, and second it's kinda the opposite of a professional product. It's more like 'julia curated' than 'professional'</p>",
        "id": 224098372,
        "sender_full_name": "Mason Protter",
        "timestamp": 1611693033
    },
    {
        "content": "<p>My only experience with JuliaPro is when people come to Slack/Zulip with problems. My advice is usually, \"Don't use JuliaPro.\" More often than not, the problem goes away.</p>",
        "id": 224099180,
        "sender_full_name": "Eric Forgy",
        "timestamp": 1611693425
    },
    {
        "content": "<p>The problem really comes down to fixed versions of some packages like Reexport, StaticArrays, DataFrames, etc. can be blocking. JuliaPro is a good release process for Pumas though. The VS Code JuliaPro will have even less Pkg tricks, so more and more it'll work just like the standard release. v1.6 with JuliaPro VS Code and the Julia Hub plugin is pretty awesome.</p>",
        "id": 224103136,
        "sender_full_name": "Christopher Rackauckas",
        "timestamp": 1611695164
    }
]