[
    {
        "content": "<p>is there an easy way to make arithmetic operations of a subtype of <code>AbstractArray</code> and an <code>Array</code> return the other type and not <code>Array</code>?</p>",
        "id": 239592487,
        "sender_full_name": "Simon Christ",
        "timestamp": 1621517904
    },
    {
        "content": "<p>I was looking into it the other day but got busy with other tasks. I think you need to define a method for <code>Base.similar</code> for your array type. See the SparseArray example here: <a href=\"https://docs.julialang.org/en/v1/manual/interfaces/#man-interface-array\">https://docs.julialang.org/en/v1/manual/interfaces/#man-interface-array</a></p>",
        "id": 239593108,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1621518147
    },
    {
        "content": "<p>This indee makes <code>copy</code> work, but e.g. <code>+</code> returns still an array</p>",
        "id": 239595760,
        "sender_full_name": "Simon Christ",
        "timestamp": 1621519187
    },
    {
        "content": "<p>I guess I'd need promotion rules for that</p>",
        "id": 239595911,
        "sender_full_name": "Simon Christ",
        "timestamp": 1621519229
    },
    {
        "content": "<p>One way is to overload broadcasting, that's where <code>A+B</code> goes. I don't think promotion rules get used for arrays, although broadcasting has some similar mechanisms to try to decide who wins.</p>",
        "id": 239675791,
        "sender_full_name": "Michael Abbott",
        "timestamp": 1621554066
    },
    {
        "content": "<p>Yeah, it’s best to do it via the broadcasting machinery. I found that trying to handle it directly by dispatch methods is a losing battle due to all the method ambiguities.</p>",
        "id": 240196744,
        "sender_full_name": "Jonnie Diegelman",
        "timestamp": 1621953295
    }
]