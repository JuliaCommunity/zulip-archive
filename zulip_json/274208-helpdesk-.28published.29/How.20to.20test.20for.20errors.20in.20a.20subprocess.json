[
    {
        "content": "<p>I'd like to write something along the lines of</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">Test</span><span class=\"w\"></span>\n<span class=\"nd\">@test_throws</span><span class=\"w\"> </span><span class=\"kt\">DomainError</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"sb\">`julia -e 'sqrt(-1)'`</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Is that possible somehow?</p>",
        "id": 297932636,
        "sender_full_name": "Simon Christ",
        "timestamp": 1662714902
    },
    {
        "content": "<p>no, because the <code>DomainError</code> doesn't make it to the spawning process</p>",
        "id": 297932698,
        "sender_full_name": "Sukera",
        "timestamp": 1662714930
    },
    {
        "content": "<p>it's handled by the spawned process, the only thing <code>run</code> ends up seeing is the exit code of the process</p>",
        "id": 297932757,
        "sender_full_name": "Sukera",
        "timestamp": 1662714958
    },
    {
        "content": "<p>when dealing with subprocesses, you're limited to what they're communicating outside, either via various output streams, an exit code or explicit communication</p>",
        "id": 297932875,
        "sender_full_name": "Sukera",
        "timestamp": 1662715003
    },
    {
        "content": "<p>what you can do is search for <code>DomainError</code> in the stdout/stderr of the spawned process, but that's not reliable due to other output possibly creating a false positive</p>",
        "id": 297932951,
        "sender_full_name": "Sukera",
        "timestamp": 1662715043
    },
    {
        "content": "<p>Thanks! I feared it would be like that..</p>",
        "id": 297933216,
        "sender_full_name": "Simon Christ",
        "timestamp": 1662715185
    }
]