[
    {
        "content": "<p>If I do</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">Markdown</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sa\">md</span><span class=\"s\">\"\"\"</span>\n<span class=\"s\">       hi</span>\n\n<span class=\"s\">       ```</span>\n<span class=\"s\">       1 + 1</span>\n<span class=\"s\">       ```</span>\n<span class=\"s\">       \"\"\"</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>then <code>display</code> will print the markdown string in a nice way:<br>\n<a href=\"/user_uploads/7178/7-3whxlrje9IkxRZDlGCcYIv/image.png\">image.png</a><br>\nbut <code>print</code> and <code>show</code> and friends all fail to do it:<br>\n<a href=\"/user_uploads/7178/vu0XsVYri9YzyAiZdIYJoQpS/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/7178/7-3whxlrje9IkxRZDlGCcYIv/image.png\" title=\"image.png\"><img src=\"/user_uploads/7178/7-3whxlrje9IkxRZDlGCcYIv/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/7178/vu0XsVYri9YzyAiZdIYJoQpS/image.png\" title=\"image.png\"><img src=\"/user_uploads/7178/vu0XsVYri9YzyAiZdIYJoQpS/image.png\"></a></div><p>Is there a way to do this without <code>display</code>? I need to specify a specific output stream, which you can't do with <code>display</code>.</p>",
        "id": 423608901,
        "sender_full_name": "Mason Protter",
        "timestamp": 1709041491
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"400021\">@Timothy</span> since I suspect you're the expert on this</p>",
        "id": 423608970,
        "sender_full_name": "Mason Protter",
        "timestamp": 1709041518
    },
    {
        "content": "<p><code>Markdown.term</code> I think?</p>",
        "id": 423609840,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1709041820
    },
    {
        "content": "<p>Yep! <code>Markdown.term(::IO, ::Markdown.MD)</code> is what you want.</p>",
        "id": 423611761,
        "sender_full_name": "Timothy",
        "timestamp": 1709042460
    },
    {
        "content": "<p>ah cool. It'd be good if this was documented then</p>",
        "id": 423611980,
        "sender_full_name": "Mason Protter",
        "timestamp": 1709042520
    },
    {
        "content": "<p>Yea. Reminds me, I really should get a move on with <code>checkdoc</code>...</p>",
        "id": 423612132,
        "sender_full_name": "Timothy",
        "timestamp": 1709042548
    },
    {
        "content": "<p>in particular, does <code>Markdown.term</code> fail gracefully if <code>io</code> doesn't support fancy outputs?</p>",
        "id": 423612289,
        "sender_full_name": "Mason Protter",
        "timestamp": 1709042588
    },
    {
        "content": "<p>actually, <em>why</em> is that the bevhaviour of <code>show</code> for markdown objects? seems like the show method should check the output streams capabilities (just color is probably enough), no?</p>",
        "id": 423612511,
        "sender_full_name": "Sebastian Pfitzner",
        "timestamp": 1709042649
    },
    {
        "content": "<blockquote>\n<p>in particular, does Markdown.term fail gracefully if io doesn't support fancy outputs?</p>\n</blockquote>\n<p>Yes</p>",
        "id": 423612619,
        "sender_full_name": "Timothy",
        "timestamp": 1709042687
    },
    {
        "content": "<p>very annoying, since <code>show</code> is supposed to be the function that does that</p>",
        "id": 423612625,
        "sender_full_name": "Mason Protter",
        "timestamp": 1709042688
    },
    {
        "content": "<p>IMO it should behave like you expect</p>",
        "id": 423612666,
        "sender_full_name": "Timothy",
        "timestamp": 1709042701
    },
    {
        "content": "<p>In any case, thanks both of you!</p>",
        "id": 423614840,
        "sender_full_name": "Mason Protter",
        "timestamp": 1709043327
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"269150\">Mason Protter</span> has marked this topic as resolved.</p>",
        "id": 423614850,
        "sender_full_name": "Notification Bot",
        "timestamp": 1709043330
    },
    {
        "content": "<p>This is what it was getting used for btw, in case anyone is curious: <a href=\"https://github.com/JuliaObjects/Accessors.jl/pull/140\">https://github.com/JuliaObjects/Accessors.jl/pull/140</a></p>\n<p>It's nice to have markdown formatting for <code>register_error_hint</code>.</p>",
        "id": 423628888,
        "sender_full_name": "Mason Protter",
        "timestamp": 1709046786
    },
    {
        "content": "<p>I was curious :)</p>",
        "id": 423628932,
        "sender_full_name": "Timothy",
        "timestamp": 1709046797
    },
    {
        "content": "<p>I think that use of Experimental API isn't quite right though IIRC</p>",
        "id": 423629130,
        "sender_full_name": "Timothy",
        "timestamp": 1709046851
    },
    {
        "content": "<p>I think the version check should be replaced with a <code>isdefined(Base.Experimental, :register_error_hint)</code> check</p>",
        "id": 423629425,
        "sender_full_name": "Timothy",
        "timestamp": 1709046932
    },
    {
        "content": "<p>The version check was there because I was trying to avoid a failure on 1.6. The original PR did the <code>isdefined</code> but then it turned out the failure was something else, so I've now switched it back.</p>",
        "id": 423629723,
        "sender_full_name": "Mason Protter",
        "timestamp": 1709047001
    },
    {
        "content": "<p>By the way Timothy, since you're looking at it, do you have thoughts on the hint itself? I know you advocated in your manifesto-in-progress for using error codes so people can look up more elaborate descriptions of errors, do you think this is case that'd be better off with an error code or documentation link?</p>",
        "id": 423630274,
        "sender_full_name": "Mason Protter",
        "timestamp": 1709047156
    },
    {
        "content": "<p>I feel like much of the benefit with error codes is when they're a standard/ubiquitous system. I'm looking forward to that day, but until we get there I think your current approach is probably the best option. My 2c.</p>",
        "id": 423630528,
        "sender_full_name": "Timothy",
        "timestamp": 1709047219
    },
    {
        "content": "<p>As an aside, I love to see the effort you've gone to in creating a properly helpful error message there <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 423630620,
        "sender_full_name": "Timothy",
        "timestamp": 1709047247
    },
    {
        "content": "<p>Well I did it because I was thinking of your document</p>",
        "id": 423633490,
        "sender_full_name": "Mason Protter",
        "timestamp": 1709048087
    }
]