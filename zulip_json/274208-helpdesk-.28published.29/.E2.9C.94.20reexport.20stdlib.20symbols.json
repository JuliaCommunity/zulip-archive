[
    {
        "content": "<p>Is it considered bad practice to reexport a few symbols from a stdlib module from your module if the intent is to provide the full API in your module and not leak implementation details?</p>",
        "id": 288856734,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1657223321
    },
    {
        "content": "<p>is it exported from the stdlib already?</p>",
        "id": 288856812,
        "sender_full_name": "Sukera",
        "timestamp": 1657223367
    },
    {
        "content": "<p>Yes, in this case, just <code>LinearAlgebra.norm</code></p>",
        "id": 288856836,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1657223382
    },
    {
        "content": "<p>then I'd say it's fine, as long as you don't inadvertently create a naming conflict</p>",
        "id": 288858041,
        "sender_full_name": "Sukera",
        "timestamp": 1657223990
    },
    {
        "content": "<p>Everyone does it, but I would recommend against it -- by exporting the name like that you take on responsibility for that function. For example, if you export <code>LinearAlgebra.norm</code>, then my code will work without loading <code>LinearAlgebra</code> myself. This is fine until <code>LinearAlgebra.norm</code> changes behavior and my code breaks.</p>",
        "id": 288859636,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1657224839
    },
    {
        "content": "<p>That makes sense, and it is one of my pet peeves with Lisp. I don't even know why I am asking now that I realize Julia doesn't have any provisions for shadowing symbols, only bindings.</p>",
        "id": 288860008,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1657224999
    },
    {
        "content": "<p>In Lisp I would just shadow the original symbol, but symbols are not interned into separate module lookup table namespaces like they are in Lisp.</p>",
        "id": 288860080,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1657225044
    },
    {
        "content": "<p>So I will refrain from doing that.</p>",
        "id": 288860099,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1657225053
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"272644\">Fredrik Ekre</span> <a href=\"#narrow/stream/274208-helpdesk-.28published.29/topic/reexport.20stdlib.20symbols/near/288859636\">said</a>:</p>\n<blockquote>\n<p>Everyone does it, but I would recommend against it -- by exporting the name like that you take on responsibility for that function. For example, if you export <code>LinearAlgebra.norm</code>, then my code will work without loading <code>LinearAlgebra</code> myself. This is fine until <code>LinearAlgebra.norm</code> changes behavior and my code breaks.</p>\n</blockquote>\n<p>Hadn't thought about it much, but now that you mention it I think I only ever reexport from another package when I control both packages</p>",
        "id": 288875463,
        "sender_full_name": "Brenhin Keller",
        "timestamp": 1657233678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"374994\">Michael Fiano</span> has marked this topic as resolved.</p>",
        "id": 288878672,
        "sender_full_name": "Notification Bot",
        "timestamp": 1657236043
    }
]