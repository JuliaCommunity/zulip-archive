[
    {
        "content": "<p>When trying out any example from the README of <a href=\"https://github.com/ksil/LFPSQP.jl\">https://github.com/ksil/LFPSQP.jl</a> I am getting segfaults. Thus, I wanted to record the segfault with <code>--debug-report==rr</code> but the debug process itself reports an error:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"k\">using</span> <span class=\"n\">LFPSQP</span>\n<span class=\"p\">[</span> <span class=\"n\">Info</span><span class=\"o\">:</span> <span class=\"n\">Precompiling</span> <span class=\"n\">LFPSQP</span> <span class=\"p\">[</span><span class=\"mi\">213</span><span class=\"n\">b899a</span><span class=\"o\">-</span><span class=\"n\">c0a5</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"n\">fcf</span><span class=\"o\">-</span><span class=\"mi\">934</span><span class=\"n\">b</span><span class=\"o\">-</span><span class=\"mi\">81</span><span class=\"n\">c0c35eb21a</span><span class=\"p\">]</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">-&gt;</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span><span class=\"o\">^</span><span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"mi\">100</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">^</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"mi\">2</span>\n<span class=\"c\">#1 (generic function with 1 method)</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">x0</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]</span>\n<span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"n\">element</span> <span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">}</span><span class=\"o\">:</span>\n <span class=\"mf\">0.0</span>\n <span class=\"mf\">0.0</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">obj_values</span><span class=\"p\">,</span> <span class=\"n\">λ_kkt</span><span class=\"p\">,</span> <span class=\"n\">term_info</span> <span class=\"o\">=</span> <span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">)</span>\n\n<span class=\"n\">signal</span> <span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">Segmentation</span> <span class=\"n\">fault</span>\n<span class=\"o\">...</span>\n<span class=\"n\">┌</span> <span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">Debugged</span> <span class=\"n\">process</span> <span class=\"n\">failed</span>\n<span class=\"n\">│</span>   <span class=\"n\">exitcode</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">│</span>   <span class=\"n\">termsignal</span> <span class=\"o\">=</span> <span class=\"mi\">11</span>\n<span class=\"n\">└</span> <span class=\"err\">@</span> <span class=\"n\">BugReporting</span> <span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">BugReporting</span><span class=\"o\">/</span><span class=\"n\">AZD4C</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">BugReporting</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">191</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>    <span class=\"mi\">2555288</span> <span class=\"n\">segmentation</span> <span class=\"n\">fault</span> <span class=\"p\">(</span><span class=\"n\">core</span> <span class=\"n\">dumped</span><span class=\"p\">)</span>  <span class=\"n\">julia</span> <span class=\"o\">--</span><span class=\"n\">bug</span><span class=\"o\">-</span><span class=\"n\">report</span><span class=\"o\">=</span><span class=\"n\">rr</span>\n</code></pre></div>",
        "id": 249639716,
        "sender_full_name": "Lasse Peters",
        "timestamp": 1629144058
    },
    {
        "content": "<p>I have had that happen too, but then I managed to record with <code>rr</code> directly (<code>rr record julia ...</code>). Does that work?</p>",
        "id": 249698930,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1629195093
    }
]