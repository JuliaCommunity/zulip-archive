[
    {
        "content": "<p>Hi Everyone!  Is there a way to do a callback between two Julia processes?  </p>\n<p>I am currently using  <strong>@everywhere using Distributed</strong> with <strong>@everywhere using ParallelDataTransfer</strong>  to read data from one Julia process into a second Julia process.  ParallelDataTransfer has a simple function <strong>getfrom</strong> to retrieve data from another process.  For example, <strong>tmp = getfrom(2, :stNumCtr)</strong>  retrieves the value of variable stNumCtr from process ID <a href=\"https://github.com/JuliaLang/julia/issues/2\">#2</a> and stores it in tmp.  However, it takes too long to retrieve the data (ie. 25 ms).  Worse yet, I must read it frequently.  I tried using <strong>@async getfrom(2,:stNumCtr)</strong> but the @async macro consumes memory over time and since I read it frequently, it quickly becomes a memory problem.</p>\n<p>Is there a way to \"speed\" up the getfrom function?</p>\n<p>Alternatively, I would like to have process ID <a href=\"https://github.com/JuliaLang/julia/issues/2\">#2</a> callback a function in process ID <a href=\"https://github.com/JuliaLang/julia/issues/1\">#1</a> with value stNumCtr.</p>\n<p>Any thoughts please???</p>",
        "id": 260600539,
        "sender_full_name": "Jeffrey Vasel",
        "timestamp": 1636325972
    }
]