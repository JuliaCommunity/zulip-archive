[
    {
        "content": "<p>What is the difference between these two method definitions?</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">::</span><span class=\"n\">typeof</span><span class=\"p\">(</span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">))(</span><span class=\"n\">x</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sin</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"c\"># versus</span><span class=\"w\"></span>\n\n<span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sin</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 307523725,
        "sender_full_name": "Fons van der Plas",
        "timestamp": 1667396067
    },
    {
        "content": "<p>the latter is much more readable, otherwise there shouldn't be any</p>",
        "id": 307524351,
        "sender_full_name": "Sukera",
        "timestamp": 1667396266
    },
    {
        "content": "<p>Nothing, they lower to the same (except the latter uses <code>Core.Typeof</code> instead of <code>Base.typeof</code>)</p>",
        "id": 307524354,
        "sender_full_name": "Jakob Nybo Nissen",
        "timestamp": 1667396268
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302687\">Fons van der Plas</span> has marked this topic as resolved.</p>",
        "id": 307524533,
        "sender_full_name": "Notification Bot",
        "timestamp": 1667396319
    },
    {
        "content": "<p>Yeah, defining a function the normal way is actually just syntax sugar for the more general operation of callable structs</p>",
        "id": 307596923,
        "sender_full_name": "Mason Protter",
        "timestamp": 1667415099
    },
    {
        "content": "<p>e.g. writing</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"></span>\n</code></pre></div>\n<p>is just special syntax to avoid writing something like</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"kt\">typeof_f</span><span class=\"w\"> </span><span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">typeof_f</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">::</span><span class=\"kt\">typeof_f</span><span class=\"p\">)(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 307597094,
        "sender_full_name": "Mason Protter",
        "timestamp": 1667415164
    },
    {
        "content": "<p>Of course it should go without saying that you should <em>NOT</em> actually define <code>Base.sin(x::Vector) = sin.(x)</code> as it's extremely confusing, and type piracy that will lead to god knows what shenanigans down the road.</p>",
        "id": 307597409,
        "sender_full_name": "Expanding Man",
        "timestamp": 1667415246
    },
    {
        "content": "<p>One practical difference though is that for the first thing you wrote <span class=\"user-mention\" data-user-id=\"302687\">@Fons van der Plas</span>, you don't actually have to write the <code>Base.</code> part. Using this syntax lets you define methods on external functions without <code>import</code> or qualifying their name</p>",
        "id": 307597418,
        "sender_full_name": "Mason Protter",
        "timestamp": 1667415249
    }
]