[
    {
        "content": "<p>This seems like an obvious question, but I can't find the answer anywhere. I want to have all of my environments to have <code>Revise</code> installed, but I don't want to have to do that manually because <code>Revise</code> isn't relevant to the specific project - for instance I want to have <code>Revise</code> installed in every environment in every <code>examples</code> folder in every package I write without specifying it. Is there any way of automatically including some environment (i.e. some global <code>Project.toml</code> / <code>Manifest.toml</code>) in any current environment? Or maybe a way of nesting one environment inside another?</p>",
        "id": 280274378,
        "sender_full_name": "Richard Reeve",
        "timestamp": 1651008274
    },
    {
        "content": "<p>These are rather called \"stacked\" environments. <br>\nSee <a href=\"https://discourse.julialang.org/t/why-not-always-use-revise/64589/6\">https://discourse.julialang.org/t/why-not-always-use-revise/64589/6</a></p>\n<p>It should be sufficient to add Revise to the default environment to make it available while activating project and package environments.</p>",
        "id": 280277257,
        "sender_full_name": "j-fu",
        "timestamp": 1651009993
    },
    {
        "content": "<p>Thanks. I honestly had no idea that worked after god knows how long using Julia now. I can't help but feel it should be better documented! Presumably it means that I don't know without putting stuff in CI on github whether I've actually put the right dependencies into a new environment though if Julia automatically pulls things that I have in my global environment into any local environment? Is there anyway of switching it off?</p>",
        "id": 280278618,
        "sender_full_name": "Richard Reeve",
        "timestamp": 1651010705
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">JULIA_LOAD_PATH</span><span class=\"o\">=</span><span class=\"s\">\"@\"</span> <span class=\"n\">julia</span> <span class=\"o\">--</span><span class=\"n\">project</span> <span class=\"o\">-</span><span class=\"n\">e</span> <span class=\"err\">'</span><span class=\"k\">import</span> <span class=\"n\">Pkg</span><span class=\"p\">;</span> <span class=\"n\">Pkg</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span><span class=\"o\">'</span>\n</code></pre></div>",
        "id": 280282328,
        "sender_full_name": "Dilum Aluthge",
        "timestamp": 1651013143
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 280282437,
        "sender_full_name": "Richard Reeve",
        "timestamp": 1651013209
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"280285\">Richard Reeve</span> has marked this topic as resolved.</p>",
        "id": 280282444,
        "sender_full_name": "Notification Bot",
        "timestamp": 1651013212
    },
    {
        "content": "<p>Just tested it, on my computer when I run <code>pkg&gt; test</code>, it does not use packages from the default environment (thank God!)</p>",
        "id": 280310654,
        "sender_full_name": "Jakob Nybo Nissen",
        "timestamp": 1651042730
    }
]