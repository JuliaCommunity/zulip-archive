[
    {
        "content": "<p>I recently did a system upgrade and now I'm getting errors when trying to build julia from source. This is happening both on <code>master</code> and on earlier versions that I definitely have successfully built before, so I think the problem is on my end. Here's the end of the compile log on a fresh <code>git clone</code> of the repo:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">[</span>mason@mason-pc julia-dev<span class=\"o\">]</span>$ make clean <span class=\"o\">&amp;&amp;</span> make\n<span class=\"o\">[</span>...<span class=\"o\">]</span>\n    CC src/init.o\n    CC src/task.o\n    CC src/array.o\n    CC src/dump.o\n    CC src/staticdata.o\n    CC src/toplevel.o\n    CC src/jl_uv.o\n    CC src/datatype.o\n    CC src/simplevector.o\n    CC src/runtime_intrinsics.o\n    CC src/precompile.o\n    CC src/threading.o\n    CC src/partr.o\n    CC src/stackwalk.o\n    CC src/gc.o\n    CC src/gc-debug.o\n    CC src/gc-pages.o\n    CC src/gc-stacks.o\n    CC src/method.o\n    CC src/jlapi.o\n    CC src/signal-handling.o\n    CC src/safepoint.o\n    CC src/timing.o\n    CC src/subtype.o\n    CC src/crc32c.o\n    CC src/APInt-C.o\n    CC src/processor.o\n    CC src/ircode.o\n    CC src/opaque_closure.o\n    CC src/jitlayers.o\n    CC src/aotcompile.o\n    CC src/debuginfo.o\n    CC src/disasm.o\n    CC src/llvm-simdloop.o\n    CC src/llvm-muladd.o\n    CC src/llvm-final-gc-lowering.o\n    CC src/llvm-pass-helpers.o\n    CC src/llvm-late-gc-lowering.o\n/home/mason/build/julia-dev/src/llvm-late-gc-lowering.cpp: In member <span class=\"k\">function</span> ‘void LateLowerGCFrame::LiftPhi<span class=\"o\">(</span>State<span class=\"p\">&amp;</span>, llvm::PHINode*<span class=\"o\">)</span>’:\n/home/mason/build/julia-dev/src/llvm-late-gc-lowering.cpp:729:39: warning: ‘unsigned int llvm::VectorType::getNumElements<span class=\"o\">()</span> const’ is deprecated: Calling this <span class=\"k\">function</span> via a base VectorType is deprecated. Either call getElementCount<span class=\"o\">()</span> and handle the <span class=\"k\">case</span> where Scalable is <span class=\"nb\">true</span> or cast to FixedVectorType. <span class=\"o\">[</span>-Wdeprecated-declarations<span class=\"o\">]</span>\n  <span class=\"m\">729</span> <span class=\"p\">|</span>         <span class=\"nv\">NumRoots</span> <span class=\"o\">=</span> VTy-&gt;getNumElements<span class=\"o\">()</span><span class=\"p\">;</span>\n      <span class=\"p\">|</span>                    ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /home/mason/build/julia-dev/usr/include/llvm/IR/Constants.h:31,\n                 from /home/mason/build/julia-dev/src/llvm-late-gc-lowering.cpp:14:\n/home/mason/build/julia-dev/usr/include/llvm/IR/DerivedTypes.h:535:10: note: declared here\n  <span class=\"m\">535</span> <span class=\"p\">|</span> unsigned VectorType::getNumElements<span class=\"o\">()</span> const <span class=\"o\">{</span>\n      <span class=\"p\">|</span>          ^~~~~~~~~~\n    CC src/llvm-lower-handlers.o\n    CC src/llvm-gc-invariant-verifier.o\n    CC src/llvm-propagate-addrspaces.o\n    CC src/llvm-multiversioning.o\n    CC src/llvm-alloc-opt.o\n    CC src/cgmemmgr.o\n    CC src/llvm-api.o\n    CC src/llvm-remove-addrspaces.o\n    CC src/llvm-remove-ni.o\n    CC src/llvm-julia-licm.o\n    CC src/llvm-demote-float16.o\n    LINK usr/lib/libjulia-internal.so.1.8\n/usr/bin/ld: ./codegen.o: <span class=\"k\">in</span> <span class=\"k\">function</span> <span class=\"sb\">`</span>__gnu_cxx::new_allocator&lt;llvm::Type*&gt;::allocate<span class=\"o\">(</span>unsigned long, void const*<span class=\"o\">)</span><span class=\"s1\">':</span>\n<span class=\"s1\">/usr/include/c++/11.1.0/ext/new_allocator.h:110: undefined reference to `std::__throw_bad_array_new_length()'</span>\n/usr/bin/ld: ./llvm-late-gc-lowering.o: <span class=\"k\">in</span> <span class=\"k\">function</span> <span class=\"sb\">`</span>__gnu_cxx::new_allocator&lt;int&gt;::allocate<span class=\"o\">(</span>unsigned long, void const*<span class=\"o\">)</span><span class=\"s1\">':</span>\n<span class=\"s1\">/usr/include/c++/11.1.0/ext/new_allocator.h:110: undefined reference to `std::__throw_bad_array_new_length()'</span>\n/usr/bin/ld: ./llvm-late-gc-lowering.o: <span class=\"k\">in</span> <span class=\"k\">function</span> <span class=\"sb\">`</span>__gnu_cxx::new_allocator&lt;unsigned int&gt;::allocate<span class=\"o\">(</span>unsigned long, void const*<span class=\"o\">)</span><span class=\"s1\">':</span>\n<span class=\"s1\">/usr/include/c++/11.1.0/ext/new_allocator.h:110: undefined reference to `std::__throw_bad_array_new_length()'</span>\n/usr/bin/ld: ./llvm-late-gc-lowering.o: <span class=\"k\">in</span> <span class=\"k\">function</span> <span class=\"sb\">`</span>__gnu_cxx::new_allocator&lt;int&gt;::allocate<span class=\"o\">(</span>unsigned long, void const*<span class=\"o\">)</span><span class=\"s1\">':</span>\n<span class=\"s1\">/usr/include/c++/11.1.0/ext/new_allocator.h:110: undefined reference to `std::__throw_bad_array_new_length()'</span>\n/usr/bin/ld: /usr/include/c++/11.1.0/ext/new_allocator.h:110: undefined reference to <span class=\"sb\">`</span>std::__throw_bad_array_new_length<span class=\"o\">()</span><span class=\"s1\">'</span>\n<span class=\"s1\">/usr/bin/ld: ./llvm-late-gc-lowering.o:/usr/include/c++/11.1.0/ext/new_allocator.h:110: more undefined references to `std::__throw_bad_array_new_length()'</span> follow\ncollect2: error: ld returned <span class=\"m\">1</span> <span class=\"nb\">exit</span> status\nmake<span class=\"o\">[</span><span class=\"m\">1</span><span class=\"o\">]</span>: *** <span class=\"o\">[</span>Makefile:300: /home/mason/build/julia-dev/usr/lib/libjulia-internal.so.1.8<span class=\"o\">]</span> Error <span class=\"m\">1</span>\nmake: *** <span class=\"o\">[</span>Makefile:76: julia-src-release<span class=\"o\">]</span> Error <span class=\"m\">2</span>\n</code></pre></div>",
        "id": 242939656,
        "sender_full_name": "Mason Protter",
        "timestamp": 1623875887
    },
    {
        "content": "<p>Any clue what might be going wrong?</p>",
        "id": 242939822,
        "sender_full_name": "Mason Protter",
        "timestamp": 1623875964
    },
    {
        "content": "<p>I wonder if it's a compatibility issue with GCC 11 which looks pretty new <a href=\"https://gcc.gnu.org/gcc-11/\">https://gcc.gnu.org/gcc-11/</a></p>",
        "id": 242940910,
        "sender_full_name": "Takafumi Arakaki (tkf)",
        "timestamp": 1623876454
    },
    {
        "content": "<p>or more like libstdc++</p>",
        "id": 242941087,
        "sender_full_name": "Takafumi Arakaki (tkf)",
        "timestamp": 1623876529
    },
    {
        "content": "<p>Hm interesting yeah I am on Gcc11</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">mason</span><span class=\"nd\">@mason</span><span class=\"o\">-</span><span class=\"n\">pc</span> <span class=\"n\">julia</span><span class=\"o\">-</span><span class=\"n\">dev</span><span class=\"p\">]</span><span class=\"o\">$</span> <span class=\"n\">pacman</span> <span class=\"o\">-</span><span class=\"n\">Q</span> <span class=\"n\">gcc</span>\n<span class=\"n\">gcc</span> <span class=\"mf\">11.1.0</span><span class=\"o\">-</span><span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 242941107,
        "sender_full_name": "Mason Protter",
        "timestamp": 1623876538
    },
    {
        "content": "<p>ok, I'll be careful to not update my arch for a while :)</p>",
        "id": 242941210,
        "sender_full_name": "Takafumi Arakaki (tkf)",
        "timestamp": 1623876596
    },
    {
        "content": "<p>Hm, <a href=\"https://archlinux.org/packages/core/x86_64/gcc/\">https://archlinux.org/packages/core/x86_64/gcc/</a> says that it was released a while ago, I think I've updated gcc more recently than that and built julia but maybe not</p>",
        "id": 242941377,
        "sender_full_name": "Mason Protter",
        "timestamp": 1623876668
    },
    {
        "content": "<p>Is anyone else on gcc 11.1 and able to build julia?</p>",
        "id": 242941430,
        "sender_full_name": "Mason Protter",
        "timestamp": 1623876694
    },
    {
        "content": "<p>I can give it a try, just a sec</p>",
        "id": 242941606,
        "sender_full_name": "Max Köhler",
        "timestamp": 1623876766
    },
    {
        "content": "<p>yes I can reproduce it on master </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code>    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">init</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">dump</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">staticdata</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">toplevel</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">jl_uv</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">datatype</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">simplevector</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime_intrinsics</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">precompile</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">threading</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">partr</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">stackwalk</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gc</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gc</span><span class=\"o\">-</span><span class=\"n\">debug</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gc</span><span class=\"o\">-</span><span class=\"n\">pages</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gc</span><span class=\"o\">-</span><span class=\"n\">stacks</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">jlapi</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">signal</span><span class=\"o\">-</span><span class=\"n\">handling</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">safepoint</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">timing</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">subtype</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">crc32c</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">APInt</span><span class=\"o\">-</span><span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">processor</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ircode</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">opaque_closure</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">jitlayers</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">aotcompile</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">debuginfo</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">disasm</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"n\">simdloop</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"n\">muladd</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"n\">final</span><span class=\"o\">-</span><span class=\"n\">gc</span><span class=\"o\">-</span><span class=\"n\">lowering</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"n\">pass</span><span class=\"o\">-</span><span class=\"n\">helpers</span><span class=\"o\">.</span><span class=\"n\">o</span>\n    <span class=\"n\">CC</span> <span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"n\">late</span><span class=\"o\">-</span><span class=\"n\">gc</span><span class=\"o\">-</span><span class=\"n\">lowering</span><span class=\"o\">.</span><span class=\"n\">o</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">max</span><span class=\"o\">/</span><span class=\"n\">repos</span><span class=\"o\">/</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"n\">late</span><span class=\"o\">-</span><span class=\"n\">gc</span><span class=\"o\">-</span><span class=\"n\">lowering</span><span class=\"o\">.</span><span class=\"n\">cpp</span><span class=\"o\">:</span> <span class=\"n\">In</span> <span class=\"n\">Elementfunktion</span> <span class=\"n\">»void</span> <span class=\"n\">LateLowerGCFrame</span><span class=\"o\">::</span><span class=\"n\">LiftPhi</span><span class=\"p\">(</span><span class=\"n\">State</span><span class=\"o\">&amp;</span><span class=\"p\">,</span> <span class=\"n\">llvm</span><span class=\"o\">::</span><span class=\"kt\">PHINode</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">«</span><span class=\"o\">:</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">max</span><span class=\"o\">/</span><span class=\"n\">repos</span><span class=\"o\">/</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"n\">late</span><span class=\"o\">-</span><span class=\"n\">gc</span><span class=\"o\">-</span><span class=\"n\">lowering</span><span class=\"o\">.</span><span class=\"n\">cpp</span><span class=\"o\">:</span><span class=\"mi\">729</span><span class=\"o\">:</span><span class=\"mi\">39</span><span class=\"o\">:</span> <span class=\"n\">Warnung</span><span class=\"o\">:</span> <span class=\"n\">»unsigned</span> <span class=\"n\">int</span> <span class=\"n\">llvm</span><span class=\"o\">::</span><span class=\"kt\">VectorType</span><span class=\"o\">::</span><span class=\"n\">getNumElements</span><span class=\"p\">()</span> <span class=\"k\">const</span><span class=\"n\">«</span> <span class=\"n\">ist</span> <span class=\"n\">veraltet</span><span class=\"o\">:</span> <span class=\"n\">Calling</span> <span class=\"n\">this</span> <span class=\"k\">function</span> <span class=\"n\">via</span> <span class=\"n\">a</span> <span class=\"n\">base</span> <span class=\"n\">VectorType</span> <span class=\"n\">is</span> <span class=\"n\">deprecated</span><span class=\"o\">.</span> <span class=\"n\">Either</span> <span class=\"n\">call</span> <span class=\"n\">getElementCount</span><span class=\"p\">()</span> <span class=\"n\">and</span> <span class=\"n\">handle</span> <span class=\"n\">the</span> <span class=\"n\">case</span> <span class=\"k\">where</span> <span class=\"kt\">Scalable</span> <span class=\"n\">is</span> <span class=\"nb\">true</span> <span class=\"n\">or</span> <span class=\"n\">cast</span> <span class=\"n\">to</span> <span class=\"n\">FixedVectorType</span><span class=\"o\">.</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">Wdeprecated</span><span class=\"o\">-</span><span class=\"n\">declarations</span><span class=\"p\">]</span>\n  <span class=\"mi\">729</span> <span class=\"o\">|</span>         <span class=\"n\">NumRoots</span> <span class=\"o\">=</span> <span class=\"n\">VTy</span><span class=\"o\">-&gt;</span><span class=\"n\">getNumElements</span><span class=\"p\">();</span>\n      <span class=\"o\">|</span>                    <span class=\"o\">~~~~~~~~~~~~~~~~~~~^~</span>\n<span class=\"n\">In</span> <span class=\"n\">Datei</span><span class=\"p\">,</span> <span class=\"n\">eingebunden</span> <span class=\"n\">von</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">max</span><span class=\"o\">/</span><span class=\"n\">repos</span><span class=\"o\">/</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">/</span><span class=\"n\">IR</span><span class=\"o\">/</span><span class=\"n\">Constants</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"mi\">31</span><span class=\"p\">,</span>\n                 <span class=\"n\">von</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">max</span><span class=\"o\">/</span><span class=\"n\">repos</span><span class=\"o\">/</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"n\">late</span><span class=\"o\">-</span><span class=\"n\">gc</span><span class=\"o\">-</span><span class=\"n\">lowering</span><span class=\"o\">.</span><span class=\"n\">cpp</span><span class=\"o\">:</span><span class=\"mi\">14</span><span class=\"o\">:</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">max</span><span class=\"o\">/</span><span class=\"n\">repos</span><span class=\"o\">/</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">/</span><span class=\"n\">IR</span><span class=\"o\">/</span><span class=\"n\">DerivedTypes</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"mi\">535</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span> <span class=\"n\">Anmerkung</span><span class=\"o\">:</span> <span class=\"n\">hier</span> <span class=\"n\">deklariert</span>\n  <span class=\"mi\">535</span> <span class=\"o\">|</span> <span class=\"n\">unsigned</span> <span class=\"n\">VectorType</span><span class=\"o\">::</span><span class=\"n\">getNumElements</span><span class=\"p\">()</span> <span class=\"k\">const</span> <span class=\"p\">{</span>\n      <span class=\"o\">|</span>          <span class=\"o\">^~~~~~~~~~</span>\n    <span class=\"kt\">CC</span> <span class=\"kt\">src</span><span class=\"o\">/</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">lower</span><span class=\"o\">-</span><span class=\"kt\">handlers</span><span class=\"o\">.</span><span class=\"kt\">o</span>\n    <span class=\"kt\">CC</span> <span class=\"kt\">src</span><span class=\"o\">/</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">gc</span><span class=\"o\">-</span><span class=\"kt\">invariant</span><span class=\"o\">-</span><span class=\"kt\">verifier</span><span class=\"o\">.</span><span class=\"kt\">o</span>\n    <span class=\"kt\">CC</span> <span class=\"kt\">src</span><span class=\"o\">/</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">propagate</span><span class=\"o\">-</span><span class=\"kt\">addrspaces</span><span class=\"o\">.</span><span class=\"kt\">o</span>\n    <span class=\"kt\">CC</span> <span class=\"kt\">src</span><span class=\"o\">/</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">multiversioning</span><span class=\"o\">.</span><span class=\"kt\">o</span>\n    <span class=\"kt\">CC</span> <span class=\"kt\">src</span><span class=\"o\">/</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">alloc</span><span class=\"o\">-</span><span class=\"kt\">opt</span><span class=\"o\">.</span><span class=\"kt\">o</span>\n    <span class=\"kt\">CC</span> <span class=\"kt\">src</span><span class=\"o\">/</span><span class=\"kt\">cgmemmgr</span><span class=\"o\">.</span><span class=\"kt\">o</span>\n    <span class=\"kt\">CC</span> <span class=\"kt\">src</span><span class=\"o\">/</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">api</span><span class=\"o\">.</span><span class=\"kt\">o</span>\n    <span class=\"kt\">CC</span> <span class=\"kt\">src</span><span class=\"o\">/</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">remove</span><span class=\"o\">-</span><span class=\"kt\">addrspaces</span><span class=\"o\">.</span><span class=\"kt\">o</span>\n    <span class=\"kt\">CC</span> <span class=\"kt\">src</span><span class=\"o\">/</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">remove</span><span class=\"o\">-</span><span class=\"kt\">ni</span><span class=\"o\">.</span><span class=\"kt\">o</span>\n    <span class=\"kt\">CC</span> <span class=\"kt\">src</span><span class=\"o\">/</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">julia</span><span class=\"o\">-</span><span class=\"kt\">licm</span><span class=\"o\">.</span><span class=\"kt\">o</span>\n    <span class=\"kt\">CC</span> <span class=\"kt\">src</span><span class=\"o\">/</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">demote</span><span class=\"o\">-</span><span class=\"kt\">float16</span><span class=\"o\">.</span><span class=\"kt\">o</span>\n    <span class=\"kt\">LINK</span> <span class=\"kt\">usr</span><span class=\"o\">/</span><span class=\"kt\">lib</span><span class=\"o\">/</span><span class=\"kt\">libjulia</span><span class=\"o\">-</span><span class=\"kt\">internal</span><span class=\"o\">.</span><span class=\"kt\">so</span><span class=\"mf\">.1.8</span>\n<span class=\"o\">/</span><span class=\"kt\">usr</span><span class=\"o\">/</span><span class=\"kt\">bin</span><span class=\"o\">/</span><span class=\"kt\">ld</span><span class=\"o\">:</span> <span class=\"o\">./</span><span class=\"kt\">codegen</span><span class=\"o\">.</span><span class=\"kt\">o</span><span class=\"o\">:</span> <span class=\"kt\">in</span> <span class=\"kt\">function</span> <span class=\"sb\">`__gnu_cxx::new_allocator&lt;llvm::Type*&gt;::allocate(unsigned long, void const*)':</span>\n<span class=\"sb\">/usr/include/c++/11.1.0/ext/new_allocator.h:110: undefined reference to `</span><span class=\"sa\">std</span><span class=\"o\">::</span><span class=\"kt\">__throw_bad_array_new_length</span><span class=\"p\">()</span><span class=\"o\">'</span>\n<span class=\"o\">/</span><span class=\"kt\">usr</span><span class=\"o\">/</span><span class=\"kt\">bin</span><span class=\"o\">/</span><span class=\"kt\">ld</span><span class=\"o\">:</span> <span class=\"o\">./</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">late</span><span class=\"o\">-</span><span class=\"kt\">gc</span><span class=\"o\">-</span><span class=\"kt\">lowering</span><span class=\"o\">.</span><span class=\"kt\">o</span><span class=\"o\">:</span> <span class=\"kt\">in</span> <span class=\"kt\">function</span> <span class=\"sb\">`__gnu_cxx::new_allocator&lt;int&gt;::allocate(unsigned long, void const*)':</span>\n<span class=\"sb\">/usr/include/c++/11.1.0/ext/new_allocator.h:110: undefined reference to `</span><span class=\"sa\">std</span><span class=\"o\">::</span><span class=\"kt\">__throw_bad_array_new_length</span><span class=\"p\">()</span><span class=\"o\">'</span>\n<span class=\"o\">/</span><span class=\"kt\">usr</span><span class=\"o\">/</span><span class=\"kt\">bin</span><span class=\"o\">/</span><span class=\"kt\">ld</span><span class=\"o\">:</span> <span class=\"o\">./</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">late</span><span class=\"o\">-</span><span class=\"kt\">gc</span><span class=\"o\">-</span><span class=\"kt\">lowering</span><span class=\"o\">.</span><span class=\"kt\">o</span><span class=\"o\">:</span> <span class=\"kt\">in</span> <span class=\"kt\">function</span> <span class=\"sb\">`__gnu_cxx::new_allocator&lt;unsigned int&gt;::allocate(unsigned long, void const*)':</span>\n<span class=\"sb\">/usr/include/c++/11.1.0/ext/new_allocator.h:110: undefined reference to `</span><span class=\"sa\">std</span><span class=\"o\">::</span><span class=\"kt\">__throw_bad_array_new_length</span><span class=\"p\">()</span><span class=\"o\">'</span>\n<span class=\"o\">/</span><span class=\"kt\">usr</span><span class=\"o\">/</span><span class=\"kt\">bin</span><span class=\"o\">/</span><span class=\"kt\">ld</span><span class=\"o\">:</span> <span class=\"o\">./</span><span class=\"kt\">llvm</span><span class=\"o\">-</span><span class=\"kt\">late</span><span class=\"o\">-</span><span class=\"kt\">gc</span><span class=\"o\">-</span><span class=\"kt\">lowering</span><span class=\"o\">.</span><span class=\"kt\">o</span><span class=\"o\">:</span> <span class=\"kt\">in</span> <span class=\"kt\">function</span> <span class=\"sb\">`__gnu_cxx::new_allocator&lt;int&gt;::allocate(unsigned long, void const*)':</span>\n<span class=\"sb\">/usr/include/c++/11.1.0/ext/new_allocator.h:110: undefined reference to `</span><span class=\"sa\">std</span><span class=\"o\">::</span><span class=\"kt\">__throw_bad_array_new_length</span><span class=\"p\">()</span><span class=\"o\">'</span>\n<span class=\"o\">/</span><span class=\"kt\">usr</span><span class=\"o\">/</span><span class=\"kt\">bin</span><span class=\"o\">/</span><span class=\"kt\">ld</span><span class=\"o\">:</span> <span class=\"o\">/</span><span class=\"kt\">usr</span><span class=\"o\">/</span><span class=\"kt\">include</span><span class=\"o\">/</span><span class=\"kt\">c</span><span class=\"o\">++/</span><span class=\"mf\">11.1.0</span><span class=\"o\">/</span><span class=\"kt\">ext</span><span class=\"o\">/</span><span class=\"kt\">new_allocator</span><span class=\"o\">.</span><span class=\"kt\">h</span><span class=\"o\">:</span><span class=\"mi\">110</span><span class=\"o\">:</span> <span class=\"kt\">undefined</span> <span class=\"kt\">reference</span> <span class=\"kt\">to</span> <span class=\"sb\">`std::__throw_bad_array_new_length()'</span>\n<span class=\"sb\">/usr/bin/ld: ./llvm-late-gc-lowering.o:/usr/include/c++/11.1.0/ext/new_allocator.h:110: more undefined references to `</span><span class=\"sa\">std</span><span class=\"o\">::</span><span class=\"kt\">__throw_bad_array_new_length</span><span class=\"p\">()</span><span class=\"o\">'</span> <span class=\"kt\">follow</span>\n<span class=\"kt\">collect2</span><span class=\"o\">:</span> <span class=\"kt\">Fehler</span><span class=\"o\">:</span> <span class=\"kt\">ld</span> <span class=\"kt\">gab</span> <span class=\"mi\">1</span> <span class=\"kt\">als</span> <span class=\"kt\">Ende</span><span class=\"o\">-</span><span class=\"kt\">Status</span> <span class=\"kt\">zurück</span>\n<span class=\"kt\">make</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"o\">***</span> <span class=\"p\">[</span><span class=\"kt\">Makefile</span><span class=\"o\">:</span><span class=\"mi\">300</span><span class=\"o\">:</span> <span class=\"o\">/</span><span class=\"kt\">home</span><span class=\"o\">/</span><span class=\"kt\">max</span><span class=\"o\">/</span><span class=\"kt\">repos</span><span class=\"o\">/</span><span class=\"kt\">julia</span><span class=\"o\">/</span><span class=\"kt\">usr</span><span class=\"o\">/</span><span class=\"kt\">lib</span><span class=\"o\">/</span><span class=\"kt\">libjulia</span><span class=\"o\">-</span><span class=\"kt\">internal</span><span class=\"o\">.</span><span class=\"kt\">so</span><span class=\"mf\">.1.8</span><span class=\"p\">]</span> <span class=\"kt\">Fehler</span> <span class=\"mi\">1</span>\n<span class=\"kt\">make</span><span class=\"o\">:</span> <span class=\"o\">***</span> <span class=\"p\">[</span><span class=\"kt\">Makefile</span><span class=\"o\">:</span><span class=\"mi\">76</span><span class=\"o\">:</span> <span class=\"kt\">julia</span><span class=\"o\">-</span><span class=\"kt\">src</span><span class=\"o\">-</span><span class=\"kt\">release</span><span class=\"p\">]</span> <span class=\"kt\">Fehler</span> <span class=\"mi\">2</span>\n</code></pre></div>",
        "id": 242943015,
        "sender_full_name": "Max Köhler",
        "timestamp": 1623877439
    },
    {
        "content": "<p>Actually, libjulia-internal is linked to an internal libstdc++. So, I'm not sure why the build process is trying to access the header installed system-wide.</p>",
        "id": 242943106,
        "sender_full_name": "Takafumi Arakaki (tkf)",
        "timestamp": 1623877481
    },
    {
        "content": "<p>See <a href=\"https://github.com/JuliaLang/julia/issues/40703\">https://github.com/JuliaLang/julia/issues/40703</a></p>",
        "id": 242951405,
        "sender_full_name": "Simeon Schaub",
        "timestamp": 1623882579
    },
    {
        "content": "<p>I just installed <code>gcc10</code> and followed these instructions: <a href=\"https://github.com/JuliaLang/julia/issues/40703#issuecomment-847903078\">https://github.com/JuliaLang/julia/issues/40703#issuecomment-847903078</a></p>",
        "id": 242951487,
        "sender_full_name": "Simeon Schaub",
        "timestamp": 1623882622
    },
    {
        "content": "<p>I know that <span class=\"user-mention\" data-user-id=\"269186\">@Mosè Giordano</span> is currently working on compiling gcc11 for Yggdrasil, which should fix this.</p>",
        "id": 242951569,
        "sender_full_name": "Simeon Schaub",
        "timestamp": 1623882688
    },
    {
        "content": "<p>Nice, thanks!</p>",
        "id": 242952098,
        "sender_full_name": "Mason Protter",
        "timestamp": 1623883009
    },
    {
        "content": "<p>Yeah, if I manage to fix gcc 11 for macOS, it's an ungodly mess</p>",
        "id": 242952694,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1623883389
    },
    {
        "content": "<p>And after 4 hours of debugging I'm about to give up, the source code of GCC doesn't make any sense to me, I fail to see how things can possibly work</p>",
        "id": 242963053,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1623892498
    },
    {
        "content": "<p>For the record, I ended up opening an issue in GCC, my modest understanding is that it's broken. And the broken component (libasan) actually comes from llvm. So don't hold your breath for a fix directly in Julia anytime soon</p>",
        "id": 243080715,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1623962127
    },
    {
        "content": "<p>Wait. You're telling me that even when building Julia is broken because of gcc, it's still because of llvm!? Julia and llvm certainly have a <em>special</em> relationship.</p>",
        "id": 243081305,
        "sender_full_name": "Adam non-jedi Beckmeyer",
        "timestamp": 1623962382
    },
    {
        "content": "<p>Yeah, I was surprised as well, but they apparently bundle some stuff maintained in llvm-project</p>",
        "id": 243082246,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1623962781
    },
    {
        "content": "<p>In fact I was unsure where to open the issue: in gcc (I got the error when building gcc) or llvm (the code is actually maintained there)? I went with gcc for the time being and maybe I'll escalate to llvm if I don't get answers in a few days. I really don't understand how this piece of code can work at all</p>",
        "id": 243082552,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1623962940
    },
    {
        "content": "<p>Big yikes</p>",
        "id": 243083133,
        "sender_full_name": "Mason Protter",
        "timestamp": 1623963204
    },
    {
        "content": "<p>in case someone with more C-fu than me wants to  have a look and help out, this is the issue:</p>\n<p>functions <code>__lsan_is_turned_off</code> and <code>__lsan_default_suppressions</code> are implemented at <a href=\"https://github.com/gcc-mirror/gcc/blob/6816a44dfe1b5fa9414490a18a4aa723b6f38f18/libsanitizer/lsan/lsan_common.cpp#L1042-L1052\">https://github.com/gcc-mirror/gcc/blob/6816a44dfe1b5fa9414490a18a4aa723b6f38f18/libsanitizer/lsan/lsan_common.cpp#L1042-L1052</a> in a <code>#if !SANITIZER_SUPPORTS_WEAK_HOOKS</code> guard, so if <code>SANITIZER_SUPPORTS_WEAK_HOOKS</code> is 1 these functions aren't implemented at all.  the problem is that these functions are used unconditionally in the same file and  <code>SANITIZER_SUPPORTS_WEAK_HOOKS</code> on macOS with SDK &gt;= 10.9 (we use 10.12) is 1 (<a href=\"https://github.com/gcc-mirror/gcc/blob/487be9201c96d0a5c7c325339bc9c4916e933ed8/libsanitizer/sanitizer_common/sanitizer_internal_defs.h#L76-L78\">https://github.com/gcc-mirror/gcc/blob/487be9201c96d0a5c7c325339bc9c4916e933ed8/libsanitizer/sanitizer_common/sanitizer_internal_defs.h#L76-L78</a>)</p>",
        "id": 243084831,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1623963963
    },
    {
        "content": "<p>to add more confusion, these symbols are annotated as <a href=\"https://en.wikipedia.org/wiki/Weak_symbol\">weak</a> in the <a href=\"https://github.com/gcc-mirror/gcc/blob/6816a44dfe1b5fa9414490a18a4aa723b6f38f18/libsanitizer/lsan/lsan_common.h#L277-L281\">header file</a>.  this seems to work when building for Linux (I can see the weak symbol is <code>libasan.so</code>), but not macOS <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span> <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span></p>\n<p><em>Edit</em>: new working hypothesis is that it's the intermediate cross-compiler that is \"broken\" and isn't generating weak symbols correctly</p>",
        "id": 243089417,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1623966443
    },
    {
        "content": "<p>for the record, I found the error in GCC build system, fixed it in Yggdrasil and submitted the patch upstream.  GCC 11 will come soon <span aria-label=\"tm\" class=\"emoji emoji-2122\" role=\"img\" title=\"tm\">:tm:</span>  in Julia</p>",
        "id": 243217595,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1624060597
    },
    {
        "content": "<p>My hero</p>",
        "id": 243218930,
        "sender_full_name": "Mason Protter",
        "timestamp": 1624062804
    }
]