[
    {
        "content": "<p>Hello: </p>\n<p>I am attempting to edit the row values using a for loop with the <br>\nfollowing block (using DataFrames) in <a href=\"https://github.com/search?q=Pluto.jl&amp;type=Repositories\">Pluto.jl</a> as: </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">begin</span>\n    <span class=\"n\">dateformat</span> <span class=\"o\">=</span> <span class=\"n\">DateFormat</span><span class=\"p\">(</span><span class=\"s\">\"y-m\"</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"kp\">in</span> <span class=\"n\">eachrow</span><span class=\"p\">(</span><span class=\"n\">DF</span><span class=\"p\">)</span>\n        <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"o\">:</span><span class=\"n\">Name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"o\">:</span><span class=\"n\">Name</span><span class=\"p\">],</span> <span class=\"s\">\"M\"</span><span class=\"o\">=&gt;</span><span class=\"s\">\"-\"</span><span class=\"p\">)</span>\n        <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"o\">:</span><span class=\"n\">Name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">-&gt;</span> <span class=\"kt\">Date</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">dateformat</span><span class=\"p\">),</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"o\">:</span><span class=\"n\">Name</span><span class=\"p\">])</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>The goal is to replace the M values with '-' in the first column<br>\nAND <br>\nto format the first column so that it is in the \"y-m\" date format. </p>\n<p>Any suggestions out there?</p>",
        "id": 226595547,
        "sender_full_name": "QuBit",
        "timestamp": 1613519141
    },
    {
        "content": "<p>Suggest you do</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"o\">!</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">Name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">)</span> <span class=\"k\">do</span> <span class=\"n\">n</span>\n    <span class=\"kt\">Date</span><span class=\"p\">(</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"s\">\"M\"</span><span class=\"o\">=&gt;</span><span class=\"s\">\"-\"</span><span class=\"p\">),</span> <span class=\"n\">dateformat</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>This is pretty close to what you wrote, the main difference is that it is a purely column-wise operations and does not iterate over rows.  Since DataFrames doesn't hold information on the types of it's columns, it's much more efficient if you can avoid iterating over rows.  To start out, a good rule of thumb is, if what you are doing only involves one column, you should use that column as you would any other <code>AbstractVector</code>.</p>",
        "id": 226597638,
        "sender_full_name": "Expanding Man",
        "timestamp": 1613520805
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"269446\">Expanding Man</span> <a href=\"#narrow/stream/274208-helpdesk-(published)/topic/Iterating.20Replacements.20Over.20Rows/near/226597638\">said</a>:</p>\n<blockquote>\n<p>Suggest you do</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"o\">!</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">Name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">)</span> <span class=\"k\">do</span> <span class=\"n\">n</span>\n    <span class=\"kt\">Date</span><span class=\"p\">(</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"s\">\"M\"</span><span class=\"o\">=&gt;</span><span class=\"s\">\"-\"</span><span class=\"p\">),</span> <span class=\"n\">dateformat</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>This is pretty close to what you wrote, the main difference is that it is a purely column-wise operations and does not iterate over rows.  Since DataFrames doesn't hold information on the types of it's columns, it's much more efficient if you can avoid iterating over rows.  To start out, a good rule of thumb is, if what you are doing only involves one column, you should use that column as you would any other <code>AbstractVector</code>.</p>\n</blockquote>\n<p>Thank You -- this worked! To paraphrase -- Iterate down a column <br>\nrather than across because data can differ horizontally and could <br>\nbe less efficient to analyze. The complete code would be: </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">begin</span>\n    <span class=\"n\">dateformat</span> <span class=\"o\">=</span> <span class=\"n\">DateFormat</span><span class=\"p\">(</span><span class=\"s\">\"y-m\"</span><span class=\"p\">)</span>\n    <span class=\"n\">SpendDF</span><span class=\"p\">[</span><span class=\"o\">!</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">State</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">SpendDF</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">)</span> <span class=\"k\">do</span> <span class=\"n\">n</span>\n        <span class=\"kt\">Date</span><span class=\"p\">(</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"s\">\"M\"</span><span class=\"o\">=&gt;</span><span class=\"s\">\"-\"</span><span class=\"p\">),</span> <span class=\"n\">dateformat</span><span class=\"p\">)</span>\n    <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
        "id": 226634209,
        "sender_full_name": "QuBit",
        "timestamp": 1613555375
    },
    {
        "content": "<p>Hello Coders: </p>\n<p>I am  attempting to replace values in my dataframe using: </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">begin</span>\n<span class=\"k\">for</span> <span class=\"n\">col</span> <span class=\"kp\">in</span> <span class=\"n\">eachcol</span><span class=\"p\">(</span><span class=\"n\">ED3</span><span class=\"p\">)</span>\n    <span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">col</span><span class=\"p\">,</span> <span class=\"s\">\"---\"</span> <span class=\"o\">=&gt;</span> <span class=\"nb\">NaN</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n    <span class=\"n\">first</span><span class=\"p\">(</span><span class=\"n\">ED3</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>The code executes, but I am not seeing any changes <br>\namong the records. The idea is to convert all the cells<br>\ncontaining \"---\" to \"NaN\". </p>\n<p>I have attempted, but was unsuccessful using : </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">ED3</span><span class=\"p\">[</span><span class=\"n\">ED3</span> <span class=\"o\">.=&gt;</span> <span class=\"s\">\"---\"</span><span class=\"p\">]</span> <span class=\"o\">.=</span> <span class=\"nb\">NaN</span>\n</code></pre></div>\n<p>Any suggestions?</p>",
        "id": 228199330,
        "sender_full_name": "QuBit",
        "timestamp": 1614589849
    },
    {
        "content": "<p>Try <code>DataFrames.transform</code>. In general, anything which is a common thing to do has a builtin function with (imo) very nice syntax.</p>",
        "id": 228201570,
        "sender_full_name": "DrChainsaw",
        "timestamp": 1614591231
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300483\">DrChainsaw</span> <a href=\"#narrow/stream/274208-helpdesk-(published)/topic/Iterating.20Replacements.20Over.20Rows/near/228201570\">said</a>:</p>\n<blockquote>\n<p>Try <code>DataFrames.transform</code>. In general, anything which is a common thing to do has a builtin function with (imo) very nice syntax.</p>\n</blockquote>\n<p>Hi Dr., </p>\n<p>Would you say: <br>\ndf.transform(DF, \"---\" =&gt; \"NaN\"], to implement the change for the whole of DF?</p>",
        "id": 228201714,
        "sender_full_name": "QuBit",
        "timestamp": 1614591316
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300483\">DrChainsaw</span> <a href=\"#narrow/stream/274208-helpdesk-(published)/topic/Iterating.20Replacements.20Over.20Rows/near/228201570\">said</a>:</p>\n<blockquote>\n<p>Try <code>DataFrames.transform</code>. In general, anything which is a common thing to do has a builtin function with (imo) very nice syntax.</p>\n</blockquote>\n<p>From the code: </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">ED3</span><span class=\"p\">[</span><span class=\"o\">!</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"p\">],</span> <span class=\"s\">\"---\"</span> <span class=\"o\">.=&gt;</span> <span class=\"nb\">NaN</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>The error message I get reads:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"kt\">ArgumentError</span><span class=\"o\">:</span> <span class=\"n\">Unrecognized</span> <span class=\"n\">column</span> <span class=\"n\">selector</span><span class=\"o\">:</span> <span class=\"s\">\"---\"</span> <span class=\"o\">=&gt;</span> <span class=\"nb\">NaN</span>\n</code></pre></div>",
        "id": 228202102,
        "sender_full_name": "QuBit",
        "timestamp": 1614591517
    }
]