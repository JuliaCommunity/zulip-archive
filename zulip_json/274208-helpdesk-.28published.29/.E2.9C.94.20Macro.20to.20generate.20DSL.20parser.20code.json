[
    {
        "content": "<p>You can programmatically generate the regex. A similar option is to use <a href=\"https://juliaregistries.github.io/General/packages/redirect_to_repo/Automa\">Automa.jl</a> to do this, which is a pure Julia regex engine</p>",
        "id": 547784994,
        "sender_full_name": "Jakob Nybo Nissen",
        "timestamp": 1761762019
    },
    {
        "content": "<p>Thanks, I did this based on this examle:<br>\n<a href=\"https://github.com/wdebeaum/PEG.jl/blob/master/test/calculator.jl\">https://github.com/wdebeaum/PEG.jl/blob/master/test/calculator.jl</a></p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">PEG</span>\n\n<span class=\"nd\">@rule</span><span class=\"w\"> </span><span class=\"n\">Word</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sa\">r</span><span class=\"sr\">\"</span><span class=\"err\">\\</span><span class=\"sr\">w+</span><span class=\"err\">\\</span><span class=\"sr\">*\"</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">occursin</span><span class=\"p\">(</span><span class=\"kt\">Regex</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\\\</span><span class=\"s\">b</span><span class=\"si\">$</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"k\">end</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]))</span><span class=\"s\">\"</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"p\">)),</span><span class=\"w\"> </span><span class=\"c\"># prefix*</span>\n<span class=\"w\">    </span><span class=\"sa\">r</span><span class=\"sr\">\"</span><span class=\"err\">\\</span><span class=\"sr\">w+\"</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">occursin</span><span class=\"p\">(</span><span class=\"kt\">Regex</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\\\</span><span class=\"s\">b</span><span class=\"si\">$</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">))</span><span class=\"se\">\\\\</span><span class=\"s\">b\"</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"p\">)),</span><span class=\"w\"> </span><span class=\"c\"># word</span>\n<span class=\"w\">    </span><span class=\"sa\">r</span><span class=\"sr\">\"</span><span class=\"err\">\\</span><span class=\"sr\">(\"</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">Add</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"sa\">r</span><span class=\"sr\">\"</span><span class=\"err\">\\</span><span class=\"sr\">)\"</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">-&gt;</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"c\"># (a)</span>\n<span class=\"nd\">@rule</span><span class=\"w\"> </span><span class=\"n\">Neg</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sa\">r</span><span class=\"sr\">\"!\"</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">Word</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"o\">-&gt;:</span><span class=\"p\">(</span><span class=\"o\">!$</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]))</span><span class=\"w\"> </span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Word</span><span class=\"w\"> </span><span class=\"c\"># !a</span>\n<span class=\"nd\">@rule</span><span class=\"w\"> </span><span class=\"n\">Mul</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Neg</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"sr\">\"[/&amp;]\"</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">Neg</span><span class=\"p\">)[</span><span class=\"o\">*</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">do_op</span><span class=\"w\"> </span><span class=\"c\"># a&amp;b</span>\n<span class=\"nd\">@rule</span><span class=\"w\"> </span><span class=\"n\">Add</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Mul</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"sr\">\"[+-|]\"</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">Mul</span><span class=\"p\">)[</span><span class=\"o\">*</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">do_op</span><span class=\"w\"> </span><span class=\"c\"># a|b</span>\n\n<span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">do_op</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">op_v_pairs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span>\n<span class=\"w\">    </span><span class=\"n\">expr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"w\"> </span><span class=\"o\">$</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">op</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">op_v_pairs</span>\n<span class=\"w\">        </span><span class=\"n\">sym_op</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">Symbol</span><span class=\"p\">(</span><span class=\"n\">op</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"n\">expr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"w\"> </span><span class=\"o\">$</span><span class=\"p\">(</span><span class=\"n\">sym_op</span><span class=\"p\">)(</span><span class=\"o\">$</span><span class=\"p\">(</span><span class=\"n\">expr</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">$</span><span class=\"p\">(</span><span class=\"n\">v2</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">end</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">expr</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">pattern1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"Julia&amp;lang*&amp;!Roberts\"</span>\n<span class=\"c\"># @info parse_whole(Add, pattern1)</span>\n<span class=\"nd\">@generated</span><span class=\"w\"> </span><span class=\"n\">compiled_pattern1</span><span class=\"p\">(</span><span class=\"n\">str</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">parse_whole</span><span class=\"p\">(</span><span class=\"n\">Add</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">pattern1</span><span class=\"p\">)</span>\n\n<span class=\"n\">compiled_pattern1</span><span class=\"p\">(</span><span class=\"s\">\"Julia Roberts\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c\"># == false</span>\n<span class=\"n\">compiled_pattern1</span><span class=\"p\">(</span><span class=\"s\">\"Julia language\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c\"># == true</span>\n</code></pre></div>",
        "id": 547809222,
        "sender_full_name": "Viktor G.",
        "timestamp": 1761770976
    },
    {
        "content": "<p>Also added macro to skip function definitions:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"nd\">@generated</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">check_str_compiled</span><span class=\"p\">(</span><span class=\"n\">str</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"kt\">Val</span><span class=\"p\">{</span><span class=\"kt\">pattern</span><span class=\"p\">})</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"kt\">pattern</span>\n<span class=\"w\">    </span><span class=\"n\">parse_whole</span><span class=\"p\">(</span><span class=\"n\">Add</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">String</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">))</span>\n<span class=\"k\">end</span>\n\n<span class=\"k\">macro</span><span class=\"w\"> </span><span class=\"n\">check_str</span><span class=\"p\">(</span><span class=\"n\">str</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">pattern</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">check_str_compiled</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">str</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Val</span><span class=\"p\">(</span><span class=\"kt\">Symbol</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">pattern</span><span class=\"p\">))))</span>\n<span class=\"k\">end</span>\n\n<span class=\"nd\">@check_str</span><span class=\"p\">(</span><span class=\"s\">\"Julia language\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Julia&amp;lang*&amp;!Roberts\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">true</span>\n<span class=\"nd\">@check_str</span><span class=\"p\">(</span><span class=\"s\">\"Julia Roberts\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Julia&amp;lang*&amp;!Roberts\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">false</span>\n</code></pre></div>",
        "id": 547826992,
        "sender_full_name": "Viktor G.",
        "timestamp": 1761779253
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"365725\">Viktor G.</span> has marked this topic as resolved.</p>",
        "id": 547828197,
        "sender_full_name": "Notification Bot",
        "timestamp": 1761779945
    }
]