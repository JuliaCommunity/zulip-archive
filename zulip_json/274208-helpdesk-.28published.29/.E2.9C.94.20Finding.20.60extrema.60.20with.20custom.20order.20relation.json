[
    {
        "content": "<p>Suppose I have a vector of objects that implement a partial order <code>&lt;</code> It is not a total order as implemented in <code>isless</code>.</p>\n<p>How can I find the <code>extrema</code> of this vector with this custom <code>&lt;</code>? Is there an alternative function that is not hard-coded with <code>isless</code>?</p>",
        "id": 505746660,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1741978450
    },
    {
        "content": "<p>I think you can just write</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">my_extrema</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">itr</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">kwargs</span><span class=\"o\">...</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">mapreduce</span><span class=\"p\">(</span><span class=\"n\">my_extrema_op</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">itr</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">kwargs</span><span class=\"o\">...</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span><span class=\"n\">x</span>\n<span class=\"w\">    </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">my_extrema_op</span><span class=\"p\">((</span><span class=\"n\">min1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">max1</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">max2</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">my_min</span><span class=\"p\">(</span><span class=\"n\">min1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">min2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">my_max</span><span class=\"p\">(</span><span class=\"n\">max1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">max2</span><span class=\"p\">))</span>\n\n<span class=\"n\">my_min</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ifelse</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">my_max</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ifelse</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 505758894,
        "sender_full_name": "Mason Protter",
        "timestamp": 1741983112
    },
    {
        "content": "<p>That's a rough copy of the code here: <a href=\"https://github.com/JuliaLang/julia/blob/master/base/reduce.jl#L844-L854\">https://github.com/JuliaLang/julia/blob/master/base/reduce.jl#L844-L854</a>  but using <code>my_min</code> and <code>my_max</code> that should utilize <code>&lt;</code> rather than <code>isless</code>.</p>",
        "id": 505759206,
        "sender_full_name": "Mason Protter",
        "timestamp": 1741983219
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"269150\">@Mason Protter</span>. I think the issue is still open regarding the customization of <code>isless</code> in Base functions.</p>",
        "id": 505761595,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1741984166
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"273172\">Júlio Hoffimann</span> has marked this topic as resolved.</p>",
        "id": 505761600,
        "sender_full_name": "Notification Bot",
        "timestamp": 1741984171
    }
]