[
    {
        "content": "<p>Hello Everyone: </p>\n<p>Might you all know how to approach the following problem: </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">RugratsDF</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"p\">]</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">Rugrats</span><span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"p\">]</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">rng</span> <span class=\"o\">=</span> <span class=\"n\">StableRNGs</span><span class=\"p\">(</span><span class=\"mi\">78</span><span class=\"p\">)</span>\n    <span class=\"n\">train</span><span class=\"p\">,</span> <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"n\">eachindex</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">),</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"nb\">true</span><span class=\"p\">,</span> <span class=\"n\">rng</span><span class=\"o\">=</span><span class=\"n\">rng</span><span class=\"p\">)</span>\n    <span class=\"n\">test</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>Is returning the following error: </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"kt\">MethodError</span><span class=\"o\">:</span> <span class=\"n\">objects</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"kt\">Module</span> <span class=\"n\">are</span> <span class=\"n\">not</span> <span class=\"n\">callable</span>\n</code></pre></div>\n<p>Any suggestions out there?</p>",
        "id": 245895738,
        "sender_full_name": "QuBit",
        "timestamp": 1626213960
    },
    {
        "content": "<p><code>StableRNGs(78)</code> should probably be <code>StableRNG(78)</code>?</p>",
        "id": 245895869,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1626214060
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"272644\">Fredrik Ekre</span> </p>\n<p>Thought so also, but the package name<br>\nI imported was 'StableRNGs'. When I make <br>\nthe change you suggest, I get: </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"kt\">MethodError</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">method</span> <span class=\"n\">matching</span> <span class=\"n\">keys</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">DataFrames</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>Thoughts?</p>",
        "id": 245896245,
        "sender_full_name": "QuBit",
        "timestamp": 1626214294
    },
    {
        "content": "<blockquote>\n<p>but the package name I imported was 'StableRNGs'</p>\n</blockquote>\n<p>Yes, but you can't use package names like functions.</p>\n<blockquote>\n<p>When I make the change you suggest, I get ...</p>\n</blockquote>\n<p>Perhaps dataframes does not support <code>eachindex</code>? Difficult to know whats wrong when you don't post the stacktrace.</p>",
        "id": 245896447,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1626214434
    },
    {
        "content": "<p>What do you mean there is no stacktrace?</p>",
        "id": 245897709,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1626215318
    },
    {
        "content": "<p>The stacktrace usually contain information about where the error originates from and is crucual when trying to debug something. I tried just now in Pluto and I see a stacktrace:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"kt\">MethodError</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">method</span> <span class=\"n\">matching</span> <span class=\"n\">keys</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">DataFrames</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">)</span>\n<span class=\"n\">Closest</span> <span class=\"n\">candidates</span> <span class=\"n\">are</span><span class=\"o\">:</span>\n<span class=\"n\">keys</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">Matched</span><span class=\"o\">::</span><span class=\"kt\">Union</span><span class=\"p\">{</span><span class=\"kt\">Tables</span><span class=\"o\">.</span><span class=\"kt\">AbstractColumns</span><span class=\"p\">,</span> <span class=\"kt\">Tables</span><span class=\"o\">.</span><span class=\"kt\">AbstractRow</span><span class=\"p\">})</span> <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">fredrik</span><span class=\"o\">/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Tables</span><span class=\"o\">/</span><span class=\"n\">gg6Id</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Tables</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">181</span>\n<span class=\"n\">keys</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">Matched</span><span class=\"o\">::</span><span class=\"kt\">DataFrames</span><span class=\"o\">.</span><span class=\"n\">GroupedDataFrame</span><span class=\"p\">)</span> <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">fredrik</span><span class=\"o\">/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">DataFrames</span><span class=\"o\">/</span><span class=\"n\">vQokV</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">groupeddataframe</span><span class=\"o\">/</span><span class=\"n\">groupeddataframe</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">839</span>\n<span class=\"n\">keys</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">Matched</span><span class=\"o\">::</span><span class=\"kt\">IOContext</span><span class=\"p\">)</span> <span class=\"n\">at</span> <span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">344</span>\n<span class=\"o\">...</span>\n  <span class=\"mf\">1.</span> <span class=\"n\">eachindex</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">DataFrames</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">)</span>    <span class=\"err\">@</span>    <span class=\"n\">abstractarray</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">253</span>\n  <span class=\"mf\">2.</span> <span class=\"n\">top</span><span class=\"o\">-</span><span class=\"n\">level</span> <span class=\"n\">scope</span>    <span class=\"err\">@</span>    <span class=\"n\">Local</span><span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"p\">[</span><span class=\"n\">inlined</span><span class=\"p\">]</span>\n</code></pre></div>",
        "id": 245898321,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1626215741
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"272644\">Fredrik Ekre</span> </p>\n<p>Did you test the original code I shared? </p>\n<p>If so, what was the stacktrace for that? <br>\nBecause on my machine, it only reads : </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"kt\">MethodError</span><span class=\"o\">:</span> <span class=\"n\">objects</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"kt\">Module</span> <span class=\"n\">are</span> <span class=\"n\">not</span> <span class=\"n\">callable</span>\n</code></pre></div>",
        "id": 245898788,
        "sender_full_name": "QuBit",
        "timestamp": 1626216029
    },
    {
        "content": "<p>No I didn't, but I thought you already fixed that error? <a href=\"#narrow/stream/274208-helpdesk-.28published.29/topic/Method.20Error.3A.20objects.20of.20type.20Module.20are.20not.20callable/near/245895869\">https://julialang.zulipchat.com/#narrow/stream/274208-helpdesk-.28published.29/topic/Method.20Error.3A.20objects.20of.20type.20Module.20are.20not.20callable/near/245895869</a></p>",
        "id": 245898841,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1626216097
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"272644\">Fredrik Ekre</span></p>\n<p>I did not, was only testing out other approaches.</p>",
        "id": 245898951,
        "sender_full_name": "QuBit",
        "timestamp": 1626216150
    },
    {
        "content": "<p>Ok</p>",
        "id": 245899030,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1626216210
    },
    {
        "content": "<p>Solved: </p>\n<p>Convert RugratsDF to array via:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"kt\">Array</span><span class=\"p\">(</span><span class=\"n\">RugratsDF</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"p\">])</span>\n<span class=\"o\">.</span>\n<span class=\"o\">.</span>\n<span class=\"o\">.</span>\n</code></pre></div>",
        "id": 245902439,
        "sender_full_name": "QuBit",
        "timestamp": 1626218726
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"390081\">QuBit</span> has marked this topic as resolved.</p>",
        "id": 246177778,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626401525
    }
]