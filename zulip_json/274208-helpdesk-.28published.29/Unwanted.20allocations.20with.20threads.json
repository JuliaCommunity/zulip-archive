[
    {
        "content": "<p>The two functions below differ by the <code>Threads.@threads</code> annotation:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">update1!</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">m</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">n</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">m</span>\n<span class=\"w\">      </span><span class=\"nd\">@inbounds</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">end</span>\n<span class=\"w\">  </span><span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">update2!</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">m</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">Threads</span><span class=\"o\">.</span><span class=\"nd\">@threads</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">n</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">m</span>\n<span class=\"w\">      </span><span class=\"nd\">@inbounds</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">end</span>\n<span class=\"w\">  </span><span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>I get the following results with 8 threads:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">BenchmarkTools</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"p\">);</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nd\">@btime</span><span class=\"w\"> </span><span class=\"n\">update1!</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mf\">159.424</span><span class=\"w\"> </span><span class=\"n\">μs</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">allocations</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">)</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nd\">@btime</span><span class=\"w\"> </span><span class=\"n\">update2!</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mf\">24.672</span><span class=\"w\"> </span><span class=\"n\">μs</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"w\"> </span><span class=\"n\">allocations</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mf\">4.25</span><span class=\"w\"> </span><span class=\"n\">KiB</span><span class=\"p\">)</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nd\">@allocated</span><span class=\"w\"> </span><span class=\"n\">update1!</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"mi\">0</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nd\">@allocated</span><span class=\"w\"> </span><span class=\"n\">update2!</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"mi\">4720</span>\n</code></pre></div>\n<p>Is this expected behavior? Any way to avoid the allocations? I need to call this function some tens of millions of times in a hot loop.</p>",
        "id": 527216985,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751650427
    },
    {
        "content": "<p>Yes, it's expected since new tasks need to be allocated. If you're calling this inside a hot loop though, why not thread the outer loop? That will almost certainly be faster</p>",
        "id": 527217630,
        "sender_full_name": "Simeon Schaub",
        "timestamp": 1751650844
    },
    {
        "content": "<p>The outer loop is very high up in the abstraction layers. This function lives in a package and the outer loop lives in another separate package, for instance.</p>",
        "id": 527217726,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751650910
    },
    {
        "content": "<p>I will benchmark the other package to see the impact.</p>",
        "id": 527217864,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751651025
    },
    {
        "content": "<p>Unfortunately the performance decreases using threads due to the allocations.</p>",
        "id": 527218768,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751651696
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"273172\">Júlio Hoffimann</span> <a href=\"#narrow/stream/274208-helpdesk-.28published.29/topic/Unwanted.20allocations.20with.20threads/near/527218768\">said</a>:</p>\n<blockquote>\n<p>Unfortunately the performance decreases using threads due to the allocations.</p>\n</blockquote>\n<p>That suggests that the body of the loop isn't expensive enough to make spawning tasks worth it. Do more work inside each task</p>",
        "id": 527222071,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1751653955
    },
    {
        "content": "<p>My original idea was to gain performance in the inner function <em>and</em> in the outer function as a consequence. The issue is that the inner allocations decrease the outer performance. The inner function is much faster with threads.</p>",
        "id": 527222256,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751654121
    },
    {
        "content": "<p>If this is the actual function and not just an example, you could try</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">update3!</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">m</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">.=</span><span class=\"w\"> </span><span class=\"n\">sin</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">m</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">.=</span><span class=\"w\"> </span><span class=\"n\">cos</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"o\">.=</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">.*</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"o\">'</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">m1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">n1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">100</span>\n<span class=\"go\">100</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">m1</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">n1</span><span class=\"p\">);</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"nd\">@btime</span><span class=\"w\"> </span><span class=\"n\">update2!</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">setup</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">m1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n1</span><span class=\"p\">));</span>\n<span class=\"go\">  40.200 μs (42 allocations: 5.00 KiB)</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"nd\">@btime</span><span class=\"w\"> </span><span class=\"n\">update3!</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">$</span><span class=\"n\">s</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">$</span><span class=\"n\">c</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">setup</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">m1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n1</span><span class=\"p\">));</span>\n<span class=\"go\">  2.500 μs (0 allocations: 0 bytes)</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">m1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n1</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">similar</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">);</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">update1!</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">update3!</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">);</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">B</span>\n<span class=\"go\">true</span>\n</code></pre></div>",
        "id": 527250491,
        "sender_full_name": "wheeheee",
        "timestamp": 1751686683
    },
    {
        "content": "<p>That is interesting. Broadcasting is faster than using multiple threads in this case? Why?</p>\n<p>Unfortunately my use case is not that simple.</p>",
        "id": 527265960,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751705965
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"273172\">Júlio Hoffimann</span> <a href=\"#narrow/stream/274208-helpdesk-.28published.29/topic/Unwanted.20allocations.20with.20threads/near/527265960\">said</a>:</p>\n<blockquote>\n<p>That is interesting. Broadcasting is faster than using multiple threads in this case? Why?</p>\n</blockquote>\n<p>Again, because of the overhead of spawning tasks in the first place. Actual numbers strongly depend on your system, but expect spawning a task to be of the order of ~microseconds: if your entire function takes 2 microseconds to run, even spawning a single task would kill performance, if you spawn multiple of them that'd completely dwarf the actual computing time.</p>\n<p>Again, to make multithreading worth it you need to do substantial computations within each task, something which takes much more than ~microseconds</p>",
        "id": 527269768,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1751710645
    },
    {
        "content": "<p>See the section \"Multi-threading: is it always worth it?\" of <a href=\"https://github.com/JuliaParallel/julia-hpc-tutorial-sc24/blob/9d2c54a52cc38f7f0159be79591232575333b7c9/parts/multithreading/multithreading.ipynb\">https://github.com/JuliaParallel/julia-hpc-tutorial-sc24/blob/9d2c54a52cc38f7f0159be79591232575333b7c9/parts/multithreading/multithreading.ipynb</a></p>",
        "id": 527269839,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1751710752
    },
    {
        "content": "<p>A very tall matrix (many more rows than columns, ideally with at least tens or hundreds of thousands of rows) may benefit from multithreading, but for a square matrix with just 100 rows you won't see any benefit</p>",
        "id": 527270029,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1751711041
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"273172\">Júlio Hoffimann</span> <a href=\"#narrow/channel/274208-helpdesk-.28published.29/topic/Unwanted.20allocations.20with.20threads/near/527265960\">said</a>:</p>\n<blockquote>\n<p>That is interesting. Broadcasting is faster than using multiple threads in this case? Why?</p>\n<p>Unfortunately my use case is not that simple.</p>\n</blockquote>\n<p>I don't see that broadcasting is faster? As you said, whatever is in the loop you actually do isn't as simple as a separable function like <code>sin(i) * cos(j)</code> in this example.</p>\n<p>Anyway, I think you might be looking for <a href=\"https://github.com/JuliaSIMD/Polyester.jl\">Polyester.jl</a>. It doesn't allocate. If that doesn't help you that much, I would take Mosè's advice...</p>",
        "id": 527270142,
        "sender_full_name": "wheeheee",
        "timestamp": 1751711175
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"269186\">@Mosè Giordano</span> I think I'm missing something here. My example with <code>update1!</code> and <code>update2!</code> shows that threads improve the performance. The code with broadcasting called <code>update3!</code>beats both.</p>",
        "id": 527270223,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751711258
    },
    {
        "content": "<p>In other words, <code>update2!</code> shows that tasks have enough work. But <code>update3!</code> beats it.</p>",
        "id": 527270300,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751711357
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"670625\">@wheeheee</span> oh I see the issue now! The <code>update3!</code> assumes separability of the kernel.</p>",
        "id": 527270386,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751711442
    },
    {
        "content": "<p>It is doing less computation.</p>",
        "id": 527270394,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751711454
    },
    {
        "content": "<p>I'll produce a complete MWE with the outer loop I mentioned before to see if you have improvement suggestions.</p>",
        "id": 527270433,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751711482
    },
    {
        "content": "<p>The threaded performance is a function of the <code>kernel</code> function, the  size <code>n</code> of the problem and the number of threads. On my machine, the threaded <code>update2!</code> only becomes advantageous with <code>n&gt;90</code> when running with <code>8</code> threads:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">BenchmarkTools</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">StaticArrays</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">Distances</span>\n\n<span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">kernel</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">u</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SVector</span><span class=\"p\">(</span><span class=\"n\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">float</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">))</span>\n<span class=\"w\">  </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SVector</span><span class=\"p\">(</span><span class=\"n\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">float</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"w\">  </span><span class=\"n\">euclidean</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n\n<span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">update1!</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">m</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">n</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">m</span>\n<span class=\"w\">      </span><span class=\"nd\">@inbounds</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">kernel</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">end</span>\n<span class=\"w\">  </span><span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">update2!</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">m</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">Threads</span><span class=\"o\">.</span><span class=\"nd\">@threads</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">n</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">m</span>\n<span class=\"w\">      </span><span class=\"nd\">@inbounds</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">kernel</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">end</span>\n<span class=\"w\">  </span><span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">Threads</span><span class=\"o\">.</span><span class=\"n\">nthreads</span><span class=\"p\">()</span>\n\n<span class=\"n\">results</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span><span class=\"mi\">150</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span><span class=\"n\">n</span>\n<span class=\"w\">  </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">median</span><span class=\"p\">(</span><span class=\"nd\">@benchmark</span><span class=\"w\"> </span><span class=\"n\">update1!</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">A</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">time</span>\n<span class=\"w\">  </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">median</span><span class=\"p\">(</span><span class=\"nd\">@benchmark</span><span class=\"w\"> </span><span class=\"n\">update2!</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">A</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">time</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"o\">=</span><span class=\"n\">t1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"o\">=</span><span class=\"n\">t2</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">Threads</span><span class=\"o\">.</span><span class=\"n\">nthreads</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">8</span>\n<span class=\"mi\">15</span><span class=\"o\">-</span><span class=\"n\">element</span><span class=\"w\"> </span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"nd\">@NamedTuple</span><span class=\"p\">{</span><span class=\"kt\">n</span><span class=\"o\">::</span><span class=\"kt\">Int64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">t1</span><span class=\"o\">::</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">t2</span><span class=\"o\">::</span><span class=\"kt\">Float64</span><span class=\"p\">}}</span><span class=\"o\">:</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">6.286</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">6960.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">151.07542579075425</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7117.875</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">518.8802083333334</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7134.5</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1122.6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7110.375</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1968.7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7036.5</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">51</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3033.875</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7280.571428571428</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">61</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">4352.142857142857</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7336.5</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">71</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">5883.666666666667</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7573.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">81</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7673.5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7964.642857142857</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">91</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">9691.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">8256.166666666666</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">101</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">11952.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">8688.25</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">111</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">14423.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">9112.3</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">121</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">17149.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">9868.7</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">131</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">20071.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">10540.7</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">141</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">23638.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">11317.2</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>I wonder if these numbers are similar in other machines. Appreciate if you could run the script in your machine for comparison <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 527276216,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751718094
    },
    {
        "content": "<p>Run on a Ryzen 7 5800X</p>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"go\">Threads.nthreads() = 8</span>\n<span class=\"go\">(n = 1, t1 = 8.2, t2 = 4487.5)</span>\n<span class=\"go\">(n = 11, t1 = 168.39378238341968, t2 = 4787.5)</span>\n<span class=\"go\">(n = 21, t1 = 514.8717948717949, t2 = 4857.142857142857)</span>\n<span class=\"go\">(n = 31, t1 = 1130.0, t2 = 4771.428571428572)</span>\n<span class=\"go\">(n = 41, t1 = 1890.0, t2 = 5012.5)</span>\n<span class=\"go\">(n = 51, t1 = 3088.8888888888887, t2 = 5128.571428571428)</span>\n<span class=\"go\">(n = 61, t1 = 4257.142857142857, t2 = 5600.0)</span>\n<span class=\"go\">(n = 71, t1 = 5833.333333333333, t2 = 5285.714285714285)</span>\n<span class=\"go\">(n = 81, t1 = 7325.0, t2 = 5514.285714285715)</span>\n<span class=\"go\">(n = 91, t1 = 9433.333333333334, t2 = 6016.666666666667)</span>\n<span class=\"go\">(n = 101, t1 = 11500.0, t2 = 6400.0)</span>\n<span class=\"go\">(n = 111, t1 = 13700.0, t2 = 7250.0)</span>\n<span class=\"go\">(n = 121, t1 = 16200.0, t2 = 7920.0)</span>\n<span class=\"go\">(n = 131, t1 = 19600.0, t2 = 8200.0)</span>\n<span class=\"go\">(n = 141, t1 = 22300.0, t2 = 8925.0)</span>\n</code></pre></div>",
        "id": 527296706,
        "sender_full_name": "Jeffrey Chandler",
        "timestamp": 1751739443
    },
    {
        "content": "<p>From what I'm seeing, the startup for the threads (for me) is ~ 4500 because once the sequential run time gets notably longer than that, I see better times multithreading.</p>",
        "id": 527296787,
        "sender_full_name": "Jeffrey Chandler",
        "timestamp": 1751739554
    },
    {
        "content": "<p>Very interesting to see that in your machine <code>n&gt;70</code> is where things get better with threads.</p>",
        "id": 527296901,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751739674
    },
    {
        "content": "<p>Grace:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">Threads</span><span class=\"o\">.</span><span class=\"n\">nthreads</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">36</span>\n<span class=\"mi\">15</span><span class=\"o\">-</span><span class=\"n\">element</span><span class=\"w\"> </span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"nd\">@NamedTuple</span><span class=\"p\">{</span><span class=\"kt\">n</span><span class=\"o\">::</span><span class=\"kt\">Int64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">t1</span><span class=\"o\">::</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">t2</span><span class=\"o\">::</span><span class=\"kt\">Float64</span><span class=\"p\">}}</span><span class=\"o\">:</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.648</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">32769.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">82.30466321243523</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">31424.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">298.67054263565893</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">32289.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">658.2981366459627</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">32288.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1155.3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">31936.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">51</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1788.9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">33473.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">61</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">2545.777777777778</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">31873.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">71</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3456.125</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">33377.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">81</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">4503.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">33409.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">91</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">5690.666666666667</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">33728.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">101</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7008.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">34368.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">111</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">8480.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">34241.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">121</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">10112.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">34112.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">131</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">11809.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">34464.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">141</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">13696.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">33696.0</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>AMD Ryzen Threadripper PRO 7995WX 96-Cores:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">Threads</span><span class=\"o\">.</span><span class=\"n\">nthreads</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">96</span>\n<span class=\"mi\">15</span><span class=\"o\">-</span><span class=\"n\">element</span><span class=\"w\"> </span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"nd\">@NamedTuple</span><span class=\"p\">{</span><span class=\"kt\">n</span><span class=\"o\">::</span><span class=\"kt\">Int64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">t1</span><span class=\"o\">::</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">t2</span><span class=\"o\">::</span><span class=\"kt\">Float64</span><span class=\"p\">}}</span><span class=\"o\">:</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">4.216</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">2.9395215e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">148.04912280701754</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.0838e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">500.24226804123714</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.204477e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1059.6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.353132e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">839.3170731707318</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.332551e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">51</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1569.3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.386172e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">61</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">2520.5555555555557</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.5372155e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">71</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3675.625</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.404369e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">81</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3164.75</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7.638604e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">91</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">4449.571428571428</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.314338e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">101</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">5942.166666666667</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.4618665e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">111</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7586.5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.367734e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">121</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">6630.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.3118545e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">131</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">8499.333333333334</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.512002e6</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">141</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">10596.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.284583e6</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 527313321,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1751763057
    },
    {
        "content": "<p>with a tall matrix (<code>A = rand(100 * n, n)</code>) on Grace I get</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"mi\">15</span><span class=\"o\">-</span><span class=\"n\">element</span><span class=\"w\"> </span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"nd\">@NamedTuple</span><span class=\"p\">{</span><span class=\"kt\">n</span><span class=\"o\">::</span><span class=\"kt\">Int64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">t1</span><span class=\"o\">::</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">t2</span><span class=\"o\">::</span><span class=\"kt\">Float64</span><span class=\"p\">}}</span><span class=\"o\">:</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">69.50819672131148</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">32800.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">8437.333333333334</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">32768.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">30816.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">33216.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">67200.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">32864.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">117698.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">35040.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">51</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">181922.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">35201.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">61</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">262178.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">36272.5</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">71</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">355268.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">40352.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">81</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">459269.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">42433.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">91</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">579781.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">42465.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">101</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">720487.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">46241.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">111</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">862538.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">52417.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">121</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1.021932e6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">54177.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">131</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1.19835e6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">55969.0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">141</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1.389072e6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">64928.0</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 527313613,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1751763566
    },
    {
        "content": "<p>Added a new <code>update3!</code> with the <code>@batch</code> macro from <a href=\"https://juliaregistries.github.io/General/packages/redirect_to_repo/Polyester\">Polyester.jl</a> replacing <code>@threads</code> to the benchmarks, and also <code>fill!(A, sqrt(2))</code>, just to see if the compiler was able to do magic, since barring fp error or overflow that is the result of the computation (it wasn't)</p>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span><span class=\"mi\">150</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span><span class=\"n\">n</span>\n<span class=\"w\">           </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"w\">           </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">median</span><span class=\"p\">(</span><span class=\"nd\">@benchmark</span><span class=\"w\"> </span><span class=\"n\">update1!</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">A</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">time</span>\n<span class=\"w\">           </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">median</span><span class=\"p\">(</span><span class=\"nd\">@benchmark</span><span class=\"w\"> </span><span class=\"n\">update2!</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">A</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">time</span>\n<span class=\"w\">           </span><span class=\"n\">t3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">median</span><span class=\"p\">(</span><span class=\"nd\">@benchmark</span><span class=\"w\"> </span><span class=\"n\">update3!</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">A</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">time</span>\n<span class=\"w\">           </span><span class=\"n\">tfill</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">median</span><span class=\"p\">(</span><span class=\"nd\">@benchmark</span><span class=\"w\"> </span><span class=\"n\">fill!</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)))</span><span class=\"o\">.</span><span class=\"n\">time</span>\n<span class=\"w\">           </span><span class=\"p\">(;</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tfill</span><span class=\"p\">)</span>\n<span class=\"w\">       </span><span class=\"k\">end</span>\n<span class=\"go\">15-element Vector{@NamedTuple{n::Int64, t1::Float64, t2::Float64, t3::Float64, tfill::Float64}}:</span>\n<span class=\"go\"> (n = 1, t1 = 5.8, t2 = 6100.0, t3 = 6.3, tfill = 2.7)</span>\n<span class=\"go\"> (n = 11, t1 = 157.53768844221105, t2 = 5950.0, t3 = 379.04761904761904, tfill = 11.7)</span>\n<span class=\"go\"> (n = 21, t1 = 361.21495327102804, t2 = 6100.0, t3 = 410.44776119402985, tfill = 18.236472945891784)</span>\n<span class=\"go\"> (n = 31, t1 = 887.5, t2 = 6183.333333333333, t3 = 517.0103092783505, tfill = 36.052366565961734)</span>\n<span class=\"go\"> (n = 41, t1 = 1290.0, t2 = 6333.333333333333, t3 = 658.2417582417582, tfill = 57.520325203252035)</span>\n<span class=\"go\"> (n = 51, t1 = 2200.0, t2 = 7166.666666666667, t3 = 877.3972602739726, tfill = 87.26315789473684)</span>\n<span class=\"go\"> (n = 61, t1 = 2800.0, t2 = 7416.666666666667, t3 = 1030.0, tfill = 121.38919514884233)</span>\n<span class=\"go\"> (n = 71, t1 = 4071.4285714285716, t2 = 8400.0, t3 = 1420.0, tfill = 162.8140703517588)</span>\n<span class=\"go\"> (n = 81, t1 = 4871.428571428572, t2 = 8900.0, t3 = 1640.0, tfill = 583.9779005524862)</span>\n<span class=\"go\"> (n = 91, t1 = 6520.0, t2 = 9300.0, t3 = 2055.5555555555557, tfill = 798.9473684210526)</span>\n<span class=\"go\"> (n = 101, t1 = 7525.0, t2 = 10125.0, t3 = 2366.6666666666665, tfill = 980.0)</span>\n<span class=\"go\"> (n = 111, t1 = 9600.0, t2 = 10000.0, t3 = 2922.222222222222, tfill = 1180.0)</span>\n<span class=\"go\"> (n = 121, t1 = 10800.0, t2 = 11100.0, t3 = 3262.5, tfill = 1390.0)</span>\n<span class=\"go\"> (n = 131, t1 = 13200.0, t2 = 11800.0, t3 = 3912.5, tfill = 1630.0)</span>\n<span class=\"go\"> (n = 141, t1 = 14600.0, t2 = 13000.0, t3 = 4357.142857142857, tfill = 1890.0)</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">versioninfo</span><span class=\"p\">()</span>\n<span class=\"go\">Julia Version 1.11.5</span>\n<span class=\"go\">Commit 760b2e5b73 (2025-04-14 06:53 UTC)</span>\n<span class=\"go\">Build Info:</span>\n<span class=\"go\">  Official https://julialang.org/ release</span>\n<span class=\"go\">Platform Info:</span>\n<span class=\"go\">  OS: Windows (x86_64-w64-mingw32)</span>\n<span class=\"go\">  CPU: 8 × 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz</span>\n<span class=\"go\">  WORD_SIZE: 64</span>\n<span class=\"go\">  LLVM: libLLVM-16.0.6 (ORCJIT, tigerlake)</span>\n<span class=\"go\">Threads: 8 default, 0 interactive, 4 GC (on 8 virtual cores)</span>\n<span class=\"go\">Environment:</span>\n<span class=\"go\">  JULIA_CONDAPKG_BACKEND = Null</span>\n<span class=\"go\">  JULIA_DEPOT_PATH = Q:\\.julia;</span>\n<span class=\"go\">  JULIA_NUM_THREADS = auto</span>\n</code></pre></div>",
        "id": 527320853,
        "sender_full_name": "wheeheee",
        "timestamp": 1751774904
    },
    {
        "content": "<p>So the version using Polyester threads starts beating the serial version somewhere between <code>n=21</code> and <code>n = 31</code>, and always beats <code>@threads</code>...</p>",
        "id": 527320967,
        "sender_full_name": "wheeheee",
        "timestamp": 1751775090
    },
    {
        "content": "<p>That is interesting! I'll benchmark on my machine to see how it performs. If it beats the serial version with n=21 that is a game changer for us.</p>",
        "id": 527323648,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751778652
    },
    {
        "content": "<p>That probably has less to do with Polyester's threading performance, and more to do with the fact that it cheats by converting your arrays to <code>StrideArrays.PtrArray</code> out from under you</p>",
        "id": 527329526,
        "sender_full_name": "Mason Protter",
        "timestamp": 1751787040
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"670625\">@wheeheee</span> could you please share the version written with <a href=\"https://juliaregistries.github.io/General/packages/redirect_to_repo/Polyester\">Polyester.jl</a>?</p>",
        "id": 527335499,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1751794014
    },
    {
        "content": "<p>After <code>using Polyester</code>, I merely  replaced <code>Threads.@threads</code> in <code>update2!</code> with <code>@batch</code></p>",
        "id": 527335804,
        "sender_full_name": "wheeheee",
        "timestamp": 1751794378
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"269150\">Mason Protter</span> <a href=\"#narrow/channel/274208-helpdesk-.28published.29/topic/Unwanted.20allocations.20with.20threads/near/527329526\">said</a>:</p>\n<blockquote>\n<p>That probably has less to do with Polyester's threading performance, and more to do with the fact that it cheats by converting your arrays to <code>StrideArrays.PtrArray</code> out from under you</p>\n</blockquote>\n<p>While I do agree that there's not much point multithreading at <code>n = 21</code> or even <code>n = 30</code>, why should that be faster?</p>",
        "id": 527602805,
        "sender_full_name": "wheeheee",
        "timestamp": 1751949409
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"670625\">@wheeheee</span> I ran with <a href=\"https://juliaregistries.github.io/General/packages/redirect_to_repo/Polyester\">Polyester.jl</a> and reproduced the improved with <code>n=21</code> and beyond:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"mi\">15</span><span class=\"o\">-</span><span class=\"n\">element</span><span class=\"w\"> </span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"nd\">@NamedTuple</span><span class=\"p\">{</span><span class=\"kt\">n</span><span class=\"o\">::</span><span class=\"kt\">Int64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">t1</span><span class=\"o\">::</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">t2</span><span class=\"o\">::</span><span class=\"kt\">Float64</span><span class=\"p\">}}</span><span class=\"o\">:</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">6.295</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7.3993993993994</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">147.77980535279806</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">410.6108490566038</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">509.26943005181346</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">445.1029411764706</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1122.7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">550.0837563451776</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1968.2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">687.1114130434783</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">51</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3033.8888888888887</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">812.6372549019608</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">61</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">4257.857142857143</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1034.9117647058824</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">71</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">5764.5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1303.4</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">81</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7510.75</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1564.7</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">91</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">9694.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1832.7</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">101</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">11949.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">2218.1</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">111</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">14416.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">2631.0555555555557</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">121</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">17125.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3016.222222222222</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">131</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">20053.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3442.3333333333335</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">141</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">23155.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">4009.875</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>Could you please elaborate on why there is no much point multi-threading with <code>n=21</code>?</p>",
        "id": 527917837,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752076009
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"269186\">@Mosè Giordano</span> in your output I am seeing 36 and 96 threads. Are these physical cores?</p>\n<p>I wonder how the latest processors in the market compare with your setup. I have an old Intel i7 processor, and was assuming that most processors today still had around 8 physical cores. Perhaps I need a processor update?</p>",
        "id": 527918526,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752076246
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"273172\">Júlio Hoffimann</span> <a href=\"#narrow/channel/274208-helpdesk-.28published.29/topic/Unwanted.20allocations.20with.20threads/near/527918526\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"269186\">Mosè Giordano</span> in your output I am seeing 36 and 96 threads. Are these physical cores?</p>\n</blockquote>\n<p>yes, but Grace has 72 physical cores, I was using half of the system</p>\n<p><span class=\"user-mention silent\" data-user-id=\"273172\">Júlio Hoffimann</span> <a href=\"#narrow/channel/274208-helpdesk-.28published.29/topic/Unwanted.20allocations.20with.20threads/near/527918526\">said</a>:</p>\n<blockquote>\n<p>I wonder how the latest processors in the market compare with your setup. I have an old Intel i7 processor, and was assuming that most processors today still had around 8 physical cores. Perhaps I need a processor update?</p>\n</blockquote>\n<p>these are datacenter grade CPUs, not for laptops</p>",
        "id": 527919000,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1752076417
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"273172\">Júlio Hoffimann</span> <a href=\"#narrow/stream/274208-helpdesk-.28published.29/topic/Unwanted.20allocations.20with.20threads/near/527917837\">said</a>:</p>\n<blockquote>\n<p>Could you please elaborate on why there is no much point multi-threading with <code>n=21</code>?</p>\n</blockquote>\n<p>Because there’s not much of a speedup (10%) for using so many cores. Even though there is less overhead compared to <code>@threads</code>, most of the work is still done setting up the threading or whatnot, although tasks are reused. Might as well just do without.</p>",
        "id": 527987947,
        "sender_full_name": "wheeheee",
        "timestamp": 1752110804
    },
    {
        "content": "<p>You can also look at Mose’s numbers, I think the overhead increases with the number of cores / threads. With the Threadripper’s monstrous number of threads, even at 141 the serial version is still better. Basically this has all been mentioned before in the thread, if there is only a small amount of work multithreading costs more than it’s worth.</p>",
        "id": 527988547,
        "sender_full_name": "wheeheee",
        "timestamp": 1752111418
    },
    {
        "content": "<p>Also as mentioned earlier, use multithreading in the outer loop. Being further up the abstraction layer doesn’t necessarily prevent multithreading, as long as the computation is really parallelizable.</p>",
        "id": 527988597,
        "sender_full_name": "wheeheee",
        "timestamp": 1752111472
    }
]