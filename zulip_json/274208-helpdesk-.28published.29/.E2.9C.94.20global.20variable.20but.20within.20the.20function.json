[
    {
        "content": "<p>Is there a way to make a variable inside a function a \"semi\" global variable? Not sure that I am using the right wording, but for example, inside a function I have</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code>    <span class=\"k\">try</span>\n        <span class=\"n\">pixel_size</span> <span class=\"o\">=</span> <span class=\"n\">header</span><span class=\"p\">[(</span><span class=\"mh\">0x0028</span><span class=\"p\">,</span> <span class=\"mh\">0x0030</span><span class=\"p\">)]</span>\n    <span class=\"k\">catch</span>\n        <span class=\"n\">FOV</span> <span class=\"o\">=</span> <span class=\"n\">header</span><span class=\"p\">[(</span><span class=\"mh\">0x0018</span><span class=\"p\">,</span> <span class=\"mh\">0x1100</span><span class=\"p\">)]</span>\n        <span class=\"n\">matrix_size</span> <span class=\"o\">=</span> <span class=\"n\">header</span><span class=\"p\">[(</span><span class=\"mh\">0x0028</span><span class=\"p\">,</span> <span class=\"mh\">0x0010</span><span class=\"p\">)]</span>\n\n        <span class=\"n\">pixel_size</span> <span class=\"o\">=</span> <span class=\"n\">FOV</span> <span class=\"o\">/</span> <span class=\"n\">matrix_size</span>\n    <span class=\"k\">end</span>\n</code></pre></div>\n<p>and I want to make <code>pixel_size</code> available to the rest of the function but not necessarily globally. Is there a way to do this?</p>",
        "id": 262849213,
        "sender_full_name": "Dale Black",
        "timestamp": 1637980749
    },
    {
        "content": "<p>You should be able to just do</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code>    <span class=\"k\">local</span> <span class=\"n\">pixel_size</span>\n    <span class=\"k\">try</span>\n        <span class=\"n\">pixel_size</span> <span class=\"o\">=</span> <span class=\"n\">header</span><span class=\"p\">[(</span><span class=\"mh\">0x0028</span><span class=\"p\">,</span> <span class=\"mh\">0x0030</span><span class=\"p\">)]</span>\n    <span class=\"k\">catch</span>\n        <span class=\"n\">FOV</span> <span class=\"o\">=</span> <span class=\"n\">header</span><span class=\"p\">[(</span><span class=\"mh\">0x0018</span><span class=\"p\">,</span> <span class=\"mh\">0x1100</span><span class=\"p\">)]</span>\n        <span class=\"n\">matrix_size</span> <span class=\"o\">=</span> <span class=\"n\">header</span><span class=\"p\">[(</span><span class=\"mh\">0x0028</span><span class=\"p\">,</span> <span class=\"mh\">0x0010</span><span class=\"p\">)]</span>\n\n        <span class=\"n\">pixel_size</span> <span class=\"o\">=</span> <span class=\"n\">FOV</span> <span class=\"o\">/</span> <span class=\"n\">matrix_size</span>\n    <span class=\"k\">end</span>\n</code></pre></div>",
        "id": 262851493,
        "sender_full_name": "Mason Protter",
        "timestamp": 1637984652
    },
    {
        "content": "<p>Ooh, simple enough. Thanks!</p>",
        "id": 262854915,
        "sender_full_name": "Dale Black",
        "timestamp": 1637989431
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"352971\">Dale Black</span> has marked this topic as resolved.</p>",
        "id": 262854916,
        "sender_full_name": "Notification Bot",
        "timestamp": 1637989433
    },
    {
        "content": "<p>I should also mention that my preferred method would be to simply write</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code>    <span class=\"n\">pixel_size</span> <span class=\"o\">=</span> <span class=\"k\">try</span>\n        <span class=\"n\">header</span><span class=\"p\">[(</span><span class=\"mh\">0x0028</span><span class=\"p\">,</span> <span class=\"mh\">0x0030</span><span class=\"p\">)]</span>\n    <span class=\"k\">catch</span>\n        <span class=\"n\">FOV</span> <span class=\"o\">=</span> <span class=\"n\">header</span><span class=\"p\">[(</span><span class=\"mh\">0x0018</span><span class=\"p\">,</span> <span class=\"mh\">0x1100</span><span class=\"p\">)]</span>\n        <span class=\"n\">matrix_size</span> <span class=\"o\">=</span> <span class=\"n\">header</span><span class=\"p\">[(</span><span class=\"mh\">0x0028</span><span class=\"p\">,</span> <span class=\"mh\">0x0010</span><span class=\"p\">)]</span>\n\n        <span class=\"n\">FOV</span> <span class=\"o\">/</span> <span class=\"n\">matrix_size</span>\n    <span class=\"k\">end</span>\n</code></pre></div>",
        "id": 262855221,
        "sender_full_name": "Mason Protter",
        "timestamp": 1637989928
    },
    {
        "content": "<p>Because everything is an expression in Julia</p>",
        "id": 262855226,
        "sender_full_name": "Mason Protter",
        "timestamp": 1637989955
    },
    {
        "content": "<p>Oh wow, that's very cool</p>",
        "id": 262855238,
        "sender_full_name": "Dale Black",
        "timestamp": 1637989985
    },
    {
        "content": "<p>I like that better too</p>",
        "id": 262855241,
        "sender_full_name": "Dale Black",
        "timestamp": 1637989989
    }
]