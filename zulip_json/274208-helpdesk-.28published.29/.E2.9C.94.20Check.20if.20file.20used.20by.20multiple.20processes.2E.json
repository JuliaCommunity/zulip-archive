[
    {
        "content": "<p>Hello,</p>\n<p>I am trying to automate running many multiweek long simulations. I want these simulations to be restartable after a reboot, so I am storing checkpoints and logs to an output directory per job.</p>\n<p>Normally each simulation job should only have one julia process running it at a time, however, I would like to automatically detect if there are multiple processes trying to output to the same output directory at the same time.</p>\n<p>I'm not sure if this is a good idea but currently I am trying to have each process constantly append a byte to a file, then check if the file size is as expected. If two processes are running with the same output directory, the file size will be larger than expected.</p>\n<p>I initially tried this with <code>open(\"file_name\", \"a\")</code> but this didn't work, and multiple processes just overwrote each others data.</p>\n<p>So now I am using <code>Base.Filesystem.open</code> like so:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"n\">flags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">Filesystem</span><span class=\"o\">.</span><span class=\"n\">JL_O_APPEND</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">Filesystem</span><span class=\"o\">.</span><span class=\"n\">JL_O_CREAT</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">Filesystem</span><span class=\"o\">.</span><span class=\"n\">JL_O_WRONLY</span>\n<span class=\"w\">    </span><span class=\"n\">perm</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">Filesystem</span><span class=\"o\">.</span><span class=\"n\">S_IROTH</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">Filesystem</span><span class=\"o\">.</span><span class=\"n\">S_IRGRP</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">Filesystem</span><span class=\"o\">.</span><span class=\"n\">S_IWGRP</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">Filesystem</span><span class=\"o\">.</span><span class=\"n\">S_IRUSR</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">Filesystem</span><span class=\"o\">.</span><span class=\"n\">S_IWUSR</span>\n<span class=\"w\">    </span><span class=\"n\">detect_mult_runners_f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">Filesystem</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s\">\"detect-mult-runners\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">perm</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">detect_mult_runners_i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">Ref</span><span class=\"p\">(</span><span class=\"n\">filesize</span><span class=\"p\">(</span><span class=\"n\">detect_mult_runners_f</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"kt\">Timer</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span><span class=\"n\">t</span>\n<span class=\"w\">        </span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">detect_mult_runners_f</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x41</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"n\">flush</span><span class=\"p\">(</span><span class=\"n\">detect_mult_runners_f</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"n\">detect_mult_runners_i</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">filesize</span><span class=\"p\">(</span><span class=\"n\">detect_mult_runners_f</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">detect_mult_runners_i</span><span class=\"p\">[]</span>\n<span class=\"w\">            </span><span class=\"nd\">@error</span><span class=\"w\"> </span><span class=\"s\">\"multiple runners are running this job, exiting\"</span>\n<span class=\"w\">            </span><span class=\"n\">exit</span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"k\">end</span>\n<span class=\"w\">    </span><span class=\"k\">end</span>\n<span class=\"w\">    </span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n<p>Is there a simpler way of locking an output directory from multiple julia processes that is safe when random powerloss can occur?<br>\nAlso, is my use <code>Filesystem.open</code> something that may break in a future julia release?</p>",
        "id": 308030501,
        "sender_full_name": "Nathan Zimmerberg",
        "timestamp": 1667588565
    },
    {
        "content": "<p>Update. I am no longer using <code>Filesystem.open</code> with O_APPEND because using O_APPEND is very broken on linux, see the end of <a href=\"https://man7.org/linux/man-pages/man2/pwrite.2.html\">https://man7.org/linux/man-pages/man2/pwrite.2.html</a> . I am instead using <a href=\"https://docs.julialang.org/en/v1/stdlib/FileWatching/#Pidfile\">https://docs.julialang.org/en/v1/stdlib/FileWatching/#Pidfile</a></p>",
        "id": 394670964,
        "sender_full_name": "Nathan Zimmerberg",
        "timestamp": 1696350721
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"517472\">Nathan Zimmerberg</span> has marked this topic as resolved.</p>",
        "id": 394671218,
        "sender_full_name": "Notification Bot",
        "timestamp": 1696350821
    }
]