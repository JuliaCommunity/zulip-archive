[
    {
        "content": "<p>I've seen this quite a few times, and it is very hard to figure out what the compiler is trying to tell me. I have no idea why the name is gensymed, when <code>methods</code> shows me exactly what I supplied. There are no other constructor methods for this type, just this one:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"kt\">Cellular</span><span class=\"p\">{</span><span class=\"kt\">N</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">&lt;:</span><span class=\"w\"> </span><span class=\"kt\">AbstractSampler</span><span class=\"p\">{</span><span class=\"kt\">N</span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">random_state</span><span class=\"o\">::</span><span class=\"kt\">RandomState</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">table</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jitter</span><span class=\"o\">::</span><span class=\"kt\">Float64</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">metric</span><span class=\"o\">::</span><span class=\"kt\">DistanceMetric</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cell_func</span><span class=\"o\">::</span><span class=\"kt\">CellFunction</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"kt\">Cellular</span><span class=\"p\">{</span><span class=\"kt\">N</span><span class=\"p\">}(;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">seed</span><span class=\"o\">::</span><span class=\"kt\">Seed</span><span class=\"o\">=</span><span class=\"nb\">nothing</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">jitter</span><span class=\"o\">::</span><span class=\"kt\">Real</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">metric</span><span class=\"o\">::</span><span class=\"kt\">DistanceMetric</span><span class=\"o\">=</span><span class=\"n\">Euclidean</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">cell_func</span><span class=\"o\">::</span><span class=\"kt\">CellFunction</span><span class=\"o\">=</span><span class=\"n\">F1</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"kt\">N</span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">rs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">RandomState</span><span class=\"p\">(</span><span class=\"n\">seed</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">rs</span><span class=\"o\">.</span><span class=\"n\">rng</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Uniform</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">1.0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">table_size</span><span class=\"p\">(</span><span class=\"kt\">Val</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kt\">new</span><span class=\"p\">{</span><span class=\"kt\">N</span><span class=\"p\">}(</span><span class=\"n\">rs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">jitter</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">metric</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cell_func</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"k\">end</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"go\">(CoherentNoise) julia&gt; s = Cellular{2}(seed=1)</span>\n<span class=\"gr\">ERROR: MethodError: no method matching (::CoherentNoise.Noise.CellularNoise.var\"#_#1#2\")(::Int64, ::Float64, :</span>\n<span class=\"gr\">:Type{Euclidean}, ::Type{F1}, ::Type{Cellular{2}})</span>\n<span class=\"gr\">Closest candidates are:</span>\n<span class=\"gr\">  (::CoherentNoise.Noise.CellularNoise.var\"#_#1#2\")(::Union{Nothing, Integer}, ::Real, ::CoherentNoise.Noise.C</span>\n<span class=\"gr\">ellularNoise.DistanceMetric, ::CoherentNoise.Noise.CellularNoise.CellFunction, ::Type{Cellular{N}}) where N at</span>\n<span class=\"gr\"> ~/projects/Julia/CoherentNoise/src/noise_cellular.jl:32</span>\n<span class=\"gr\">Stacktrace:</span>\n<span class=\"gr\"> [1] top-level scope</span>\n<span class=\"gr\">   @ REPL[5]:1</span>\n</code></pre></div>",
        "id": 292665047,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1660082547
    },
    {
        "content": "<p>Hard to say without a reproducer. Have you tried making a minimal working example?</p>",
        "id": 292666856,
        "sender_full_name": "Mason Protter",
        "timestamp": 1660083581
    },
    {
        "content": "<p>It seems this was due to specifying default values that are types rather than instances of the asserted type.</p>",
        "id": 292666945,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1660083615
    },
    {
        "content": "<p>Such a confusing error message</p>",
        "id": 292666961,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1660083622
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"374994\">Michael Fiano</span> has marked this topic as resolved.</p>",
        "id": 292669567,
        "sender_full_name": "Notification Bot",
        "timestamp": 1660085210
    }
]