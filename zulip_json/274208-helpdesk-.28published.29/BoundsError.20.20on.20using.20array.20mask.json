[
    {
        "content": "<p>I'm trying to use a2d  mask as a partial reference to a 4d, like so....<br>\n                glcm[i, j, mask] = 1<br>\nmask is a 512x512 Boolean Array. But it gives the error....<br>\nBoundsError: attempt to access 8×8×512×512 Array{UInt8, 4} at index [1, 1, 512×512 BitMatrix]</p>\n<p>So I tried it with a toy example..... </p>\n<p>begin<br>\n    levels = 8<br>\n    h , w = 6, 6<br>\n    glcm = zeros(UInt8, (levels, levels, h, w))<br>\n    a = I(6) .== 1<br>\n    glcm[1, 1, a] .= 1</p>\n<p>end</p>\n<p>and i don't get an error..... what am I missing here?</p>",
        "id": 435099987,
        "sender_full_name": "Markos Kapes",
        "timestamp": 1713927914
    },
    {
        "content": "<p>In the first example, you forgot the dot before the equal sign in the assignment</p>",
        "id": 435160267,
        "sender_full_name": "Jakob Nybo Nissen",
        "timestamp": 1713955214
    },
    {
        "content": "<p>Thanks for catching that.... but it apparently wasn't the (only) problem... still coming up with BoundsError before it even gets to assignment....</p>",
        "id": 435318419,
        "sender_full_name": "Markos Kapes",
        "timestamp": 1714025330
    },
    {
        "content": "<p>I don't think you can do partial Boolean indexing in general. It seems like your toy example works thanks to peculiarities of the <code>Diagonal</code> type. For a workaround, you could try <code>@view(glcm[i, j, :, :])[mask] .= 1</code>.</p>",
        "id": 435356496,
        "sender_full_name": "Gunnar Farnebäck",
        "timestamp": 1714040089
    }
]