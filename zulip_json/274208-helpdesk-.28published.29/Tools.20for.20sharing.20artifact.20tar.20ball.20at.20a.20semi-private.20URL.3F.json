[
    {
        "content": "<p>Is there any <code>Pkg.Artifacts</code> wrapper that lets me easily upload the tarball somewhere so that I can put a URL in a <code>Artifacts.toml</code>? My use case is sharing some computation data generated in local machines (so not package binary distribution generated in CI).</p>\n<p>I can write a simple wrapper around <code>archive_artifact</code> and <code>gh gist</code> CLI to upload a tarball in private gist. But I wonder if someone already has implemented a better solution.</p>",
        "id": 264537579,
        "sender_full_name": "Takafumi Arakaki (tkf)",
        "timestamp": 1639192327
    },
    {
        "content": "<p>I have been thinking of adding something like that to <a href=\"https://github.com/search?q=ArtifactUtils.jl&amp;type=Repositories\">ArtifactUtils.jl</a> before, but haven't really had a need for it yet. If you figure out something that works for you, I'd gladly accept a PR. I believe we even have a jll for the GitHub CLI.</p>",
        "id": 264539379,
        "sender_full_name": "Simeon Schaub",
        "timestamp": 1639195172
    },
    {
        "content": "<p>Yes: <a href=\"https://github.com/JuliaBinaryWrappers/gh_cli_jll.jl\">https://github.com/JuliaBinaryWrappers/gh_cli_jll.jl</a></p>",
        "id": 264571625,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1639240918
    },
    {
        "content": "<p>BTW, we have the code to upload tarballs to Github releases in BinaryBuilder: <a href=\"https://github.com/JuliaPackaging/BinaryBuilder.jl/blob/da5e1bd80ab77c833d820ae70faa876b793ef3db/src/AutoBuild.jl#L434\">https://github.com/JuliaPackaging/BinaryBuilder.jl/blob/da5e1bd80ab77c833d820ae70faa876b793ef3db/src/AutoBuild.jl#L434</a></p>",
        "id": 264571789,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1639241060
    },
    {
        "content": "<p>Here we go <a href=\"https://github.com/simeonschaub/ArtifactUtils.jl/pull/8\">https://github.com/simeonschaub/ArtifactUtils.jl/pull/8</a></p>",
        "id": 264589805,
        "sender_full_name": "Takafumi Arakaki (tkf)",
        "timestamp": 1639262908
    }
]