[
    {
        "content": "<p>Let's say that I have a type defined as </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"kt\">MyVectorType</span><span class=\"p\">{</span><span class=\"kt\">T</span><span class=\"p\">}</span> <span class=\"o\">&lt;:</span> <span class=\"kt\">AbstractVector</span><span class=\"p\">{</span><span class=\"kt\">T</span><span class=\"p\">}</span>\n    <span class=\"n\">x</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">T</span><span class=\"p\">}</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>I would like to be able to define <code>getindex</code> such that when I do</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">MyVectorType</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">])</span>\n<span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>I get <code>2</code>, and if I do</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">A</span><span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]]</span>\n<span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>I'll get <code>MyVectorType([1,2,5])</code> and <code>MyVectorType([1,1,2])</code>, i.e. a new instance of <code>MyVectorType</code>.</p>",
        "id": 251007842,
        "sender_full_name": "Alex Knudson",
        "timestamp": 1630105709
    },
    {
        "content": "<p>You mean something like this?</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">getindex</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">::</span><span class=\"kt\">MyVectorType</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">::</span><span class=\"kt\">AbstractVector</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">MyVectorType</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n<span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">getindex</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">::</span><span class=\"kt\">MyVectorType</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n</code></pre></div>",
        "id": 251079249,
        "sender_full_name": "Gunnar Farnebäck",
        "timestamp": 1630181459
    },
    {
        "content": "<p>Unfortunately I've already tried something similar to this and it doesn't work. I get an error</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">ERROR</span><span class=\"o\">:</span> <span class=\"kt\">LoadError</span><span class=\"o\">:</span> <span class=\"kt\">MethodError</span><span class=\"o\">:</span> <span class=\"n\">Cannot</span> <span class=\"sb\">`convert`</span> <span class=\"n\">an</span> <span class=\"n\">object</span> <span class=\"n\">of</span> <span class=\"n\">type</span>\n  <span class=\"kt\">Int64</span> <span class=\"n\">to</span> <span class=\"n\">an</span> <span class=\"n\">object</span> <span class=\"n\">of</span> <span class=\"n\">type</span>\n  <span class=\"n\">MyVectorType</span>\n</code></pre></div>",
        "id": 251330291,
        "sender_full_name": "Alex Knudson",
        "timestamp": 1630384144
    },
    {
        "content": "<p>I can't guess what you did to get there. Can you give a complete example that reproduces it?</p>",
        "id": 251350067,
        "sender_full_name": "Gunnar Farnebäck",
        "timestamp": 1630398772
    }
]