[
    {
        "content": "<p>Hello!<br>\nLast monday, I updated all my packages.<br>\nSince then, my parameters estimation script does not seem to work fine anymore:<br>\nIt gives <strong>Inf</strong> as Loss  value whatever the algo (Optim, BlackBoxOptim, CMAES) or the data format (Matrix, Array , transposed or not).<br>\nAfter Investigating my script and dataset, I decided to run the basic example of DiffEqParamEstim:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">DifferentialEquations</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DiffEqParamEstim</span><span class=\"w\"></span>\n\n<span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">du</span><span class=\"p\">,</span><span class=\"n\">u</span><span class=\"p\">,</span><span class=\"n\">p</span><span class=\"p\">,</span><span class=\"n\">t</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">du</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">du</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dy</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"k\">end</span><span class=\"w\"></span>\n\n<span class=\"n\">u0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">;</span><span class=\"mf\">1.0</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"n\">tspan</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"mf\">10.0</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mf\">1.5</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"n\">prob</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ODEProblem</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"n\">u0</span><span class=\"p\">,</span><span class=\"n\">tspan</span><span class=\"p\">,</span><span class=\"n\">p</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">sol</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"n\">prob</span><span class=\"p\">,</span><span class=\"n\">Tsit5</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">collect</span><span class=\"p\">(</span><span class=\"n\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">RecursiveArrayTools</span><span class=\"w\"> </span><span class=\"c\"># for VectorOfArray</span><span class=\"w\"></span>\n<span class=\"n\">randomized</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">VectorOfArray</span><span class=\"p\">([(</span><span class=\"n\">sol</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mf\">.01</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)])</span><span class=\"w\"></span>\n<span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"kt\">Array</span><span class=\"p\">,</span><span class=\"n\">randomized</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">cost_function</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">build_loss_objective</span><span class=\"p\">(</span><span class=\"n\">prob</span><span class=\"p\">,</span><span class=\"n\">Tsit5</span><span class=\"p\">(),</span><span class=\"n\">L2Loss</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span><span class=\"n\">data</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">                                     </span><span class=\"n\">maxiters</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">,</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"nb\">false</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">Optim</span><span class=\"w\"></span>\n<span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">cost_function</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">10.0</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>output of <code>result = optimize(cost_function, 0.0, 10.0)</code>:<br>\nResults of Optimization Algorithm</p>\n<ul>\n<li>Algorithm: Brent's Method</li>\n<li>Search Interval: [0.000000, 10.000000]</li>\n<li>Minimizer: 3.819660e+00</li>\n<li>Minimum: Inf</li>\n<li>Iterations: 38</li>\n<li>Convergence: max(|x - x_upper|, |x - x_lower|) &lt;= 2<em>(1.5e-08</em>|x|+2.2e-16): true</li>\n<li>Objective Function Calls: 39</li>\n</ul>\n<p><strong>Did anyone have the same isssue and had identified the problem?</strong></p>\n<p>Julia version: 1.8.2<br>\nPackages versions:<br>\n[a134a8b2] BlackBoxOptim v0.6.2<br>\n[8d3b24bd] CMAEvolutionStrategy v0.2.5<br>\n[336ed68f] CSV v0.10.7<br>\n[479239e8] Catalyst v12.3.1<br>\n[861a8166] Combinatorics v1.0.2<br>\n[a93c6f00] DataFrames v1.4.2<br>\n[bcd4f6db] DelayDiffEq v5.38.3<br>\n[1130ab10] DiffEqParamEstim v1.27.0<br>\n[0c46a032] DifferentialEquations v7.6.0<br>\n[31c24e10] Distributions v0.25.76<br>\n[89b67f3b] ExcelFiles v1.0.0<br>\n[38e38edf] GLM v1.8.1<br>\n[28b8d3ca] GR v0.69.5<br>\n[09f84164] HypothesisTests v0.10.11<br>\n[7073ff75] IJulia v1.23.3<br>\n[615f187c] IfElse v0.1.1<br>\n[a98d9a8b] Interpolations v0.14.6<br>\n[c8e1da08] IterTools v1.4.0<br>\n[ccbc3e58] JumpProcesses v9.2.2<br>\n[b964fa9f] LaTeXStrings v1.3.0<br>\n[23fbe1c1] Latexify v0.15.17<br>\n[93acb638] LikelihoodProfiler v0.5.0<br>\n[7ed4a6bd] LinearSolve v1.27.1<br>\n[442fdcdd] Measures v0.3.1<br>\n[961ee093] ModelingToolkit v8.30.0<br>\n[429524aa] Optim v1.7.3<br>\n[1dea7af3] OrdinaryDiffEq v6.30.1<br>\n[58dd65bb] Plotly v0.4.1<br>\n[a03496cd] PlotlyBase v0.8.19<br>\n[f0f68f2c] PlotlyJS v0.18.10<br>\n[f2990250] PlotlyKaleido v1.0.0<br>\n[91a5bcdd] Plots v1.35.7<br>\n[d330b81b] PyPlot v2.11.0<br>\n[1fd47b50] QuadGK v2.6.0<br>\n[731186ca] RecursiveArrayTools v2.32.1<br>\n[0bca4576] SciMLBase v1.67.0<br>\n[2913bbd2] StatsBase v0.33.21<br>\n[78aadeae] SymbolicNumericIntegration v0.8.6<br>\n[d1185830] SymbolicUtils v0.19.11<br>\n[0c5d862f] Symbolics v4.13.0<br>\n[770da0de] UpdateJulia v0.4.0<br>\n[37e2e46d] LinearAlgebra<br>\n[9e88b42a] Serialization</p>",
        "id": 307684514,
        "sender_full_name": "Danilo D.",
        "timestamp": 1667467247
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"278119\">@Christopher Rackauckas</span></p>",
        "id": 308310448,
        "sender_full_name": "Mason Protter",
        "timestamp": 1667780651
    },
    {
        "content": "<p>Yes, if you update it should be fixed by <a href=\"https://github.com/SciML/DiffEqParamEstim.jl/pull/184\">https://github.com/SciML/DiffEqParamEstim.jl/pull/184</a></p>",
        "id": 308310582,
        "sender_full_name": "Christopher Rackauckas",
        "timestamp": 1667780863
    },
    {
        "content": "<p>This month we've been ripping off some final bandaids, removing last piracies of old and changing symbols to enums. There's a few spots that got hit by bad practices, and we're doing a bit of clean up. We should be in a really good spot in the coming month.</p>",
        "id": 308310627,
        "sender_full_name": "Christopher Rackauckas",
        "timestamp": 1667780909
    },
    {
        "content": "<p>Can confirm:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">begin</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">DifferentialEquations</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DiffEqParamEstim</span><span class=\"w\"></span>\n\n<span class=\"w\">       </span><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">du</span><span class=\"p\">,</span><span class=\"n\">u</span><span class=\"p\">,</span><span class=\"n\">p</span><span class=\"p\">,</span><span class=\"n\">t</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">         </span><span class=\"n\">du</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">         </span><span class=\"n\">du</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dy</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">end</span><span class=\"w\"></span>\n\n<span class=\"w\">       </span><span class=\"n\">u0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">;</span><span class=\"mf\">1.0</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">tspan</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"mf\">10.0</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mf\">1.5</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">prob</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ODEProblem</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"n\">u0</span><span class=\"p\">,</span><span class=\"n\">tspan</span><span class=\"p\">,</span><span class=\"n\">p</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">sol</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"n\">prob</span><span class=\"p\">,</span><span class=\"n\">Tsit5</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">collect</span><span class=\"p\">(</span><span class=\"n\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">RecursiveArrayTools</span><span class=\"w\"> </span><span class=\"c\"># for VectorOfArray</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">randomized</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">VectorOfArray</span><span class=\"p\">([(</span><span class=\"n\">sol</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mf\">.01</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)])</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"kt\">Array</span><span class=\"p\">,</span><span class=\"n\">randomized</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">cost_function</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">build_loss_objective</span><span class=\"p\">(</span><span class=\"n\">prob</span><span class=\"p\">,</span><span class=\"n\">Tsit5</span><span class=\"p\">(),</span><span class=\"n\">L2Loss</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span><span class=\"n\">data</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">                                            </span><span class=\"n\">maxiters</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">,</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"nb\">false</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">Optim</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">cost_function</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">10.0</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"n\">Results</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">Optimization</span><span class=\"w\"> </span><span class=\"n\">Algorithm</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Algorithm</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Brent</span><span class=\"o\">'</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"kt\">Method</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Search</span><span class=\"w\"> </span><span class=\"n\">Interval</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mf\">0.000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">10.000000</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Minimizer</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mf\">1.499964e+00</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Minimum</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mf\">3.803244e-02</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Iterations</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Convergence</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">x_upper</span><span class=\"o\">|</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">x_lower</span><span class=\"o\">|</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"mf\">1.5e-08</span><span class=\"o\">*|</span><span class=\"n\">x</span><span class=\"o\">|+</span><span class=\"mf\">2.2e-16</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nb\">true</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Objective</span><span class=\"w\"> </span><span class=\"kt\">Function</span><span class=\"w\"> </span><span class=\"n\">Calls</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">28</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">jl_IV4Jkh</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">pkg</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"w\"></span>\n<span class=\"n\">Status</span><span class=\"w\"> </span><span class=\"sb\">`/tmp/jl_IV4Jkh/Project.toml`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">1130</span><span class=\"n\">ab10</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">DiffEqParamEstim</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"mf\">.28.0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"n\">c46a032</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">DifferentialEquations</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"mf\">.6.0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">429524</span><span class=\"n\">aa</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">Optim</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"mf\">.7.3</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">731186</span><span class=\"n\">ca</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">RecursiveArrayTools</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"mf\">.32.1</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 308310727,
        "sender_full_name": "Mason Protter",
        "timestamp": 1667781014
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"464914\">Danilo D.</span> has marked this topic as resolved.</p>",
        "id": 308535192,
        "sender_full_name": "Notification Bot",
        "timestamp": 1667894917
    }
]