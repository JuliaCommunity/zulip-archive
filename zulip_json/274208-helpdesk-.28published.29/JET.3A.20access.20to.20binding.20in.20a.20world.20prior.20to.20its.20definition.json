[
    {
        "content": "<p>I'm seeing this warning (among a bazillion others) when running <a href=\"https://juliaregistries.github.io/General/packages/redirect_to_repo/JET\">JET.jl</a> on 1.12 on an IJulia branch:</p>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">report_package</span><span class=\"p\">(</span><span class=\"s\">\"IJulia\"</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">toplevel_logger</span><span class=\"o\">=</span><span class=\"nb\">nothing</span><span class=\"p\">)</span>\n<span class=\"go\">WARNING: Detected access to binding `IJulia.heartbeat_thread` in a world prior to its definition world.</span>\n<span class=\"go\">  Julia 1.12 has introduced more strict world age semantics for global bindings.</span>\n<span class=\"go\">  !!! This code may malfunction under Revise.</span>\n<span class=\"go\">  !!! This code will error in future versions of Julia.</span>\n<span class=\"go\">Hint: Add an appropriate `invokelatest` around the access to this binding.</span>\n<span class=\"go\">To make this warning an error, and hence obtain a stack trace, use `julia --depwarn=error`.</span>\n</code></pre></div>\n<p>This is the function in question: <a href=\"https://github.com/JuliaLang/IJulia.jl/blob/42c99f1aeb06b7bd514b1888e84a1060440910aa/src/heartbeat.jl#L8\">https://github.com/JuliaLang/IJulia.jl/blob/42c99f1aeb06b7bd514b1888e84a1060440910aa/src/heartbeat.jl#L8</a></p>\n<p>But I can't figure out where the warning is coming from because <code>heartbeat_thread()</code> is only ever called in <code>start_heartbeat()</code>, which is defined afterwards. Does anyone know why it's triggering that warning?</p>",
        "id": 526061951,
        "sender_full_name": "James Wrigley",
        "timestamp": 1751022921
    },
    {
        "content": "<p>friendly neighborhood LLM suggests it's due to the use of <code>@cfunction(heartbeat_thread, Cint, (Ptr{Cvoid},))</code> which is trying to use <code>heartbeat_thread</code> at macro expansion time prior to the compilation of <code>heartbeat_thread</code> function</p>",
        "id": 526082510,
        "sender_full_name": "Andy Dienes",
        "timestamp": 1751030563
    },
    {
        "content": "<p>That... would make sense <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> But then I'm not sure how to fix it without making a runtime cfunction or moving the cfunction to the top-level.</p>",
        "id": 526082975,
        "sender_full_name": "James Wrigley",
        "timestamp": 1751030713
    },
    {
        "content": "<p>what if you take <code>heartbeat_thread</code> to a separate file and then <code>include</code> it in to the file where you define <code>start_heartbeat</code> ?</p>",
        "id": 526087957,
        "sender_full_name": "Andy Dienes",
        "timestamp": 1751032128
    },
    {
        "content": "<p>LLM also suggests moving cfunction to top level</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_heartbeat_c</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">    </span><span class=\"nd\">@cfunction</span><span class=\"p\">(</span><span class=\"n\">heartbeat_thread</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Cint</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Ptr</span><span class=\"p\">{</span><span class=\"kt\">Cvoid</span><span class=\"p\">},))</span><span class=\"w\">  </span><span class=\"c\"># executed once at load time</span>\n\n<span class=\"c\"># 3️⃣  use the cached pointer</span>\n<span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">start_heartbeat</span><span class=\"p\">(</span><span class=\"n\">kernel</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">hb</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">kernel</span><span class=\"o\">.</span><span class=\"n\">heartbeat</span><span class=\"p\">[]</span>\n<span class=\"w\">    </span><span class=\"n\">hb</span><span class=\"o\">.</span><span class=\"n\">linger</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"k\">ccall</span><span class=\"p\">(</span><span class=\"ss\">:uv_thread_create</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Cint</span><span class=\"p\">,</span>\n<span class=\"w\">          </span><span class=\"p\">(</span><span class=\"kt\">Ptr</span><span class=\"p\">{</span><span class=\"kt\">Int</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"kt\">Ptr</span><span class=\"p\">{</span><span class=\"kt\">Cvoid</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"kt\">Ptr</span><span class=\"p\">{</span><span class=\"kt\">Cvoid</span><span class=\"p\">}),</span>\n<span class=\"w\">          </span><span class=\"n\">kernel</span><span class=\"o\">.</span><span class=\"n\">heartbeat_threadid</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_heartbeat_c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">hb</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>but I do see how that's a bit uglier</p>",
        "id": 526088097,
        "sender_full_name": "Andy Dienes",
        "timestamp": 1751032172
    }
]