[
    {
        "content": "<p>I've got a piece of code that involves passing a user-specified function fairly far down the call stack, to be called in a tight loop. It's an integration/quadrature routine FWIW. I'm seeing that the type of the function is not specialized on, i.e. Julia is interpreting in the most important hot loop in this code. Is there a way to ensure that <code>f</code> will have its type inferred? Or is it maybe not even worth it due to code duplication / monomorphization costs? I realized I'm not sure if monomorphization is a thing in Julia or not, although I imagine it is.</p>",
        "id": 277892075,
        "sender_full_name": "Jack C",
        "timestamp": 1649170919
    },
    {
        "content": "<p>One way to specialize on a specific function type is:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">function</span> <span class=\"n\">generic</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">::</span><span class=\"kt\">F</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"k\">where</span> <span class=\"p\">{</span><span class=\"kt\">F</span> <span class=\"o\">&lt;:</span> <span class=\"kt\">Function</span><span class=\"p\">}</span>\n    <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
        "id": 277895421,
        "sender_full_name": "mbaz",
        "timestamp": 1649172160
    }
]