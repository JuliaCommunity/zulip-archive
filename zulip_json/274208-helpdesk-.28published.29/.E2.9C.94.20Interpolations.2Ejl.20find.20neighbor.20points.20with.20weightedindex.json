[
    {
        "content": "<p>I have some interpolation <code>itp</code> from which I want to find the neighboring points of the grid. I checked the docs and found in the developer documentation section <code>WeightedIndex</code>, which is probably close to what I'm looking for. However, I don't understand the following behavior:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"mi\">3</span><span class=\"o\">×</span><span class=\"mi\">3</span><span class=\"o\">×</span><span class=\"mi\">3</span> <span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">UnitRange</span><span class=\"p\">{</span><span class=\"kt\">Int64</span><span class=\"p\">},</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"n\">with</span> <span class=\"n\">eltype</span> <span class=\"kt\">Int64</span><span class=\"o\">:</span>\n<span class=\"p\">[</span><span class=\"o\">:</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span>\n <span class=\"mi\">1</span>  <span class=\"mi\">4</span>  <span class=\"mi\">7</span>\n <span class=\"mi\">2</span>  <span class=\"mi\">5</span>  <span class=\"mi\">8</span>\n <span class=\"mi\">3</span>  <span class=\"mi\">6</span>  <span class=\"mi\">9</span>\n\n<span class=\"p\">[</span><span class=\"o\">:</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span>\n <span class=\"mi\">10</span>  <span class=\"mi\">13</span>  <span class=\"mi\">16</span>\n <span class=\"mi\">11</span>  <span class=\"mi\">14</span>  <span class=\"mi\">17</span>\n <span class=\"mi\">12</span>  <span class=\"mi\">15</span>  <span class=\"mi\">18</span>\n\n<span class=\"p\">[</span><span class=\"o\">:</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span>\n <span class=\"mi\">19</span>  <span class=\"mi\">22</span>  <span class=\"mi\">25</span>\n <span class=\"mi\">20</span>  <span class=\"mi\">23</span>  <span class=\"mi\">26</span>\n <span class=\"mi\">21</span>  <span class=\"mi\">24</span>  <span class=\"mi\">27</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">);</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">itp</span> <span class=\"o\">=</span> <span class=\"n\">LinearInterpolation</span><span class=\"p\">((</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"n\">A</span><span class=\"p\">);</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"mf\">0.75</span><span class=\"p\">);</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">itp</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"mf\">21.75</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">wis</span> <span class=\"o\">=</span> <span class=\"n\">Interpolations</span><span class=\"o\">.</span><span class=\"n\">weightedindexes</span><span class=\"p\">((</span><span class=\"n\">Interpolations</span><span class=\"o\">.</span><span class=\"n\">value_weights</span><span class=\"p\">,),</span> <span class=\"n\">Interpolations</span><span class=\"o\">.</span><span class=\"n\">itpinfo</span><span class=\"p\">(</span><span class=\"n\">itp</span><span class=\"p\">)</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"n\">Interpolations</span><span class=\"o\">.</span><span class=\"kt\">WeightedAdjIndex</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"kt\">Float64</span><span class=\"p\">}(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)),</span> <span class=\"n\">Interpolations</span><span class=\"o\">.</span><span class=\"kt\">WeightedAdjIndex</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"kt\">Float64</span><span class=\"p\">}(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)),</span> <span class=\"n\">Interpolations</span><span class=\"o\">.</span><span class=\"kt\">WeightedAdjIndex</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"kt\">Float64</span><span class=\"p\">}(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">0.25</span><span class=\"p\">,</span> <span class=\"mf\">0.75</span><span class=\"p\">)))</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">itp</span><span class=\"o\">.</span><span class=\"n\">itp</span><span class=\"o\">.</span><span class=\"n\">itp</span><span class=\"p\">[</span><span class=\"n\">wis</span><span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"mf\">1.0e-323</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">wis</span><span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"o\">-</span><span class=\"mf\">4.25</span>\n</code></pre></div>\n<p><a href=\"https://juliamath.github.io/Interpolations.jl/latest/devdocs/#Interpolation\">According to the docs</a> the evaluation of the <code>itp</code> as well as <code>itp.itp.itp[wis...]</code> should yield the same result, shouldn't it? Is the scaling the problem? Is there in general a better way to detect all contributing points for the position of interest <code>x</code> and their corresponding weights?</p>",
        "id": 278661408,
        "sender_full_name": "Max Köhler",
        "timestamp": 1649751650
    },
    {
        "content": "<p>ah found an issue about this:<br>\n<a href=\"https://github.com/JuliaMath/Interpolations.jl/issues/479\">https://github.com/JuliaMath/Interpolations.jl/issues/479</a></p>",
        "id": 278663416,
        "sender_full_name": "Max Köhler",
        "timestamp": 1649752915
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276387\">Max Köhler</span> has marked this topic as resolved.</p>",
        "id": 278664084,
        "sender_full_name": "Notification Bot",
        "timestamp": 1649753285
    }
]