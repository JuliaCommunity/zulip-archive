[
    {
        "content": "<p>Is there any \"trick\" to make the Pkg resolver to prefer one package over another without forcing the user to explicitly install a version.</p>\n<p>The background is this: I have a package A which depends on <code>LightXML</code> which in turn depends on <code>XML2_jll</code>. A while back I saw that XML2_jll made a non breaking release 2.12 which included more rigorous validation. The problem is that the xmls my package needs to read are no longer considered valid by 2.12. </p>\n<p>As a fix I made a new release of package A which locks the version of XML2_jll to 2.11. However, now it seems that Pkg prefers to install the old version of package A (probably due to the version number delta of XML2_jll being higher) when installing package B (which depends on package A).</p>\n<p>Is there some way to fix this (apart from adding a dependency to XML2_jll in package B as well I guess)?</p>",
        "id": 418045529,
        "sender_full_name": "DrChainsaw",
        "timestamp": 1706177126
    },
    {
        "content": "<p>you can make a PR to General to upperbound past versions of your package too</p>",
        "id": 418045859,
        "sender_full_name": "Sukera",
        "timestamp": 1706177235
    },
    {
        "content": "<p>not a good solution though, a \"proper\" one would also mean investigating why the more rigorous validation means that your XMLs are no longer conforming</p>",
        "id": 418046058,
        "sender_full_name": "Sukera",
        "timestamp": 1706177295
    },
    {
        "content": "<blockquote>\n<p>you can make a PR to General to upperbound past versions of your package too</p>\n</blockquote>\n<p>Hmm, yeah this could probably be doable. Package A is in a local registry but I suppose that just makes the process easier for me. What is the mechanism for this exactly? Make new branches from past releases and overwrite the git sha in Versions.toml, or is there a less heavy handed way?</p>\n<blockquote>\n<p>not a good solution though, a \"proper\" one would also mean investigating why the more rigorous validation means that your XMLs are no longer conforming</p>\n</blockquote>\n<p>Of course, but in this case it is not feasible unfortunately since I don't own or control the xml files.</p>",
        "id": 418046853,
        "sender_full_name": "DrChainsaw",
        "timestamp": 1706177564
    },
    {
        "content": "<p>no, just make a PR and change the Compat.toml for your package</p>",
        "id": 418047244,
        "sender_full_name": "Sukera",
        "timestamp": 1706177691
    },
    {
        "content": "<p>the Compat.toml has sections of version ranges of your package, which then contain the accepted version ranges of dependencies for those versions of your package</p>",
        "id": 418047361,
        "sender_full_name": "Sukera",
        "timestamp": 1706177734
    },
    {
        "content": "<p>Yeah, that seems to be much easier. I suppose this implies that the Project.toml of dependencies is ignored when resolving package versions then?</p>",
        "id": 418047942,
        "sender_full_name": "DrChainsaw",
        "timestamp": 1706177960
    },
    {
        "content": "<p>good question, but it does seem like that</p>",
        "id": 418048401,
        "sender_full_name": "Sukera",
        "timestamp": 1706178112
    },
    {
        "content": "<p>I just know that there were cases in the past were packages got retroactively upperbounded in the registry, without cutting a new release</p>",
        "id": 418048516,
        "sender_full_name": "Sukera",
        "timestamp": 1706178141
    },
    {
        "content": "<p>might want to ask in slack in the pkg-registration channel though, my knowledge about the resolving algorithm is very superficial</p>",
        "id": 418048620,
        "sender_full_name": "Sukera",
        "timestamp": 1706178179
    },
    {
        "content": "<p>Thanks! Since it is a local registry I can probably afford to be a bit gung ho and see if it causes issues.</p>",
        "id": 418049671,
        "sender_full_name": "DrChainsaw",
        "timestamp": 1706178540
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300483\">DrChainsaw</span> has marked this topic as resolved.</p>",
        "id": 418049702,
        "sender_full_name": "Notification Bot",
        "timestamp": 1706178551
    },
    {
        "content": "<p>The biggest difficulty is usually to find the correct syntax to use in the updated Compat.toml.</p>",
        "id": 418051736,
        "sender_full_name": "Gunnar Farneb√§ck",
        "timestamp": 1706179308
    }
]