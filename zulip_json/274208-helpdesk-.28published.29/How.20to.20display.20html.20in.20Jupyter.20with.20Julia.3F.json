[
    {
        "content": "<p>How do I display \"html\" in Jupyter Notebook with Julia? I've tried searching for a package, but didn't find any specific.</p>",
        "id": 233874703,
        "sender_full_name": "Davi Sales Barreira",
        "timestamp": 1617995101
    },
    {
        "content": "<p>You can just use the <code>html</code> string macro!</p>",
        "id": 233875569,
        "sender_full_name": "Mason Protter",
        "timestamp": 1617995438
    },
    {
        "content": "<p><a href=\"/user_uploads/7178/tabJe_OK7hWVvyyMHt2IaprM/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/7178/tabJe_OK7hWVvyyMHt2IaprM/image.png\" title=\"image.png\"><img src=\"/user_uploads/7178/tabJe_OK7hWVvyyMHt2IaprM/image.png\"></a></div>",
        "id": 233875724,
        "sender_full_name": "Mason Protter",
        "timestamp": 1617995520
    },
    {
        "content": "<p>Thanks, Mason. Any other way using a function? I'm writing a package, so I guess using a macro is not the best way. I'm trying to write a wrapper to plot visualizations with D3.js. Do you think that using the \"html\" macro would be adequate?</p>",
        "id": 233876475,
        "sender_full_name": "Davi Sales Barreira",
        "timestamp": 1617995869
    },
    {
        "content": "<p>I'm not sure I understand the connection between not wanting to use a macro and developing a package</p>",
        "id": 233876903,
        "sender_full_name": "Mason Protter",
        "timestamp": 1617996062
    },
    {
        "content": "<p>But to answer your question, yes there is a <code>HTML</code> function that the <code>html</code> string macro will use during parse time. </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"kt\">HTML</span><span class=\"p\">(</span><span class=\"s\">\"hi\"</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">html</span><span class=\"s\">\"hi\"</span>\n<span class=\"kc\">true</span>\n</code></pre></div>",
        "id": 233877157,
        "sender_full_name": "Mason Protter",
        "timestamp": 1617996171
    },
    {
        "content": "<p>But in case there's a confusion here, there is no reason not to use macros in package development. In many cases, a macro (when applicable) can be more efficient than a function, like with the regex string macros, because they allow the regex to be compiled at macroexpansion instead of at runtime</p>",
        "id": 233877447,
        "sender_full_name": "Mason Protter",
        "timestamp": 1617996309
    },
    {
        "content": "<p>Thanks Mason! It was a thing I read somewhere. Although I probably misinterpreted.</p>",
        "id": 233879312,
        "sender_full_name": "Davi Sales Barreira",
        "timestamp": 1617997095
    },
    {
        "content": "<p>Probably the advice you heard was that many users first learning about metaprogramming overuse it, and that beginners should not be encouraged to create their own macros</p>",
        "id": 233881220,
        "sender_full_name": "Mason Protter",
        "timestamp": 1617997946
    },
    {
        "content": "<p>I think that while it's true that many new metaprogrammers will overdo it, I think that's a good thing! Doing something a lot (even when it's not necessary) is the fastest way to learn how to do something well.</p>",
        "id": 233881318,
        "sender_full_name": "Mason Protter",
        "timestamp": 1617998005
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"358317\">@Davi Sales Barreira</span>  If your string needs to be informed by the Julia processing context, you might also want to look at <a href=\"https://github.com/MechanicalRabbit/HypertextLiteral.jl\">HypertextLiteral.jl</a></p>",
        "id": 233906095,
        "sender_full_name": "Clark C. Evans",
        "timestamp": 1618010845
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"320796\">@Clark C. Evans</span> that's an awesome package! Thanks for pointing out.</p>",
        "id": 233946112,
        "sender_full_name": "Davi Sales Barreira",
        "timestamp": 1618052133
    }
]