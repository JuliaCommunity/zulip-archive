[
    {
        "content": "<p>Not sure if this shows what I think it does, but is is possible to only generate the following function for unique values of `N?</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">let</span>\n<span class=\"w\"> </span><span class=\"n\">cnt</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">Ref</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"nd\">@generated</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">nexprtest</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">::</span><span class=\"kt\">Tuple</span><span class=\"p\">{</span><span class=\"kt\">Vararg</span><span class=\"p\">{</span><span class=\"kt\">Any</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">N</span><span class=\"p\">}},</span><span class=\"w\"> </span><span class=\"nd\">@nospecialize</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"kt\">N</span><span class=\"w\"> </span><span class=\"c\">#@nospecialize does not seem to help here</span>\n<span class=\"w\">   </span><span class=\"n\">xis</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ntuple</span><span class=\"p\">(</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Symbol</span><span class=\"p\">(</span><span class=\"ss\">:x_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"kt\">Val</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">))</span>\n<span class=\"w\">   </span><span class=\"n\">cnt</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"w\">   </span><span class=\"k\">quote</span>\n<span class=\"w\">    </span><span class=\"nd\">@nexprs</span><span class=\"w\"> </span><span class=\"o\">$</span><span class=\"n\">N</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"o\">-&gt;</span><span class=\"p\">((</span><span class=\"n\">x_j</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">+</span><span class=\"n\">m</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"n\">m</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tuple</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"p\">(</span><span class=\"n\">xis</span><span class=\"o\">...</span><span class=\"p\">))</span>\n<span class=\"w\">   </span><span class=\"k\">end</span>\n<span class=\"w\"> </span><span class=\"k\">end</span>\n<span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">nexprtest</span><span class=\"p\">((</span><span class=\"mf\">3.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c\"># Generate the first time for N = 2 :)</span>\n<span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">cnt</span><span class=\"p\">[]</span>\n<span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">nexprtest</span><span class=\"p\">((</span><span class=\"mf\">4.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c\"># Will not generate :)</span>\n<span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">cnt</span><span class=\"p\">[]</span>\n<span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">nexprtest</span><span class=\"p\">((</span><span class=\"mf\">3.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mf\">4.0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c\"># Does generate since last arg has different type :(</span>\n<span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">cnt</span><span class=\"p\">[]</span>\n<span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">nexprtest</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c\"># Does generate since first arg has different type :(</span>\n<span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">cnt</span><span class=\"p\">[]</span>\n<span class=\"k\">end</span>\n\n<span class=\"c\"># Output:</span>\n<span class=\"n\">nexprtest</span><span class=\"p\">((</span><span class=\"mf\">3.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">6.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">))</span>\n<span class=\"n\">cnt</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"n\">nexprtest</span><span class=\"p\">((</span><span class=\"mf\">4.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">8.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">))</span>\n<span class=\"n\">cnt</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"n\">nexprtest</span><span class=\"p\">((</span><span class=\"mf\">3.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mf\">4.0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">16.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">6.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">))</span>\n<span class=\"n\">cnt</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n<span class=\"n\">nexprtest</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">))</span>\n<span class=\"n\">cnt</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span>\n<span class=\"mi\">3</span>\n</code></pre></div>",
        "id": 378973022,
        "sender_full_name": "DrChainsaw",
        "timestamp": 1690418300
    },
    {
        "content": "<p>Yeah, generated functions <strong>always</strong> generate for the specific args</p>",
        "id": 378984306,
        "sender_full_name": "Mason Protter",
        "timestamp": 1690425258
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300483\">DrChainsaw</span> has marked this topic as resolved.</p>",
        "id": 379060783,
        "sender_full_name": "Notification Bot",
        "timestamp": 1690447721
    }
]