[
    {
        "content": "<p>I've been fighting for hours with the compiler and can't figure out what is happening. Appreciate any help.</p>\n<p>The following code works fine with unitless columns:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">GeoStats</span>\n\n<span class=\"c\"># table with single column z</span>\n<span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">georef</span><span class=\"p\">((</span><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">,</span><span class=\"mi\">300</span><span class=\"p\">),))</span>\n\n<span class=\"n\">d</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Detrend</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@time</span><span class=\"w\"> </span><span class=\"n\">d</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">);</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"mf\">26.553297</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">10.20</span><span class=\"w\"> </span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"n\">allocations</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mf\">407.415</span><span class=\"w\"> </span><span class=\"n\">MiB</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.17</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">gc</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.02</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">compilation</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>If I add units to the column:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">georef</span><span class=\"p\">((</span><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">,</span><span class=\"mi\">300</span><span class=\"p\">)</span><span class=\"sa\">u</span><span class=\"s\">\"K\"</span><span class=\"p\">,))</span>\n\n<span class=\"nd\">@time</span><span class=\"w\"> </span><span class=\"n\">d</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">);</span>\n</code></pre></div>\n<p>then the execution never ends (or takes too long, I don't know).</p>\n<p>The output of the functor is inferred properly:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"nd\">@code_warntype</span><span class=\"w\"> </span><span class=\"n\">d</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">MethodInstance</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">Detrend</span><span class=\"p\">{</span><span class=\"kt\">ColumnSelectors</span><span class=\"o\">.</span><span class=\"kt\">AllSelector</span><span class=\"p\">})(</span><span class=\"o\">::</span><span class=\"kt\">GeoTable</span><span class=\"p\">{</span><span class=\"kt\">CartesianGrid</span><span class=\"p\">{</span><span class=\"kt\">𝔼</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"kt\">Cartesian2D</span><span class=\"p\">{</span><span class=\"kt\">NoDatum</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}},</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Tuple</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}},</span><span class=\"w\"> </span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}},</span><span class=\"w\"> </span><span class=\"nd\">@NamedTuple</span><span class=\"p\">{</span><span class=\"kt\">z</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">K</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}}})</span>\n<span class=\"w\">  </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">transform</span><span class=\"o\">::</span><span class=\"kt\">TransformsBase</span><span class=\"o\">.</span><span class=\"n\">Transform</span><span class=\"p\">)(</span><span class=\"n\">object</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">TransformsBase</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">TransformsBase</span><span class=\"o\">/</span><span class=\"n\">w6gll</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">124</span>\n<span class=\"n\">Arguments</span>\n<span class=\"w\">  </span><span class=\"n\">transform</span><span class=\"o\">::</span><span class=\"kt\">Detrend</span><span class=\"p\">{</span><span class=\"kt\">ColumnSelectors</span><span class=\"o\">.</span><span class=\"kt\">AllSelector</span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"n\">object</span><span class=\"o\">::</span><span class=\"kt\">GeoTable</span><span class=\"p\">{</span><span class=\"kt\">CartesianGrid</span><span class=\"p\">{</span><span class=\"kt\">𝔼</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"kt\">Cartesian2D</span><span class=\"p\">{</span><span class=\"kt\">NoDatum</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}},</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Tuple</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}},</span><span class=\"w\"> </span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}},</span><span class=\"w\"> </span><span class=\"nd\">@NamedTuple</span><span class=\"p\">{</span><span class=\"kt\">z</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">K</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}}}</span>\n<span class=\"n\">Body</span><span class=\"o\">::</span><span class=\"kt\">GeoTable</span><span class=\"p\">{</span><span class=\"kt\">CartesianGrid</span><span class=\"p\">{</span><span class=\"kt\">𝔼</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"kt\">Cartesian2D</span><span class=\"p\">{</span><span class=\"kt\">NoDatum</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}},</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Tuple</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}},</span><span class=\"w\"> </span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}},</span><span class=\"w\"> </span><span class=\"nd\">@NamedTuple</span><span class=\"p\">{</span><span class=\"kt\">z</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">K</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}}}</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">─</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">TransformsBase</span><span class=\"o\">.:|&gt;::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">Const</span><span class=\"p\">(</span><span class=\"o\">|&gt;</span><span class=\"p\">)</span>\n<span class=\"n\">│</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">TransformsBase</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">transform</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">object</span><span class=\"p\">)</span><span class=\"o\">::</span><span class=\"kt\">Tuple</span><span class=\"p\">{</span><span class=\"kt\">GeoTable</span><span class=\"p\">{</span><span class=\"kt\">CartesianGrid</span><span class=\"p\">{</span><span class=\"kt\">𝔼</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"kt\">Cartesian2D</span><span class=\"p\">{</span><span class=\"kt\">NoDatum</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}},</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Tuple</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}},</span><span class=\"w\"> </span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}},</span><span class=\"w\"> </span><span class=\"nd\">@NamedTuple</span><span class=\"p\">{</span><span class=\"kt\">z</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">K</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}}},</span><span class=\"w\"> </span><span class=\"kt\">Tuple</span><span class=\"p\">{</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Symbol</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"kt\">GeoStatsModels</span><span class=\"o\">.</span><span class=\"kt\">FittedPolynomial</span><span class=\"p\">{</span><span class=\"kt\">Polynomial</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">GeoStatsModels</span><span class=\"o\">.</span><span class=\"kt\">PolynomialState</span><span class=\"p\">{</span><span class=\"kt\">GeoTable</span><span class=\"p\">{</span><span class=\"kt\">CartesianGrid</span><span class=\"p\">{</span><span class=\"kt\">𝔼</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"kt\">Cartesian2D</span><span class=\"p\">{</span><span class=\"kt\">NoDatum</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}},</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Tuple</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}},</span><span class=\"w\"> </span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}},</span><span class=\"w\"> </span><span class=\"kt\">TableTransforms</span><span class=\"o\">.</span><span class=\"kt\">TableSelection</span><span class=\"p\">{</span><span class=\"nd\">@NamedTuple</span><span class=\"p\">{</span><span class=\"kt\">z</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">K</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}},</span><span class=\"w\"> </span><span class=\"nd\">@NamedTuple</span><span class=\"p\">{</span><span class=\"kt\">z</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">K</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}}}},</span><span class=\"w\"> </span><span class=\"kt\">Matrix</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">}}}}}</span>\n<span class=\"n\">│</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">TransformsBase</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">Const</span><span class=\"p\">(</span><span class=\"n\">first</span><span class=\"p\">)</span>\n<span class=\"n\">│</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"mi\">1</span><span class=\"p\">)(</span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">::</span><span class=\"kt\">GeoTable</span><span class=\"p\">{</span><span class=\"kt\">CartesianGrid</span><span class=\"p\">{</span><span class=\"kt\">𝔼</span><span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"kt\">Cartesian2D</span><span class=\"p\">{</span><span class=\"kt\">NoDatum</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}},</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Tuple</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}},</span><span class=\"w\"> </span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">m</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝐋</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}},</span><span class=\"w\"> </span><span class=\"nd\">@NamedTuple</span><span class=\"p\">{</span><span class=\"kt\">z</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Quantity</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Unitful</span><span class=\"o\">.</span><span class=\"kt\">FreeUnits</span><span class=\"p\">{(</span><span class=\"kt\">K</span><span class=\"p\">,),</span><span class=\"w\"> </span><span class=\"kt\">𝚯</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">nothing</span><span class=\"p\">}}}}}</span>\n<span class=\"n\">└──</span><span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"mi\">4</span>\n</code></pre></div>\n<p>And I don't know what to do to investigate the issue further.</p>\n<p>The actual code that is executed by the functor is here: <a href=\"https://github.com/JuliaEarth/GeoStatsTransforms.jl/blob/b378c9d9fe19ec094c455f6a380ab2a706b28676/src/detrend.jl#L44-L70\">https://github.com/JuliaEarth/GeoStatsTransforms.jl/blob/b378c9d9fe19ec094c455f6a380ab2a706b28676/src/detrend.jl#L44-L70</a></p>\n<p>As you can see, there is a final <code>map</code> call with some captures. Is that the reason for the compiler struggle? How to fix the code? I tried to follow the <code>let</code> trick discussed in the Julia manual, but it didn't solve the issue: <a href=\"https://docs.julialang.org/en/v1/manual/performance-tips/#man-performance-captured\">https://docs.julialang.org/en/v1/manual/performance-tips/#man-performance-captured</a></p>",
        "id": 529083481,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752678878
    },
    {
        "content": "<p>these issues are tough to figure out. Usually, I would try to factor out the lines in the functor and just evaluate line by line to try to isolate which is the offender. One would say \"use the debugger\", too bad the Julia debugger sucks.</p>",
        "id": 529085942,
        "sender_full_name": "Kyle Beggs",
        "timestamp": 1752679617
    },
    {
        "content": "<p>I know the offender line is the <code>predict</code> call in the <code>map</code>. But I can't figure out a fix.</p>",
        "id": 529086108,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752679671
    },
    {
        "content": "<p>And the worst thing is that this same code used to work in previous Julia versions I think.</p>",
        "id": 529086832,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752679912
    },
    {
        "content": "<p>are you on 1.11.6?</p>",
        "id": 529087684,
        "sender_full_name": "Kyle Beggs",
        "timestamp": 1752680179
    },
    {
        "content": "<p>Yes</p>",
        "id": 529088625,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752680456
    },
    {
        "content": "<p><code>JET.@report_opt</code> might be worth trying</p>",
        "id": 529100603,
        "sender_full_name": "jar",
        "timestamp": 1752684694
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"424813\">Kyle Beggs</span> <a href=\"#narrow/stream/274208-helpdesk-.28published.29/topic/Compiler.20having.20trouble.20with.20type.20inference/near/529085942\">said</a>:</p>\n<blockquote>\n<p>One would say \"use the debugger\", too bad the Julia debugger sucks.</p>\n</blockquote>\n<p>I don't think anyone would suggest to use a debugger to figure out why inference is failing, since it wouldn't help at all whit that. Using <a href=\"https://juliaregistries.github.io/General/packages/redirect_to_repo/Cthulhu\">Cthulhu.jl</a> would be a better idea instead.</p>",
        "id": 529162281,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1752697681
    },
    {
        "content": "<p><a href=\"https://juliaregistries.github.io/General/packages/redirect_to_repo/Cthulhu\">Cthulhu.jl</a> doesn't compile for me on Julia v1.11.6</p>",
        "id": 529165300,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752699123
    },
    {
        "content": "<p>In a <code>]activate --temp</code> environment, even?</p>",
        "id": 529165703,
        "sender_full_name": "jar",
        "timestamp": 1752699300
    },
    {
        "content": "<p>Yes, it fails to precompile:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span>\n<span class=\"n\">Precompiling</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"o\">...</span>\n<span class=\"n\">Info</span><span class=\"w\"> </span><span class=\"n\">Given</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">explicitly</span><span class=\"w\"> </span><span class=\"n\">requested</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">output</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">shown</span><span class=\"w\"> </span><span class=\"n\">live</span>\n<span class=\"n\">WARNING</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">could</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"k\">import</span><span class=\"w\"> </span><span class=\"n\">JuliaSyntax</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span>\n<span class=\"n\">┌</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Errorred</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">running</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">precompile</span><span class=\"w\"> </span><span class=\"n\">workload</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">work</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">latency</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">long</span>\n<span class=\"n\">│</span><span class=\"w\">   </span><span class=\"n\">exeption</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"n\">│</span><span class=\"w\">    </span><span class=\"kt\">UndefVarError</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"sb\">`child`</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"sb\">`TypedSyntax`</span>\n<span class=\"n\">│</span><span class=\"w\">    </span><span class=\"n\">Suggestion</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">spelling</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"nb\">missing</span><span class=\"w\"> </span><span class=\"n\">imports</span><span class=\"o\">.</span>\n<span class=\"n\">│</span><span class=\"w\">    </span><span class=\"n\">Stacktrace</span><span class=\"o\">:</span>\n<span class=\"n\">│</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">collect_symbol_nodes</span><span class=\"p\">(</span><span class=\"n\">rootnode</span><span class=\"o\">::</span><span class=\"kt\">JuliaSyntax</span><span class=\"o\">.</span><span class=\"n\">SyntaxNode</span><span class=\"p\">)</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">TypedSyntax</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">TypedSyntax</span><span class=\"o\">/</span><span class=\"n\">eS4sW</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">417</span>\n<span class=\"n\">│</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">map_ssas_to_source</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">CodeInfo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mi</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">MethodInstance</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rootnode</span><span class=\"o\">::</span><span class=\"kt\">JuliaSyntax</span><span class=\"o\">.</span><span class=\"n\">SyntaxNode</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Δline</span><span class=\"o\">::</span><span class=\"kt\">Int64</span><span class=\"p\">)</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">TypedSyntax</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">TypedSyntax</span><span class=\"o\">/</span><span class=\"n\">eS4sW</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">529</span>\n<span class=\"n\">│</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">map_ssas_to_source</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">TypedSyntax</span><span class=\"o\">/</span><span class=\"n\">eS4sW</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">868</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">inlined</span><span class=\"p\">]</span>\n<span class=\"n\">│</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tsn_and_mappings</span><span class=\"p\">(</span><span class=\"n\">mi</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">MethodInstance</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">src</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">CodeInfo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rt</span><span class=\"o\">::</span><span class=\"kt\">Any</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sourcetext</span><span class=\"o\">::</span><span class=\"kt\">SubString</span><span class=\"p\">{</span><span class=\"kt\">String</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">lineno</span><span class=\"o\">::</span><span class=\"kt\">Int32</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">warn</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strip_macros</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kwargs</span><span class=\"o\">::</span><span class=\"nd\">@Kwargs</span><span class=\"p\">{})</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">TypedSyntax</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">TypedSyntax</span><span class=\"o\">/</span><span class=\"n\">eS4sW</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">54</span>\n<span class=\"n\">│</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tsn_and_mappings</span><span class=\"p\">(</span><span class=\"n\">mi</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">MethodInstance</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">src</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">CodeInfo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rt</span><span class=\"o\">::</span><span class=\"kt\">Any</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">warn</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strip_macros</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kwargs</span><span class=\"o\">::</span><span class=\"nd\">@Kwargs</span><span class=\"p\">{})</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">TypedSyntax</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">TypedSyntax</span><span class=\"o\">/</span><span class=\"n\">eS4sW</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">39</span>\n<span class=\"n\">│</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">get_typed_sourcetext</span><span class=\"p\">(</span><span class=\"n\">mi</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">MethodInstance</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">src</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">CodeInfo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rt</span><span class=\"o\">::</span><span class=\"kt\">Any</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">warn</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">)</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">reflection</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">377</span>\n<span class=\"n\">│</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">find_callsites</span><span class=\"p\">(</span><span class=\"n\">interp</span><span class=\"o\">::</span><span class=\"kt\">Cthulhu</span><span class=\"o\">.</span><span class=\"n\">CthulhuInterpreter</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">CI</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">CodeInfo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stmt_infos</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"kt\">Compiler</span><span class=\"o\">.</span><span class=\"kt\">CallInfo</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">mi</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">MethodInstance</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">slottypes</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Any</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">optimize</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">annotate_source</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">pc2excts</span><span class=\"o\">::</span><span class=\"kt\">Nothing</span><span class=\"p\">)</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">reflection</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">33</span>\n<span class=\"n\">│</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">_descend</span><span class=\"p\">(</span><span class=\"n\">term</span><span class=\"o\">::</span><span class=\"kt\">REPL</span><span class=\"o\">.</span><span class=\"n\">Terminals</span><span class=\"o\">.</span><span class=\"n\">TTYTerminal</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">interp</span><span class=\"o\">::</span><span class=\"kt\">Cthulhu</span><span class=\"o\">.</span><span class=\"n\">CthulhuInterpreter</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">curs</span><span class=\"o\">::</span><span class=\"kt\">Cthulhu</span><span class=\"o\">.</span><span class=\"n\">CthulhuCursor</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">override</span><span class=\"o\">::</span><span class=\"kt\">Nothing</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"o\">::</span><span class=\"kt\">Symbol</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">optimize</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">interruptexc</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">iswarn</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">hide_type_stable</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">verbose</span><span class=\"o\">::</span><span class=\"kt\">Nothing</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">remarks</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">with_effects</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">exception_type</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inline_cost</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">type_annotations</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">annotate_source</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inlay_types_vscode</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">diagnostics_vscode</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">jump_always</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">)</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">CthulhuBase</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">405</span>\n<span class=\"n\">│</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">_descend</span><span class=\"p\">(</span><span class=\"n\">term</span><span class=\"o\">::</span><span class=\"kt\">REPL</span><span class=\"o\">.</span><span class=\"n\">Terminals</span><span class=\"o\">.</span><span class=\"n\">TTYTerminal</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">interp</span><span class=\"o\">::</span><span class=\"kt\">Cthulhu</span><span class=\"o\">.</span><span class=\"n\">CthulhuInterpreter</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mi</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">MethodInstance</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">kwargs</span><span class=\"o\">::</span><span class=\"nd\">@Kwargs</span><span class=\"p\">{</span><span class=\"kt\">iswarn</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">})</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">CthulhuBase</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">709</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">_descend</span><span class=\"p\">(</span><span class=\"n\">term</span><span class=\"o\">::</span><span class=\"kt\">REPL</span><span class=\"o\">.</span><span class=\"n\">Terminals</span><span class=\"o\">.</span><span class=\"n\">TTYTerminal</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">args</span><span class=\"o\">::</span><span class=\"kt\">Any</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">interp</span><span class=\"o\">::</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">Compiler</span><span class=\"o\">.</span><span class=\"n\">NativeInterpreter</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kwargs</span><span class=\"o\">::</span><span class=\"nd\">@Kwargs</span><span class=\"p\">{</span><span class=\"kt\">iswarn</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">})</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">CthulhuBase</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">725</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">__descend_with_error_handling</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">::</span><span class=\"kt\">Any</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">terminal</span><span class=\"o\">::</span><span class=\"kt\">Any</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kwargs</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">CthulhuBase</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">138</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">12</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">_descend_with_error_handling</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">::</span><span class=\"kt\">Any</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">argtypes</span><span class=\"o\">::</span><span class=\"kt\">Any</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">kwargs</span><span class=\"o\">::</span><span class=\"nd\">@Kwargs</span><span class=\"p\">{</span><span class=\"kt\">iswarn</span><span class=\"o\">::</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">terminal</span><span class=\"o\">::</span><span class=\"kt\">REPL</span><span class=\"o\">.</span><span class=\"kt\">Terminals</span><span class=\"o\">.</span><span class=\"kt\">TTYTerminal</span><span class=\"p\">})</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">CthulhuBase</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">127</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">13</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">descend_impl</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">Any</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"kt\">Vararg</span><span class=\"p\">{</span><span class=\"kt\">Any</span><span class=\"p\">};</span><span class=\"w\"> </span><span class=\"n\">kwargs</span><span class=\"o\">::</span><span class=\"nd\">@Kwargs</span><span class=\"p\">{</span><span class=\"kt\">terminal</span><span class=\"o\">::</span><span class=\"kt\">REPL</span><span class=\"o\">.</span><span class=\"kt\">Terminals</span><span class=\"o\">.</span><span class=\"kt\">TTYTerminal</span><span class=\"p\">})</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">CthulhuBase</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">152</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">14</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">descend</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">Any</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"kt\">Vararg</span><span class=\"p\">{</span><span class=\"kt\">Any</span><span class=\"p\">};</span><span class=\"w\"> </span><span class=\"n\">kwargs</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">116</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">descend</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">115</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">inlined</span><span class=\"p\">]</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"k\">macro</span><span class=\"w\"> </span><span class=\"n\">expansion</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">PrecompileTools</span><span class=\"o\">/</span><span class=\"n\">L8A3n</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">workloads</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">78</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">inlined</span><span class=\"p\">]</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">17</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"k\">macro</span><span class=\"w\"> </span><span class=\"n\">expansion</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">203</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">inlined</span><span class=\"p\">]</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"k\">macro</span><span class=\"w\"> </span><span class=\"n\">expansion</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">PrecompileTools</span><span class=\"o\">/</span><span class=\"n\">L8A3n</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">workloads</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">140</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">inlined</span><span class=\"p\">]</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">19</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">top</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"n\">scope</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">197</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">include</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"o\">./</span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">562</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">inlined</span><span class=\"p\">]</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">21</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">include_package_for_output</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"o\">::</span><span class=\"kt\">Base</span><span class=\"o\">.</span><span class=\"n\">PkgId</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"o\">::</span><span class=\"kt\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">depot_path</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">String</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">dl_load_path</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">String</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">load_path</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">String</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">concrete_deps</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Pair</span><span class=\"p\">{</span><span class=\"kt\">Base</span><span class=\"o\">.</span><span class=\"kt\">PkgId</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">UInt128</span><span class=\"p\">}},</span><span class=\"w\"> </span><span class=\"n\">source</span><span class=\"o\">::</span><span class=\"kt\">Nothing</span><span class=\"p\">)</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"w\"> </span><span class=\"o\">./</span><span class=\"n\">loading</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">2881</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">22</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">top</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"n\">scope</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"nb\">stdin</span><span class=\"o\">:</span><span class=\"mi\">6</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">23</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">eval</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"o\">./</span><span class=\"n\">boot</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">430</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">inlined</span><span class=\"p\">]</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">24</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">include_string</span><span class=\"p\">(</span><span class=\"n\">mapexpr</span><span class=\"o\">::</span><span class=\"n\">typeof</span><span class=\"p\">(</span><span class=\"n\">identity</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">mod</span><span class=\"o\">::</span><span class=\"kt\">Module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"o\">::</span><span class=\"kt\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"o\">::</span><span class=\"kt\">String</span><span class=\"p\">)</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"w\"> </span><span class=\"o\">./</span><span class=\"n\">loading</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">2734</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">25</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">include_string</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"o\">./</span><span class=\"n\">loading</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">2744</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">inlined</span><span class=\"p\">]</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">26</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">exec_options</span><span class=\"p\">(</span><span class=\"n\">opts</span><span class=\"o\">::</span><span class=\"kt\">Base</span><span class=\"o\">.</span><span class=\"n\">JLOptions</span><span class=\"p\">)</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"w\"> </span><span class=\"o\">./</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">321</span>\n<span class=\"n\">│</span><span class=\"w\">     </span><span class=\"p\">[</span><span class=\"mi\">27</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">_start</span><span class=\"p\">()</span>\n<span class=\"n\">│</span><span class=\"w\">        </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"w\"> </span><span class=\"o\">./</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">531</span>\n<span class=\"n\">└</span><span class=\"w\"> </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"w\"> </span><span class=\"o\">~/.</span><span class=\"n\">julia</span><span class=\"o\">/</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">/</span><span class=\"n\">kMTSr</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Cthulhu</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">213</span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">dependencies</span><span class=\"w\"> </span><span class=\"n\">successfully</span><span class=\"w\"> </span><span class=\"n\">precompiled</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"o\">.</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"n\">already</span><span class=\"w\"> </span><span class=\"n\">precompiled</span><span class=\"o\">.</span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">dependencies</span><span class=\"w\"> </span><span class=\"n\">had</span><span class=\"w\"> </span><span class=\"n\">output</span><span class=\"w\"> </span><span class=\"n\">during</span><span class=\"w\"> </span><span class=\"n\">precompilation</span><span class=\"o\">:</span>\n<span class=\"n\">┌</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span>\n<span class=\"n\">│</span><span class=\"w\">  </span><span class=\"p\">[</span><span class=\"n\">Output</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">shown</span><span class=\"w\"> </span><span class=\"n\">above</span><span class=\"p\">]</span>\n<span class=\"n\">└</span>\n<span class=\"n\">┌</span><span class=\"w\"> </span><span class=\"n\">TypedSyntax</span>\n<span class=\"n\">│</span><span class=\"w\">  </span><span class=\"n\">WARNING</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">could</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"k\">import</span><span class=\"w\"> </span><span class=\"n\">JuliaSyntax</span><span class=\"o\">.</span><span class=\"n\">child</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"n\">TypedSyntax</span>\n</code></pre></div>",
        "id": 529166045,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752699450
    },
    {
        "content": "<p>It is stuck in a previous version:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">jl_NQMOcX</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">pkg</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">outdated</span>\n<span class=\"n\">Status</span><span class=\"w\"> </span><span class=\"sb\">`/tmp/jl_NQMOcX/Project.toml`</span>\n<span class=\"n\">⌅</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">f68482b8</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">Cthulhu</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"mf\">.16.5</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">v2</span><span class=\"mf\">.17.4</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">julia</span>\n</code></pre></div>",
        "id": 529166143,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752699506
    },
    {
        "content": "<p>to me that looks like your Cthulhu needs old JuliaSyntax (<a href=\"https://github.com/JuliaDebug/Cthulhu.jl/blob/747aaf89e727d35563c31c48694ccc8576ffe355/Project.toml#L11\">https://github.com/JuliaDebug/Cthulhu.jl/blob/747aaf89e727d35563c31c48694ccc8576ffe355/Project.toml#L11</a>) but you likely have a different version loaded. Common issue with stacked environments, e.g. <a href=\"https://github.com/JuliaTesting/ExplicitImports.jl/issues/119\">https://github.com/JuliaTesting/ExplicitImports.jl/issues/119</a></p>",
        "id": 529173399,
        "sender_full_name": "Eric Hanson",
        "timestamp": 1752703412
    },
    {
        "content": "<p>This is a temp env</p>",
        "id": 529173804,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752703685
    },
    {
        "content": "<p>Yes, but it was likely stacked on another environment that already loaded a different juliasyntax version</p>",
        "id": 529174690,
        "sender_full_name": "Mason Protter",
        "timestamp": 1752704237
    },
    {
        "content": "<p>You mean I should uninstall the packages in my <code>@v1.11</code> env?</p>",
        "id": 529174878,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752704323
    },
    {
        "content": "<p>In order to install <a href=\"https://juliaregistries.github.io/General/packages/redirect_to_repo/Cthulhu\">Cthulhu.jl</a> in a temp env without conflict ?</p>",
        "id": 529174934,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752704350
    },
    {
        "content": "<p>I thought a temp env was completely independent from the global env</p>",
        "id": 529174983,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752704376
    },
    {
        "content": "<p>I found the issue by just reading the code carefully. There is a matrix-vector multiplication <code>P * z</code> where <code>z</code> is the column of the table. When <code>z</code> is unitful, the call hits a super slow multiplication fallback.</p>",
        "id": 529182339,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752709964
    },
    {
        "content": "<p>Suppose <code>P = rand(3, 300000)</code> and <code>z = rand(300000) * u\"K\"</code>. How to efficiently compute <code>P * z</code> without allocating intermediate memory?</p>\n<p>The following attempt is memory-hungry:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">u</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">unit</span><span class=\"p\">(</span><span class=\"n\">eltype</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">ustrip</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">u</span>\n</code></pre></div>\n<p>and because this multiplication happens millions of times in a hot-loop I can't afford the allocations.</p>",
        "id": 529182737,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752710281
    },
    {
        "content": "<p>Even if a new method <code>Base.:*(A::AbstractMatrix, z::AbstractVector{&lt;:Quantity})</code> is added to <a href=\"https://juliaregistries.github.io/General/packages/redirect_to_repo/Unitful\">Unitful.jl</a>, I don't see how to avoid the intermediate allocation? Is there a low-level workaround to manipulate the buffer of floats without  the units during matrix-vector multiplication?</p>",
        "id": 529182861,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752710376
    },
    {
        "content": "<p>I will try to open up the multiplication as a linear combination of columns of <code>P </code> to see how the performance is affected.</p>",
        "id": 529183120,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752710527
    },
    {
        "content": "<p>The fastest alternative so far:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">pj</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">zj</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">pj</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">zj</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">zip</span><span class=\"p\">(</span><span class=\"n\">eachcol</span><span class=\"p\">(</span><span class=\"n\">P</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"p\">))</span>\n</code></pre></div>",
        "id": 529183518,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752710777
    },
    {
        "content": "<p>Actually, I don't know if that is the actual issue. Just measured the time again and the difference is small compared to the unitless case.</p>",
        "id": 529184878,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752712046
    },
    {
        "content": "<p>I am back to where I started. Will keep debugging.</p>",
        "id": 529184901,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752712072
    },
    {
        "content": "<p>Have you tried the profiler? If you’re already using vscode you can use <code>@profview</code> with the code you run.</p>",
        "id": 529186885,
        "sender_full_name": "wheeheee",
        "timestamp": 1752714105
    },
    {
        "content": "<p>I'll dive into it again tomorrow after fixing other issues in other places</p>",
        "id": 529186934,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752714163
    },
    {
        "content": "<p>It is frustrating to encounter these situations in Julia. The code is ok one day and then out of the sudden it stops working.</p>",
        "id": 529187049,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752714208
    },
    {
        "content": "<p>I discovered this issue today trying to rerun a workshop material I prepared last year</p>",
        "id": 529187068,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752714226
    },
    {
        "content": "<p>I can't reproduce your Cthulhu problem with a temp environment with only <code>]add GeoStats, Cthulhu</code> then <code>using GeoStats, Cthulhu</code>. But with a smaller <code>z = rand(1000, 60);</code> it takes &gt; 2x the time for the unitful version. <code>@profview</code> shows that most of the time is spent at <code>P * z</code> which you've already identified so I guess you just have to hammer away at that.</p>",
        "id": 529197793,
        "sender_full_name": "wheeheee",
        "timestamp": 1752724046
    },
    {
        "content": "<p>So it seems that this is indeed the root of the issue? The matrix-vector multiplication where the vector is unitful. I wonder why this script I wrote 10 months ago for a workshop worked without a problem. The Julia version back then was v1.10.5 but I am having issue running it with juliaup: <a class=\"stream-topic\" data-stream-id=\"274208\" href=\"/#narrow/channel/274208-helpdesk-.28published.29/topic/juliaup.20failing.20to.20launch.20v1.2E10.2E5/with/529342740\">#helpdesk (published) &gt; juliaup failing to launch v1.10.5</a></p>",
        "id": 529343903,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752780888
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"273172\">Júlio Hoffimann</span> <a href=\"#narrow/channel/274208-helpdesk-.28published.29/topic/Compiler.20having.20trouble.20with.20type.20inference/near/529182737\">said</a>:</p>\n<blockquote>\n<p>Suppose <code>P = rand(3, 300000)</code> and <code>z = rand(300000) * u\"K\"</code>. How to efficiently compute <code>P * z</code> without allocating intermediate memory?</p>\n<p>The following attempt is memory-hungry:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">u</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">unit</span><span class=\"p\">(</span><span class=\"n\">eltype</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">ustrip</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">u</span>\n</code></pre></div>\n<p>and because this multiplication happens millions of times in a hot-loop I can't afford the allocations.</p>\n</blockquote>\n<p>Actually, I think you almost have it. <code>ustrip.(z)</code> allocates a nice new <code>Array</code>, but you can get away with <code>ustrip(z)</code> which gets you a <code>ReinterpretArray</code> without allocating, like</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">u</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">unit</span><span class=\"p\">(</span><span class=\"n\">eltype</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">))</span>\n<span class=\"n\">θ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">ustrip</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"p\">]</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">θ</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">u</span>\n</code></pre></div>\n<p>Assuming <code>P</code> is unitless, <code>generic_matvecmul!</code> should use <code>gemv!</code> and be fast.<br>\nincidentally <code>vandermonde</code> looks like it allocates a lot more, and since you use this in a hot loop...</p>",
        "id": 529398980,
        "sender_full_name": "wheeheee",
        "timestamp": 1752820328
    },
    {
        "content": "<p>Didn't know about the ustrip method for arrays returned a <code>ReinterpretArray</code>. That should certainly help! Thank you! Will try as soon I'm back to my workstation.</p>",
        "id": 529399306,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752820534
    },
    {
        "content": "<p>Weirdly enough, the trick with <code>ustrip</code> solved the case where <code>z</code> is unitful, but slowed down the case where it is a plain vector of floats.</p>",
        "id": 529445069,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752838803
    },
    {
        "content": "<p>I will add an auxiliary function to branch between behaviors at compile time. But it is annoying to deal with this manually.</p>",
        "id": 529445121,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752838827
    },
    {
        "content": "<p>I also wish there was an official \"free\" way to do <code>ustrip</code> (and the other way around, to add units for free).<br>\nSee <a href=\"https://github.com/PainterQubits/Unitful.jl/issues/717\">https://github.com/PainterQubits/Unitful.jl/issues/717</a> for some discussion.</p>",
        "id": 529446343,
        "sender_full_name": "aplavin",
        "timestamp": 1752839424
    },
    {
        "content": "<p>Very relevant issue, thanks for sharing <span aria-label=\"100\" class=\"emoji emoji-1f4af\" role=\"img\" title=\"100\">:100:</span></p>",
        "id": 529446582,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752839533
    },
    {
        "content": "<p>The problem I mentioned however is only concerned with <code>Array</code>, and I don't know why <code>ustrip</code> is causing a slowdown when the input array is a plain array of floats. I thought it should just forward the array as is.</p>",
        "id": 529446823,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752839638
    },
    {
        "content": "<p>But it is allocating every time.</p>",
        "id": 529446946,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752839690
    },
    {
        "content": "<p>Commented on the issue.</p>",
        "id": 529447216,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752839804
    },
    {
        "content": "<p>Hmm, idk how but I get <em>faster</em> multiplication with Unitful and <em>slower</em> with plain numbers:<br>\n<a href=\"/user_uploads/7178/cdUkVNTTCdUUT96y5QiPy684/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/7178/cdUkVNTTCdUUT96y5QiPy684/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"690x1202\" src=\"/user_uploads/thumbnail/7178/cdUkVNTTCdUUT96y5QiPy684/image.png/840x560.webp\"></a></div>",
        "id": 529449224,
        "sender_full_name": "aplavin",
        "timestamp": 1752840499
    },
    {
        "content": "<p>Can you try with <code>zu = z * u\"K\"</code> just to make sure we are using the exact same inputs?</p>",
        "id": 529449581,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752840625
    },
    {
        "content": "<p>I will run locally here as well.</p>",
        "id": 529449634,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752840641
    },
    {
        "content": "<p>Can't reproduce:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nd\">@btime</span><span class=\"w\"> </span><span class=\"o\">$</span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"o\">$</span><span class=\"n\">z</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"mf\">71.367</span><span class=\"w\"> </span><span class=\"n\">μs</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">allocations</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">80</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">)</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nd\">@btime</span><span class=\"w\"> </span><span class=\"o\">$</span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"o\">$</span><span class=\"n\">zu</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"mf\">747.104</span><span class=\"w\"> </span><span class=\"n\">μs</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">allocations</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">80</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 529450060,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752840771
    },
    {
        "content": "<p>For me it's very stable, unitful ~2x faster. Macbook m2.</p>",
        "id": 529458215,
        "sender_full_name": "aplavin",
        "timestamp": 1752843623
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">Julia</span><span class=\"w\"> </span><span class=\"n\">Version</span><span class=\"w\"> </span><span class=\"mf\">1.11.6</span>\n<span class=\"n\">Commit</span><span class=\"w\"> </span><span class=\"mi\">9615</span><span class=\"n\">af0f269</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">07</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"o\">:</span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">UTC</span><span class=\"p\">)</span>\n<span class=\"n\">Build</span><span class=\"w\"> </span><span class=\"n\">Info</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"n\">Official</span><span class=\"w\"> </span><span class=\"n\">https</span><span class=\"o\">://</span><span class=\"n\">julialang</span><span class=\"o\">.</span><span class=\"n\">org</span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">release</span>\n<span class=\"n\">Platform</span><span class=\"w\"> </span><span class=\"n\">Info</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"n\">OS</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Linux</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">CPU</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"o\">×</span><span class=\"w\"> </span><span class=\"n\">Intel</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Core</span><span class=\"p\">(</span><span class=\"n\">TM</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">i7</span><span class=\"o\">-</span><span class=\"mi\">9700</span><span class=\"w\"> </span><span class=\"n\">CPU</span><span class=\"w\"> </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"mf\">3.00</span><span class=\"n\">GHz</span>\n<span class=\"w\">  </span><span class=\"n\">WORD_SIZE</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">64</span>\n<span class=\"w\">  </span><span class=\"n\">LLVM</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">libLLVM</span><span class=\"o\">-</span><span class=\"mf\">16.0.6</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ORCJIT</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">skylake</span><span class=\"p\">)</span>\n<span class=\"n\">Threads</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">interactive</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">GC</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"n\">virtual</span><span class=\"w\"> </span><span class=\"n\">cores</span><span class=\"p\">)</span>\n<span class=\"n\">Environment</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"n\">JULIA_NUM_THREADS</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">8</span>\n</code></pre></div>",
        "id": 529458591,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1752843765
    },
    {
        "content": "<p>I mean, it’s possible <code>gemv!</code> hasn’t been optimized well for the M2 / ARM chips in general?</p>",
        "id": 529543436,
        "sender_full_name": "wheeheee",
        "timestamp": 1752889708
    },
    {
        "content": "<p>In which case the generic fallback could be better</p>",
        "id": 529543461,
        "sender_full_name": "wheeheee",
        "timestamp": 1752889747
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"273172\">Júlio Hoffimann</span> <a href=\"#narrow/stream/274208-helpdesk-.28published.29/topic/Compiler.20having.20trouble.20with.20type.20inference/near/529445069\">said</a>:</p>\n<blockquote>\n<p>Weirdly enough, the trick with <code>ustrip</code> solved the case where <code>z</code> is unitful, but slowed down the case where it is a plain vector of floats.</p>\n</blockquote>\n<p>That’s really weird, it should compile to identity once it’s specialized or something</p>",
        "id": 529543555,
        "sender_full_name": "wheeheee",
        "timestamp": 1752889892
    }
]