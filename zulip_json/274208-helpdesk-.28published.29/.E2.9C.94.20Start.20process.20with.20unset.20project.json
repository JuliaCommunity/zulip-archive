[
    {
        "content": "<p>I'm trying to create Julia processes that aren't initially bound to a project, and then bind themselves to a project on demand. I'm wondering if I can create a result similar to <code>julia --project=X</code> if a Julia process is created with an \"unset project\" (or similar) such that a <code>Pkg.activate(X)</code> (or similar) yeilds a result indistinguishable from <code>julia --project=X</code>.</p>",
        "id": 340379133,
        "sender_full_name": "Timothy",
        "timestamp": 1678286285
    },
    {
        "content": "<p>If you haven't set <code>JULIA_LOAD_PATH</code> then those area already equivalent.</p>",
        "id": 340529639,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1678346619
    },
    {
        "content": "<p>I'm thinking of setting <code>JULIA_LOAD_PATH</code> to <code>@v#.#:@stdlib</code> then running <code>push!(LOAD_PATH, \"@\")</code> and <code>set_active_project(&lt;project&gt;)</code> might work.</p>",
        "id": 340540763,
        "sender_full_name": "Timothy",
        "timestamp": 1678350875
    },
    {
        "content": "<p>What are you trying to achieve? If you can manipulate the environment variable I would do <em>only</em> that and <em>nothing</em> from Julia.</p>",
        "id": 340541146,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1678351029
    },
    {
        "content": "<blockquote>\n<p>I'm trying to create Julia processes that aren't initially bound to a project, and then bind themselves to a project on demand.</p>\n</blockquote>\n<p>I have a way of creating Julia daemon processes for a particular project, but when they start up they take ~2s to do the setup and compiling. So, I'm thinking I could perhaps create an \"unbound\" daemon process in reserve, and then when requested simply set its project and hand it over, instead of going through the whole initialisation process at that point.</p>",
        "id": 340544833,
        "sender_full_name": "Timothy",
        "timestamp": 1678352048
    },
    {
        "content": "<p>Okay, the I would just do <code>push!(empty!(LOAD_PATH), \"new/project\")</code> or something like that</p>",
        "id": 340545866,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1678352362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"400021\">Timothy</span> <a href=\"#narrow/stream/274208-helpdesk-.28published.29/topic/Start.20process.20with.20unset.20project/near/340540763\">said</a>:</p>\n<blockquote>\n<p>I'm thinking of setting <code>JULIA_LOAD_PATH</code> to <code>@v#.#:@stdlib</code> then running <code>push!(LOAD_PATH, \"@\")</code> and <code>set_active_project(&lt;project&gt;)</code> might work.</p>\n</blockquote>\n<p>This seems to work</p>",
        "id": 340587357,
        "sender_full_name": "Timothy",
        "timestamp": 1678363281
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"400021\">Timothy</span> has marked this topic as resolved.</p>",
        "id": 340587368,
        "sender_full_name": "Notification Bot",
        "timestamp": 1678363284
    },
    {
        "content": "<p>You might as well put the <code>@</code> in the environment variable too then.</p>",
        "id": 340588595,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1678363675
    },
    {
        "content": "<p>It doesn't matter what the project/load-path is during <code>julia</code> startup?</p>",
        "id": 340600830,
        "sender_full_name": "Timothy",
        "timestamp": 1678367335
    },
    {
        "content": "<p>No</p>",
        "id": 340600936,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1678367369
    },
    {
        "content": "<p>Oh good, that resolves some of my worries. I took note of this line in the environment variables docs:</p>\n<blockquote>\n<p>JULIA_PROJECT must be defined before starting julia; defining it in startup.jl is too late in the startup process.</p>\n</blockquote>",
        "id": 340757717,
        "sender_full_name": "Timothy",
        "timestamp": 1678419449
    },
    {
        "content": "<p>You are not using <code>JULIA_PROJECT</code> though.</p>",
        "id": 340792343,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1678437473
    },
    {
        "content": "<p>Mmm, I just took this to say the full effect of setting <code>JULIA_PROJECT</code> could not be simulated/applied after launching <code>julia</code></p>",
        "id": 340849525,
        "sender_full_name": "Timothy",
        "timestamp": 1678452016
    }
]