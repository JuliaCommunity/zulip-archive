[
    {
        "content": "<p>Is there a way to add a value to every array in a Dictionary?</p>",
        "id": 240778917,
        "sender_full_name": "brett knoss",
        "timestamp": 1622416466
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"kt\">Dict</span><span class=\"p\">(</span><span class=\"ss\">:a</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ss\">:b</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"p\">;</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"ss\">:c</span> <span class=\"o\">=&gt;</span> <span class=\"s\">\"x\"</span><span class=\"p\">)</span>\n<span class=\"kt\">Dict</span><span class=\"p\">{</span><span class=\"kt\">Symbol</span><span class=\"p\">,</span> <span class=\"kt\">Any</span><span class=\"p\">}</span> <span class=\"n\">with</span> <span class=\"mi\">3</span> <span class=\"n\">entries</span><span class=\"o\">:</span>\n  <span class=\"ss\">:a</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">1</span>\n  <span class=\"ss\">:b</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n  <span class=\"ss\">:c</span> <span class=\"o\">=&gt;</span> <span class=\"s\">\"x\"</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">keys</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n         <span class=\"k\">if</span> <span class=\"n\">d</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"k\">isa</span> <span class=\"kt\">Array</span>\n             <span class=\"n\">d</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">.+=</span> <span class=\"mi\">1</span>\n         <span class=\"k\">end</span>\n       <span class=\"k\">end</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">d</span>\n<span class=\"kt\">Dict</span><span class=\"p\">{</span><span class=\"kt\">Symbol</span><span class=\"p\">,</span> <span class=\"kt\">Any</span><span class=\"p\">}</span> <span class=\"n\">with</span> <span class=\"mi\">3</span> <span class=\"n\">entries</span><span class=\"o\">:</span>\n  <span class=\"ss\">:a</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">1</span>\n  <span class=\"ss\">:b</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"mi\">2</span> <span class=\"mi\">3</span><span class=\"p\">;</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n  <span class=\"ss\">:c</span> <span class=\"o\">=&gt;</span> <span class=\"s\">\"x\"</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span>\n</code></pre></div>",
        "id": 240783294,
        "sender_full_name": "mbaz",
        "timestamp": 1622424812
    },
    {
        "content": "<p>No, I want to add a zero to every array in my dictionary, not add 1 to every value in my dictionary</p>",
        "id": 240789707,
        "sender_full_name": "brett knoss",
        "timestamp": 1622434587
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code> <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"kt\">Dict</span><span class=\"p\">(</span><span class=\"ss\">:a</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ss\">:b</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"p\">;</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"ss\">:c</span> <span class=\"o\">=&gt;</span> <span class=\"s\">\"x\"</span><span class=\"p\">)</span>\n<span class=\"kt\">Dict</span><span class=\"p\">{</span><span class=\"kt\">Symbol</span><span class=\"p\">,</span> <span class=\"kt\">Any</span><span class=\"p\">}</span> <span class=\"n\">with</span> <span class=\"mi\">3</span> <span class=\"n\">entries</span><span class=\"o\">:</span>\n  <span class=\"ss\">:a</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">1</span>\n  <span class=\"ss\">:b</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n  <span class=\"ss\">:c</span> <span class=\"o\">=&gt;</span> <span class=\"s\">\"x\"</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"kt\">Dict</span><span class=\"p\">{</span><span class=\"kt\">Symbol</span><span class=\"p\">,</span> <span class=\"kt\">Any</span><span class=\"p\">}</span> <span class=\"n\">with</span> <span class=\"mi\">3</span> <span class=\"n\">entries</span><span class=\"o\">:</span>\n  <span class=\"ss\">:a</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span>\n  <span class=\"ss\">:b</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n  <span class=\"ss\">:c</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"s\">\"x\"</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</code></pre></div>",
        "id": 240790026,
        "sender_full_name": "brett knoss",
        "timestamp": 1622435036
    },
    {
        "content": "<p>It's a pretty simple extrapolation from there</p>",
        "id": 240790890,
        "sender_full_name": "Brenhin Keller",
        "timestamp": 1622435877
    },
    {
        "content": "<p>I'm not sure how you mean</p>",
        "id": 240856112,
        "sender_full_name": "brett knoss",
        "timestamp": 1622481913
    },
    {
        "content": "<p>You can use any operation, with the same approach.</p>\n<p>Nothing changes if you switch from adding 1 to appending a zero.</p>",
        "id": 240856900,
        "sender_full_name": "Kwaku Oskin",
        "timestamp": 1622482510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"373946\">@brett knoss</span> It would help if you used the standard terminology: a dictionary is made up of keys and values. For example, in <code>Dict(\"abc\" =&gt; 42)</code>, <code>\"abc\"</code> is a key and <code>42</code> its corresponding value.</p>\n<p>So, I assume you have a dictionary where all values are vectors, and you want to append a zero to each one. All you have to do is iterate over the values:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"kt\">Dict</span><span class=\"p\">(</span><span class=\"ss\">:a</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[],</span> <span class=\"ss\">:b</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"kt\">Dict</span><span class=\"p\">{</span><span class=\"kt\">Symbol</span><span class=\"p\">,</span> <span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">T</span><span class=\"p\">}</span> <span class=\"kt\">where</span> <span class=\"kt\">T</span><span class=\"p\">}</span> <span class=\"n\">with</span> <span class=\"mi\">2</span> <span class=\"n\">entries</span><span class=\"o\">:</span>\n  <span class=\"ss\">:a</span> <span class=\"o\">=&gt;</span> <span class=\"kt\">Any</span><span class=\"p\">[]</span>\n  <span class=\"ss\">:b</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"k\">in</span> <span class=\"n\">values</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n            <span class=\"n\">append!</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n          <span class=\"k\">end</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">d</span>\n<span class=\"kt\">Dict</span><span class=\"p\">{</span><span class=\"kt\">Symbol</span><span class=\"p\">,</span> <span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">T</span><span class=\"p\">}</span> <span class=\"kt\">where</span> <span class=\"kt\">T</span><span class=\"p\">}</span> <span class=\"n\">with</span> <span class=\"mi\">2</span> <span class=\"n\">entries</span><span class=\"o\">:</span>\n  <span class=\"ss\">:a</span> <span class=\"o\">=&gt;</span> <span class=\"kt\">Any</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n  <span class=\"ss\">:b</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>Unless you are sure that all values are vectors with elements that are either numerical or <code>Any</code>, you'll have to be careful with the types:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">append!</span><span class=\"p\">([</span><span class=\"s\">\"a\"</span><span class=\"p\">,</span> <span class=\"s\">\"b\"</span><span class=\"p\">,</span> <span class=\"s\">\"c\"</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">ERROR</span><span class=\"o\">:</span> <span class=\"kt\">MethodError</span><span class=\"o\">:</span> <span class=\"n\">Cannot</span> <span class=\"sb\">`convert`</span> <span class=\"n\">an</span> <span class=\"n\">object</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"kt\">Int64</span> <span class=\"n\">to</span> <span class=\"n\">an</span> <span class=\"n\">object</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"kt\">String</span>\n<span class=\"o\">...</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">append!</span><span class=\"p\">([</span><span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"p\">;</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">ERROR</span><span class=\"o\">:</span> <span class=\"kt\">MethodError</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">method</span> <span class=\"n\">matching</span> <span class=\"n\">append!</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">Matrix</span><span class=\"p\">{</span><span class=\"kt\">Int64</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Int64</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</code></pre></div>",
        "id": 240862763,
        "sender_full_name": "mbaz",
        "timestamp": 1622487553
    },
    {
        "content": "<p>For learning how to generalize things like this there some pretty good introductory resources including books<br>\n<a href=\"https://benlauwens.github.io/ThinkJulia.jl/latest/book.html\">https://benlauwens.github.io/ThinkJulia.jl/latest/book.html</a><br>\n<a href=\"https://leanpub.com/julia-for-beginners\">https://leanpub.com/julia-for-beginners</a><br>\nas well as free classes and excersies<br>\n<a href=\"https://juliaacademy.com/courses\">https://juliaacademy.com/courses</a><br>\n<a href=\"https://exercism.io/tracks/julia\">https://exercism.io/tracks/julia</a></p>\n<p>For terminology issues like the difference between \"add\" and \"append\" this is actually quite consistent between different programming languages, so introductory resources for other languages could be helpful there too.</p>",
        "id": 240880200,
        "sender_full_name": "Brenhin Keller",
        "timestamp": 1622505076
    },
    {
        "content": "<p>I think <a href=\"https://github.com/search?q=Dictionaries.jl&amp;type=Repositories\">Dictionaries.jl</a> also has an interface that does this more efficiently, if that is needed.</p>",
        "id": 241430074,
        "sender_full_name": "pg.",
        "timestamp": 1622743645
    }
]