[
    {
        "content": "<p>Is it always true that</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">eachindex</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>?</p>",
        "id": 301251419,
        "sender_full_name": "Leandro Martínez",
        "timestamp": 1664376049
    },
    {
        "content": "<p>I <em>think</em> so, but I usually do <code>prod(size(x))</code> for arrays just because I never remember what <code>length</code> is supposed to be on them.</p>",
        "id": 301251804,
        "sender_full_name": "Expanding Man",
        "timestamp": 1664376166
    },
    {
        "content": "<p><code>length</code> and <code>eachindex</code> are generic, so no?</p>",
        "id": 301252047,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1664376241
    },
    {
        "content": "<p>According to the docstrings:</p>\n<ul>\n<li><code>length</code>: Return the number of elements in the collection.</li>\n<li><code>eachindex</code>:  Create an iterable object for visiting each index of an <code>AbstractArray</code>.</li>\n</ul>\n<p>I would interpret this as yes, assuming the methods follow the documentation.</p>",
        "id": 301258844,
        "sender_full_name": "Gunnar Farnebäck",
        "timestamp": 1664378047
    },
    {
        "content": "<p>Well that is only part of the description of <code>eachindex</code>. It can be defined for anything iterable, including unbounded sequences.</p>",
        "id": 301260311,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1664378424
    },
    {
        "content": "<p>Just today I implemented it for a non-<code>AbstractArray</code> type as recommended by <span class=\"user-mention\" data-user-id=\"306754\">@Sukera</span>. There's nothing wrong with that.</p>",
        "id": 301260505,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1664378475
    },
    {
        "content": "<p>do note that I just recommended it due to being a convenient name, not for implying your <code>Rect</code> was an <code>AbstractArray</code></p>",
        "id": 301260717,
        "sender_full_name": "Sukera",
        "timestamp": 1664378531
    },
    {
        "content": "<p>Exactly.</p>",
        "id": 301260754,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1664378543
    },
    {
        "content": "<p>(though the docstring does support \"other iterables\" as well)</p>",
        "id": 301260831,
        "sender_full_name": "Sukera",
        "timestamp": 1664378562
    },
    {
        "content": "<p>Right, that is my point, that it is not exclusive to arrays.</p>",
        "id": 301260953,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1664378590
    },
    {
        "content": "<p>So, if the sequence is bounded, then \"yes\"? Or do you see any other pathological case?</p>",
        "id": 301267625,
        "sender_full_name": "Leandro Martínez",
        "timestamp": 1664380337
    },
    {
        "content": "<p>I think they should be the same in all cases.</p>",
        "id": 301308271,
        "sender_full_name": "Jakob Nybo Nissen",
        "timestamp": 1664392307
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"374994\">Michael Fiano</span> <a href=\"#narrow/stream/274208-helpdesk-.28published.29/topic/length.28x.29.20.3D.3D.20length.28eachindex.28x.29.29.20.3F/near/301260953\">said</a>:</p>\n<blockquote>\n<p>Right, that is my point, that it is not exclusive to arrays.</p>\n</blockquote>\n<p>What does that have to do with it though? The question isn't about arrays in particular, it's about whether <code>length</code> of an object should agree with the length of it's indices, and I'd say that in every case where indices exist, they should absolutely be the same.</p>",
        "id": 301309489,
        "sender_full_name": "Mason Protter",
        "timestamp": 1664392726
    },
    {
        "content": "<p>Of course one can always just define a method that does something whacky, but I think defining an object where it's length doesn't agree with the length of it's indices is far enough beyond the pale that it can be ignored.</p>",
        "id": 301309806,
        "sender_full_name": "Mason Protter",
        "timestamp": 1664392833
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"273176\">Gunnar Farnebäck</span> <a href=\"#narrow/stream/274208-helpdesk-.28published.29/topic/length.28x.29.20.3D.3D.20length.28eachindex.28x.29.29.20.3F/near/301258844\">said</a>:</p>\n<blockquote>\n<p>According to the docstrings:</p>\n<ul>\n<li><code>length</code>: Return the number of elements in the collection.</li>\n<li><code>eachindex</code>:  Create an iterable object for visiting each index of an <code>AbstractArray</code>.</li>\n</ul>\n<p>I would interpret this as yes, assuming the methods follow the documentation.</p>\n</blockquote>\n<p>That wasn't in response to the original question, moreso than it was in response to the partial documentation quoting here.</p>",
        "id": 301309918,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1664392872
    },
    {
        "content": "<p>I agree with that assumption. I did however implement <code>eachindex</code> on a non-array (without an accompanying <code>length</code> implementation) to make iteration on a type more concise, so in that particular case, which satisfied my needs, they are technically different, seeing how one is a <code>MethodError</code>.</p>",
        "id": 301310535,
        "sender_full_name": "Michael Fiano",
        "timestamp": 1664393084
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455681\">Leandro Martínez</span> has marked this topic as resolved.</p>",
        "id": 301351958,
        "sender_full_name": "Notification Bot",
        "timestamp": 1664412429
    },
    {
        "content": "<p>Thank you all!</p>",
        "id": 301351976,
        "sender_full_name": "Leandro Martínez",
        "timestamp": 1664412464
    }
]