[
    {
        "content": "<p>Good Day Coders: </p>\n<p>My dataframe: </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">Instrument</span> <span class=\"o\">=</span> <span class=\"s\">\"Piano\"</span><span class=\"p\">,</span><span class=\"s\">\"Guitar\"</span><span class=\"p\">,</span><span class=\"s\">\"Harmonica\"</span><span class=\"p\">,</span> <span class=\"s\">\"Violin\"</span>\n<span class=\"n\">TIME</span> <span class=\"o\">=</span> <span class=\"n\">Time</span><span class=\"p\">(</span><span class=\"mi\">00</span><span class=\"p\">,</span><span class=\"mi\">01</span><span class=\"p\">,</span><span class=\"mi\">00</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"n\">Minute</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"n\">Time</span><span class=\"p\">(</span><span class=\"mi\">02</span><span class=\"p\">,</span><span class=\"mi\">00</span><span class=\"p\">,</span><span class=\"mi\">00</span><span class=\"p\">)</span>\n\n    <span class=\"n\">Wall_E</span> <span class=\"o\">=</span> <span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">Temp</span> <span class=\"o\">=</span> <span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"o\">:</span><span class=\"mf\">0.01</span><span class=\"o\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">),</span>\n                   <span class=\"n\">Instrument</span> <span class=\"o\">=</span> <span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">Instrument</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span>\n                   <span class=\"n\">SessionTimes</span> <span class=\"o\">=</span> <span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">TIME</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n</code></pre></div>\n<p>Is there a way I could group SessionTimes into predefined <br>\nbuckets/intervals (I.E. '0 to 30 minutes', '31 to 60 minutes', <br>\n'1 hour or more' (OR 61 minutes or more))? </p>\n<p>I am experimenting with Case/When logic for Julia using: </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">Z</span> <span class=\"o\">=</span> <span class=\"n\">Wall_E</span><span class=\"p\">[</span><span class=\"o\">!</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n    <span class=\"p\">(</span><span class=\"n\">Z</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Z</span> <span class=\"o\">=</span> <span class=\"n\">Time</span><span class=\"p\">(</span><span class=\"mi\">00</span><span class=\"p\">,</span><span class=\"mi\">00</span><span class=\"p\">,</span><span class=\"mi\">00</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"n\">Minute</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"n\">Time</span><span class=\"p\">(</span><span class=\"mi\">00</span><span class=\"p\">,</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">00</span><span class=\"p\">)</span> <span class=\"o\">?</span> <span class=\"s\">\"0 to 30 mins\"</span> <span class=\"o\">:</span>\n          <span class=\"n\">Z</span> <span class=\"o\">=</span> <span class=\"n\">Time</span><span class=\"p\">(</span><span class=\"mi\">00</span><span class=\"p\">,</span><span class=\"mi\">31</span><span class=\"p\">,</span><span class=\"mi\">00</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"n\">Minute</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"n\">Time</span><span class=\"p\">(</span><span class=\"mi\">01</span><span class=\"p\">,</span><span class=\"mi\">00</span><span class=\"p\">,</span><span class=\"mi\">00</span><span class=\"p\">)</span> <span class=\"o\">?</span> <span class=\"s\">\"31 to 60 minutes\"</span> <span class=\"o\">:</span>\n          <span class=\"n\">Z</span> <span class=\"o\">&gt;</span> <span class=\"n\">Time</span><span class=\"p\">(</span><span class=\"mi\">01</span><span class=\"p\">,</span><span class=\"mi\">00</span><span class=\"p\">,</span><span class=\"mi\">00</span><span class=\"p\">)</span> <span class=\"o\">?</span> <span class=\"s\">\"More than 1 hour\"</span> <span class=\"o\">:</span>\n          <span class=\"n\">Time</span><span class=\"p\">(</span><span class=\"n\">Z</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"n\">Z</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>But keep returning the following: </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"kt\">TypeError</span><span class=\"o\">:</span> <span class=\"n\">non</span><span class=\"o\">-</span><span class=\"n\">boolean</span> <span class=\"p\">(</span><span class=\"kt\">StepRange</span><span class=\"p\">{</span><span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"n\">Time</span><span class=\"p\">,</span><span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"n\">Minute</span><span class=\"p\">})</span> <span class=\"n\">used</span> <span class=\"kp\">in</span> <span class=\"n\">boolean</span> <span class=\"n\">context</span>\n</code></pre></div>\n<p>I am currently testing binning options using <br>\n<a href=\"https://github.com/search?q=CategoricalArrays.jl&amp;type=Repositories\">CategoricalArrays.jl</a></p>\n<p><span class=\"user-mention\" data-user-id=\"284902\">@Bogumił Kamiński</span> <br>\n<span class=\"user-mention\" data-user-id=\"125954\">@Alex Arslan</span><br>\n<span class=\"user-mention\" data-user-id=\"276387\">@Max Köhler</span></p>",
        "id": 229376395,
        "sender_full_name": "QuBit",
        "timestamp": 1615238632
    }
]