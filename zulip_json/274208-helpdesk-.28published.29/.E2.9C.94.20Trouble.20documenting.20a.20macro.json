[
    {
        "content": "<p>I have a string macro I'd like to document after-the-fact.</p>\n<p>Looking at the <code>@doc</code> docs I see the section where it says to try <code>@doc \"...\" :(mystr\"\")</code> or <code>@doc \"...\" :(@Module.macro)</code> however I haven't had any success with either of those forms. Looking at <code>Docs.jl</code> I see</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"c\"># For the special `:@mac` / `:(Base.@mac)` syntax for documenting a macro after definition.</span>\n<span class=\"n\">isquotedmacrocall</span><span class=\"p\">(</span><span class=\"nd\">@nospecialize</span> <span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">=</span>\n    <span class=\"n\">isexpr</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"ss\">:copyast</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">&amp;&amp;</span>\n    <span class=\"k\">isa</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"kt\">QuoteNode</span><span class=\"p\">)</span> <span class=\"o\">&amp;&amp;</span>\n    <span class=\"n\">isexpr</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"ss\">:macrocall</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>However <code>isquotedmacrocall</code> seems to return false for both of the forms mentioned in that comment (<code>@mac</code>, <code>:(Base.@mac)</code>), and so I'm at bit of a loss.</p>",
        "id": 274412232,
        "sender_full_name": "Timothy",
        "timestamp": 1646668892
    },
    {
        "content": "<p>Does the syntax</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"s\">\"\"\"</span>\n<span class=\"s\">    name\"...\"</span>\n\n<span class=\"s\">Something something.</span>\n<span class=\"s\">\"\"\"</span>\n<span class=\"o\">:</span><span class=\"p\">(</span><span class=\"nd\">@name_str</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>work? See <a href=\"https://docs.julialang.org/en/v1/manual/documentation/#Macros\">https://docs.julialang.org/en/v1/manual/documentation/#Macros</a>.</p>",
        "id": 274414219,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1646669684
    },
    {
        "content": "<p>This is quite odd. That did work, but going through my edit history I've already tried that before. I wonder if this could have been <a href=\"https://github.com/search?q=Revise.jl&amp;type=Repositories\">Revise.jl</a> / state mutation -related weirdness.</p>\n<p>In a fresh Julia session <code>:(@name_str)</code> is fine, but in my original session I tried all of the following without success:</p>\n<ul>\n<li><code>:(org\"\")</code></li>\n<li><code>:(@org_str)</code></li>\n<li><code>:@org_str</code></li>\n<li><code>:(:@org_str))</code></li>\n<li><code>:($(QuoteNode(:(@org_str))))</code></li>\n</ul>",
        "id": 274416004,
        "sender_full_name": "Timothy",
        "timestamp": 1646670237
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"400021\">Timothy</span> has marked this topic as resolved.</p>",
        "id": 274416441,
        "sender_full_name": "Notification Bot",
        "timestamp": 1646670377
    }
]