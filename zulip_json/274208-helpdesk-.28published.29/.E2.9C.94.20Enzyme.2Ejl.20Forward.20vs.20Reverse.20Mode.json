[
    {
        "content": "<p>Two questions which may be related:</p>\n<ol>\n<li>Why does forward mode return a tuple while reverse mode return an array? </li>\n<li>How do I get the right derivative <code>[2,-2,4]</code> for the input array with <code>autodiff(Forward)</code>?  </li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">Enzyme</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">sum_of_squares</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"w\">               </span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.^</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"w\">       </span><span class=\"k\">end</span>\n<span class=\"go\">sum_of_squares (generic function with 1 method)</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">gradient</span><span class=\"p\">(</span><span class=\"n\">Reverse</span><span class=\"p\">,</span><span class=\"n\">sum_of_squares</span><span class=\"p\">,[</span><span class=\"mf\">1.</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mf\">1.</span><span class=\"p\">,</span><span class=\"mf\">2.</span><span class=\"p\">]),</span>\n<span class=\"w\">       </span><span class=\"n\">gradient</span><span class=\"p\">(</span><span class=\"n\">Forward</span><span class=\"p\">,</span><span class=\"n\">sum_of_squares</span><span class=\"p\">,[</span><span class=\"mf\">1.</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mf\">1.</span><span class=\"p\">,</span><span class=\"mf\">2.</span><span class=\"p\">])</span>\n<span class=\"go\">([2.0, -2.0, 4.0], (2.0, -2.0, 4.0))</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"k\">let</span>\n<span class=\"w\">               </span><span class=\"n\">d1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"w\">               </span><span class=\"n\">d2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"w\">               </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Enzyme</span><span class=\"o\">.</span><span class=\"n\">autodiff</span><span class=\"p\">(</span><span class=\"n\">Reverse</span><span class=\"p\">,</span><span class=\"n\">sum_of_squares</span><span class=\"p\">,</span><span class=\"n\">Duplicated</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mf\">1.</span><span class=\"p\">,</span><span class=\"mf\">2.</span><span class=\"p\">],</span><span class=\"n\">d1</span><span class=\"p\">))</span>\n<span class=\"w\">               </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Enzyme</span><span class=\"o\">.</span><span class=\"n\">autodiff</span><span class=\"p\">(</span><span class=\"n\">Forward</span><span class=\"p\">,</span><span class=\"n\">sum_of_squares</span><span class=\"p\">,</span><span class=\"n\">Duplicated</span><span class=\"p\">,</span><span class=\"n\">Duplicated</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mf\">1.</span><span class=\"p\">,</span><span class=\"mf\">2.</span><span class=\"p\">],</span><span class=\"n\">d2</span><span class=\"p\">))</span>\n<span class=\"w\">               </span><span class=\"n\">d1</span><span class=\"p\">,</span><span class=\"n\">d2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span>\n<span class=\"w\">       </span><span class=\"k\">end</span>\n<span class=\"go\">([2.0, -2.0, 4.0], [0.0, 0.0, 0.0], ((nothing,),), (6.0, 0.0))</span>\n</code></pre></div>",
        "id": 419962299,
        "sender_full_name": "Alec",
        "timestamp": 1707185638
    },
    {
        "content": "<p>When you use forward mode you inject a tangent at the input (in your case a zero array) and get out the value and velocity of the output. To get the gradient you have to repeat that for each unit vector.</p>",
        "id": 422906762,
        "sender_full_name": "Simone Carlo Surace",
        "timestamp": 1708636929
    },
    {
        "content": "<p>Thank you, that helped enough to get the answers I was looking for. </p>\n<p>To get the right derivative in <code>b</code>, <code>d2</code> needs to be seeded with the initial dual number components of one:</p>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"k\">let</span>\n<span class=\"w\">           </span><span class=\"n\">d1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"w\">           </span><span class=\"n\">d2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">1.0</span><span class=\"p\">]</span><span class=\"w\">  </span><span class=\"c\"># Seed vector for forward mode</span>\n<span class=\"w\">           </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Enzyme</span><span class=\"o\">.</span><span class=\"n\">autodiff</span><span class=\"p\">(</span><span class=\"n\">Reverse</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sum_of_squares</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Duplicated</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">2.0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">d1</span><span class=\"p\">))</span>\n<span class=\"w\">           </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Enzyme</span><span class=\"o\">.</span><span class=\"n\">autodiff</span><span class=\"p\">(</span><span class=\"n\">Forward</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sum_of_squares</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Duplicated</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Duplicated</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">2.0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">d2</span><span class=\"p\">))</span>\n<span class=\"w\">           </span><span class=\"n\">d1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">d2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span>\n<span class=\"w\">       </span><span class=\"k\">end</span>\n<span class=\"go\">([2.0, -2.0, 4.0], [1.0, 1.0, 1.0], ((nothing,),), (6.0, 4.0))</span>\n</code></pre></div>\n<p>And to get the components of the gradient, I need to get the component from each unit vector:</p>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"k\">let</span>\n<span class=\"w\">                  </span><span class=\"n\">d1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"w\">                  </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Enzyme</span><span class=\"o\">.</span><span class=\"n\">autodiff</span><span class=\"p\">(</span><span class=\"n\">Reverse</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sum_of_squares</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Duplicated</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mf\">1.</span><span class=\"p\">,</span><span class=\"mf\">2.</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">d1</span><span class=\"p\">))</span>\n\n<span class=\"go\">                  b1 = Enzyme.autodiff(Forward, sum_of_squares, Duplicated([1.,-1.,2.], [1.0, 0.0, 0.0]))</span>\n<span class=\"go\">                  b2 = Enzyme.autodiff(Forward, sum_of_squares, Duplicated([1.,-1.,2.], [0.0, 1.0, 0.0]))</span>\n<span class=\"go\">                  b3 = Enzyme.autodiff(Forward, sum_of_squares, Duplicated([1.,-1.,2.], [0.0, 0.0, 1.0]))</span>\n\n<span class=\"go\">                  d1, a, [b1, b2, b3]</span>\n<span class=\"go\">              end</span>\n<span class=\"go\">([2.0, -2.0, 4.0], ((nothing,),), [(2.0,), (-2.0,), (4.0,)])</span>\n</code></pre></div>",
        "id": 425007405,
        "sender_full_name": "Alec",
        "timestamp": 1709700983
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"272612\">Alec</span> has marked this topic as resolved.</p>",
        "id": 425007421,
        "sender_full_name": "Notification Bot",
        "timestamp": 1709700993
    }
]