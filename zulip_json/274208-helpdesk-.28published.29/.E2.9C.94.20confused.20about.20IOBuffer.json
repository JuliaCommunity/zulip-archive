[
    {
        "content": "<p>Here I want to iterate over the lines of a generated buffer:</p>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">io</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">IOBuffer</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">io</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"abc</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">io</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"def\"</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">eachline</span><span class=\"p\">(</span><span class=\"n\">io</span><span class=\"p\">)</span>\n<span class=\"w\">           </span><span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">line</span>\n<span class=\"w\">       </span><span class=\"k\">end</span>\n\n<span class=\"gp\">julia&gt;</span>\n</code></pre></div>\n<p>Clearly, it does not work. I have to convert the <code>io</code> object to a string, then I try:</p>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">io</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">IOBuffer</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">io</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"abc</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">io</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"def\"</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">eachline</span><span class=\"p\">(</span><span class=\"kt\">String</span><span class=\"p\">(</span><span class=\"n\">take!</span><span class=\"p\">(</span><span class=\"n\">io</span><span class=\"p\">)))</span>\n<span class=\"w\">           </span><span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">line</span>\n<span class=\"w\">       </span><span class=\"k\">end</span>\n<span class=\"gr\">ERROR: SystemError: opening file \"abc\\ndef\": No such file or directory</span>\n</code></pre></div>\n<p>which fails, because <code>eachline</code> expects a filename, or a <code>IOBuffer</code>. Thus,<br>\nI have to wrap the string again in a <code>IOBuffer</code> to make that work:</p>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">io</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">IOBuffer</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">io</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"abc</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">io</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"def\"</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">String</span><span class=\"p\">(</span><span class=\"n\">take!</span><span class=\"p\">(</span><span class=\"n\">io</span><span class=\"p\">))</span>\n<span class=\"go\">\"abc\\ndef\"</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">eachline</span><span class=\"p\">(</span><span class=\"kt\">IOBuffer</span><span class=\"p\">(</span><span class=\"n\">str</span><span class=\"p\">))</span>\n<span class=\"w\">           </span><span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">line</span>\n<span class=\"w\">       </span><span class=\"k\">end</span>\n<span class=\"go\">line = \"abc\"</span>\n<span class=\"go\">line = \"def\"</span>\n</code></pre></div>\n<p>That feels a little odd. Is there a more reasonable approach to iterate over the lines of the originally written <code>io</code> object without having to <br>\nfirst convert it to string and then wrap it again in a <code>IOBuffer</code>?</p>",
        "id": 448850059,
        "sender_full_name": "Leandro Martínez",
        "timestamp": 1720013273
    },
    {
        "content": "<p>Try <code>seekstart</code>. It's the position in the buffer which trips you up.</p>",
        "id": 448851347,
        "sender_full_name": "Gunnar Farnebäck",
        "timestamp": 1720013608
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455681\">Leandro Martínez</span> has marked this topic as resolved.</p>",
        "id": 448858854,
        "sender_full_name": "Notification Bot",
        "timestamp": 1720015408
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 448858881,
        "sender_full_name": "Leandro Martínez",
        "timestamp": 1720015415
    }
]