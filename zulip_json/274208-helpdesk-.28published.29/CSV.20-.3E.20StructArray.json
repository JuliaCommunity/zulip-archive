[
    {
        "content": "<p>What is the best way to read a CSV into a StructArray (I'm still on the fence whether I want to use DataFrames)?</p>",
        "id": 224964861,
        "sender_full_name": "Eric Forgy",
        "timestamp": 1612317793
    },
    {
        "content": "<p>If you use <a href=\"https://github.com/search?q=CSV.jl&amp;type=Repositories\">CSV.jl</a> the output is already satisfying the <a href=\"https://github.com/search?q=Tables.jl&amp;type=Repositories\">Tables.jl</a> interface, so it's basically a dataframe-like object already.</p>",
        "id": 224967604,
        "sender_full_name": "Mason Protter",
        "timestamp": 1612320483
    },
    {
        "content": "<p>But here's one way to collect it into a StructArray:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"k\">using</span> <span class=\"n\">StructArrays</span><span class=\"p\">,</span> <span class=\"n\">CSV</span>\n\n<span class=\"n\">shell</span><span class=\"o\">&gt;</span> <span class=\"n\">cat</span> <span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">csv</span>\n<span class=\"n\">col1</span><span class=\"p\">,</span><span class=\"n\">col2</span><span class=\"p\">,</span><span class=\"n\">col3</span><span class=\"p\">,</span><span class=\"n\">col4</span><span class=\"p\">,</span><span class=\"n\">col5</span><span class=\"p\">,</span><span class=\"n\">col6</span><span class=\"p\">,</span><span class=\"n\">col7</span><span class=\"p\">,</span><span class=\"n\">col8</span>\n<span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">one</span><span class=\"p\">,</span><span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"p\">,</span><span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"n\">T00</span><span class=\"o\">:</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span><span class=\"kc\">true</span>\n<span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mf\">2.0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"n\">two</span><span class=\"p\">,</span><span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"p\">,</span><span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"n\">T00</span><span class=\"o\">:</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span><span class=\"kc\">false</span>\n<span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mf\">3.0</span><span class=\"p\">,</span><span class=\"mf\">3.14</span><span class=\"p\">,</span><span class=\"n\">three</span><span class=\"p\">,</span><span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"p\">,</span><span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"n\">T00</span><span class=\"o\">:</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span><span class=\"kc\">true</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"n\">StructArray</span><span class=\"p\">(</span><span class=\"n\">NamedTuple</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"n\">CSV</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"p\">(</span><span class=\"s\">\"foo.csv\"</span><span class=\"p\">)))</span>\n<span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"n\">element</span> <span class=\"n\">StructArray</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"n\">Missing</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Int64</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"n\">String</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">Date</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Bool</span><span class=\"p\">})</span> <span class=\"n\">with</span> <span class=\"n\">eltype</span> <span class=\"n\">NamedTuple</span><span class=\"p\">{(</span><span class=\"o\">:</span><span class=\"n\">col1</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col2</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col3</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col4</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col5</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col6</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col7</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col8</span><span class=\"p\">),</span> <span class=\"kt\">Tuple</span><span class=\"p\">{</span><span class=\"n\">Missing</span><span class=\"p\">,</span> <span class=\"kt\">Int64</span><span class=\"p\">,</span> <span class=\"kt\">Float64</span><span class=\"p\">,</span> <span class=\"kt\">Float64</span><span class=\"p\">,</span> <span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">Date</span><span class=\"p\">,</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">,</span> <span class=\"kt\">Bool</span><span class=\"p\">}}</span><span class=\"o\">:</span>\n <span class=\"p\">(</span><span class=\"n\">col1</span> <span class=\"o\">=</span> <span class=\"n\">missing</span><span class=\"p\">,</span> <span class=\"n\">col2</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">col3</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">col4</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">col5</span> <span class=\"o\">=</span> <span class=\"s\">\"one\"</span><span class=\"p\">,</span> <span class=\"n\">col6</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">Date</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-01\"</span><span class=\"p\">),</span> <span class=\"n\">col7</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-01T00:00:00\"</span><span class=\"p\">),</span> <span class=\"n\">col8</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n <span class=\"p\">(</span><span class=\"n\">col1</span> <span class=\"o\">=</span> <span class=\"n\">missing</span><span class=\"p\">,</span> <span class=\"n\">col2</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">col3</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">col4</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">col5</span> <span class=\"o\">=</span> <span class=\"s\">\"two\"</span><span class=\"p\">,</span> <span class=\"n\">col6</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">Date</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-02\"</span><span class=\"p\">),</span> <span class=\"n\">col7</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-02T00:00:00\"</span><span class=\"p\">),</span> <span class=\"n\">col8</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n <span class=\"p\">(</span><span class=\"n\">col1</span> <span class=\"o\">=</span> <span class=\"n\">missing</span><span class=\"p\">,</span> <span class=\"n\">col2</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">col3</span> <span class=\"o\">=</span> <span class=\"mf\">3.0</span><span class=\"p\">,</span> <span class=\"n\">col4</span> <span class=\"o\">=</span> <span class=\"mf\">3.14</span><span class=\"p\">,</span> <span class=\"n\">col5</span> <span class=\"o\">=</span> <span class=\"s\">\"three\"</span><span class=\"p\">,</span> <span class=\"n\">col6</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">Date</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-03\"</span><span class=\"p\">),</span> <span class=\"n\">col7</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-03T00:00:00\"</span><span class=\"p\">),</span> <span class=\"n\">col8</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">col1</span>\n<span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"n\">element</span> <span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"n\">Missing</span><span class=\"p\">}</span><span class=\"o\">:</span>\n <span class=\"n\">missing</span>\n <span class=\"n\">missing</span>\n <span class=\"n\">missing</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">col2</span>\n<span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"n\">element</span> <span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Int64</span><span class=\"p\">}</span><span class=\"o\">:</span>\n <span class=\"mi\">1</span>\n <span class=\"mi\">2</span>\n <span class=\"mi\">3</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">col7</span>\n<span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"n\">element</span> <span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">}</span><span class=\"o\">:</span>\n <span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"n\">T00</span><span class=\"o\">:</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">00</span>\n <span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"n\">T00</span><span class=\"o\">:</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">00</span>\n <span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"n\">T00</span><span class=\"o\">:</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">00</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">col8</span>\n<span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"n\">element</span> <span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Bool</span><span class=\"p\">}</span><span class=\"o\">:</span>\n <span class=\"mi\">1</span>\n <span class=\"mi\">0</span>\n <span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 224967803,
        "sender_full_name": "Mason Protter",
        "timestamp": 1612320775
    },
    {
        "content": "<p>That is cool. Thanks Mason <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span> </p>\n<p>I kind of like StructArrays because <code>sa[1]</code> gives me a custom type, which is what I kind of wanted (but not so critical I guess).</p>",
        "id": 224967977,
        "sender_full_name": "Eric Forgy",
        "timestamp": 1612320974
    },
    {
        "content": "<p>That's already the case with CSV:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">tab</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"p\">(</span><span class=\"n\">col1</span> <span class=\"o\">=</span> <span class=\"n\">missing</span><span class=\"p\">,</span> <span class=\"n\">col2</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">col3</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">col4</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">col5</span> <span class=\"o\">=</span> <span class=\"s\">\"one\"</span><span class=\"p\">,</span> <span class=\"n\">col6</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">Date</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-01\"</span><span class=\"p\">),</span> <span class=\"n\">col7</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-01T00:00:00\"</span><span class=\"p\">),</span> <span class=\"n\">col8</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"p\">)</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">CSV</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"p\">(</span><span class=\"s\">\"foo.csv\"</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">CSV</span><span class=\"o\">.</span><span class=\"n\">Row</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"n\">col1</span> <span class=\"o\">=</span> <span class=\"n\">missing</span><span class=\"p\">,</span> <span class=\"n\">col2</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">col3</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">col4</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">col5</span> <span class=\"o\">=</span> <span class=\"s\">\"one\"</span><span class=\"p\">,</span> <span class=\"n\">col6</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">Date</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-01\"</span><span class=\"p\">),</span> <span class=\"n\">col7</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-01T00:00:00\"</span><span class=\"p\">),</span> <span class=\"n\">col8</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 224968116,
        "sender_full_name": "Mason Protter",
        "timestamp": 1612321175
    },
    {
        "content": "<p>Or is your point that you can use any type you want with a structarray?</p>",
        "id": 224968180,
        "sender_full_name": "Mason Protter",
        "timestamp": 1612321214
    },
    {
        "content": "<p>I mean, the CSV is a list of <code>Widget</code>s and I want <code>sa[1]</code> to be a <code>Widget</code>.</p>",
        "id": 224968202,
        "sender_full_name": "Eric Forgy",
        "timestamp": 1612321240
    },
    {
        "content": "<p>Gotcha</p>",
        "id": 224968391,
        "sender_full_name": "Mason Protter",
        "timestamp": 1612321400
    },
    {
        "content": "<p>Then you should be able to do</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">StructArray</span><span class=\"p\">(</span><span class=\"n\">Widget</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"n\">CSV</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"p\">(</span><span class=\"s\">\"foo.csv\"</span><span class=\"p\">)))</span>\n</code></pre></div>\n<p>However, this is not optimal for performance due to the temporary array.</p>",
        "id": 224968472,
        "sender_full_name": "Mason Protter",
        "timestamp": 1612321470
    },
    {
        "content": "<p>So you may want to make a custom constructor that's more efficient</p>",
        "id": 224968488,
        "sender_full_name": "Mason Protter",
        "timestamp": 1612321490
    },
    {
        "content": "<p>Yeah, I was hoping for some clever way to avoid temp stuff, but not the end of the world.</p>",
        "id": 224968532,
        "sender_full_name": "Eric Forgy",
        "timestamp": 1612321547
    },
    {
        "content": "<p>You could do something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"k\">function</span> <span class=\"n\">csv_to_SA</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"o\">::</span><span class=\"n\">String</span><span class=\"p\">)</span>\n           <span class=\"n\">csv</span> <span class=\"o\">=</span> <span class=\"n\">CSV</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\n           <span class=\"n\">SA</span> <span class=\"o\">=</span> <span class=\"n\">StructVector</span><span class=\"p\">([</span><span class=\"n\">T</span><span class=\"p\">(</span><span class=\"n\">csv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])])</span>\n           <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"kp\">in</span> <span class=\"n\">csv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"o\">:</span><span class=\"k\">end</span><span class=\"p\">]</span>\n               <span class=\"n\">push!</span><span class=\"p\">(</span><span class=\"n\">SA</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">))</span>\n           <span class=\"k\">end</span>\n           <span class=\"n\">SA</span>\n       <span class=\"k\">end</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">csv_to_SA</span><span class=\"p\">(</span><span class=\"n\">NamedTuple</span><span class=\"p\">,</span> <span class=\"s\">\"foo.csv\"</span><span class=\"p\">)</span>\n<span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"n\">element</span> <span class=\"n\">StructArray</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"n\">Missing</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Int64</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"n\">String</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">Date</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">},</span> <span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Bool</span><span class=\"p\">})</span> <span class=\"n\">with</span> <span class=\"n\">eltype</span> <span class=\"n\">NamedTuple</span><span class=\"p\">{(</span><span class=\"o\">:</span><span class=\"n\">col1</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col2</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col3</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col4</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col5</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col6</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col7</span><span class=\"p\">,</span> <span class=\"o\">:</span><span class=\"n\">col8</span><span class=\"p\">),</span> <span class=\"kt\">Tuple</span><span class=\"p\">{</span><span class=\"n\">Missing</span><span class=\"p\">,</span> <span class=\"kt\">Int64</span><span class=\"p\">,</span> <span class=\"kt\">Float64</span><span class=\"p\">,</span> <span class=\"kt\">Float64</span><span class=\"p\">,</span> <span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">Date</span><span class=\"p\">,</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">,</span> <span class=\"kt\">Bool</span><span class=\"p\">}}</span><span class=\"o\">:</span>\n <span class=\"p\">(</span><span class=\"n\">col1</span> <span class=\"o\">=</span> <span class=\"n\">missing</span><span class=\"p\">,</span> <span class=\"n\">col2</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">col3</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">col4</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">col5</span> <span class=\"o\">=</span> <span class=\"s\">\"one\"</span><span class=\"p\">,</span> <span class=\"n\">col6</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">Date</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-01\"</span><span class=\"p\">),</span> <span class=\"n\">col7</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-01T00:00:00\"</span><span class=\"p\">),</span> <span class=\"n\">col8</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n <span class=\"p\">(</span><span class=\"n\">col1</span> <span class=\"o\">=</span> <span class=\"n\">missing</span><span class=\"p\">,</span> <span class=\"n\">col2</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">col3</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">col4</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">col5</span> <span class=\"o\">=</span> <span class=\"s\">\"two\"</span><span class=\"p\">,</span> <span class=\"n\">col6</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">Date</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-02\"</span><span class=\"p\">),</span> <span class=\"n\">col7</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-02T00:00:00\"</span><span class=\"p\">),</span> <span class=\"n\">col8</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n <span class=\"p\">(</span><span class=\"n\">col1</span> <span class=\"o\">=</span> <span class=\"n\">missing</span><span class=\"p\">,</span> <span class=\"n\">col2</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">col3</span> <span class=\"o\">=</span> <span class=\"mf\">3.0</span><span class=\"p\">,</span> <span class=\"n\">col4</span> <span class=\"o\">=</span> <span class=\"mf\">3.14</span><span class=\"p\">,</span> <span class=\"n\">col5</span> <span class=\"o\">=</span> <span class=\"s\">\"three\"</span><span class=\"p\">,</span> <span class=\"n\">col6</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">Date</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-03\"</span><span class=\"p\">),</span> <span class=\"n\">col7</span> <span class=\"o\">=</span> <span class=\"n\">Dates</span><span class=\"o\">.</span><span class=\"kt\">DateTime</span><span class=\"p\">(</span><span class=\"s\">\"2019-01-03T00:00:00\"</span><span class=\"p\">),</span> <span class=\"n\">col8</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 224969753,
        "sender_full_name": "Mason Protter",
        "timestamp": 1612322810
    },
    {
        "content": "<p>Thanks. Yeah. I am working on something like that now <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 224969838,
        "sender_full_name": "Eric Forgy",
        "timestamp": 1612322932
    }
]