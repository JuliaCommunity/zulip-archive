[
    {
        "content": "<p>Has anyone figured out yet how to use julia actions such as <code>julia-invalidations</code> in a monorepo setting? That is, it should use the development version of all the packages in the repo and not just the main package. I am currently struggeling with this in <a href=\"https://github.com/JuliaPlots/Plots.jl/pull/4783\">https://github.com/JuliaPlots/Plots.jl/pull/4783</a></p>",
        "id": 372583221,
        "sender_full_name": "Simon Christ",
        "timestamp": 1688562063
    },
    {
        "content": "<p><code>julia-invalidation</code> assumes the package name is the repo name: <a href=\"https://github.com/julia-actions/julia-invalidations/blob/5d237091b8285114de7b3136f634b3bbc0dc35e9/action.yml#L26\">https://github.com/julia-actions/julia-invalidations/blob/5d237091b8285114de7b3136f634b3bbc0dc35e9/action.yml#L26</a></p>\n<p>You could open a PR that adds an input to the action to overwrite that default if you want.</p>\n<p>Some of the actions, like <code>julia-runtest</code> take inputs to determine the project which should help with what you're trying to do, I think</p>",
        "id": 372599165,
        "sender_full_name": "Sascha Mann",
        "timestamp": 1688564937
    },
    {
        "content": "<p>Problem is it already fails <a href=\"https://github.com/julia-actions/julia-invalidations/blob/5d237091b8285114de7b3136f634b3bbc0dc35e9/action.yml#L36\">here</a> because it can't resolve the environment, because it uses incompatible versions without deving all the contained packages first.</p>",
        "id": 372601713,
        "sender_full_name": "Simon Christ",
        "timestamp": 1688565435
    },
    {
        "content": "<p><a href=\"https://github.com/julia-actions/julia-invalidations/pull/15\">https://github.com/julia-actions/julia-invalidations/pull/15</a></p>",
        "id": 372615786,
        "sender_full_name": "Simon Christ",
        "timestamp": 1688567911
    }
]