[
    {
        "content": "<p>Why does this not work?</p>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">Module</span><span class=\"p\">()</span>\n<span class=\"go\">Main.anonymous</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"nd\">@eval</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s\">\"foo.jl\"</span><span class=\"p\">)</span>\n<span class=\"gr\">ERROR: UndefVarError: `include` not defined in `Main.anonymous`</span>\n<span class=\"gr\">Suggestion: check for spelling errors or missing imports.</span>\n<span class=\"gr\">Stacktrace:</span>\n<span class=\"gr\"> [1] top-level scope</span>\n<span class=\"gr\">   @ none:1</span>\n<span class=\"gr\"> [2] eval(m::Module, e::Any)</span>\n<span class=\"gr\">   @ Core ./boot.jl:430</span>\n<span class=\"gr\"> [3] top-level scope</span>\n<span class=\"gr\">   @ REPL[35]:1</span>\n</code></pre></div>\n<p><code>m</code> is not a baremodule and the <code>include()</code> docstring says that every module that isn't a baremodule gets its own <code>include()</code> definition.</p>",
        "id": 485135614,
        "sender_full_name": "James Wrigley",
        "timestamp": 1732899700
    },
    {
        "content": "<p>Don't know why it doesn't work, but according to the docstring, the solution might be using <code>Base.include</code>, as in</p>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">include</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"foo.jl\"</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>Does that work for you?</p>",
        "id": 485145528,
        "sender_full_name": "Daniel Wennberg",
        "timestamp": 1732905076
    },
    {
        "content": "<p>Yeah that's what I'm using as a workaround for now.</p>",
        "id": 485149902,
        "sender_full_name": "James Wrigley",
        "timestamp": 1732907665
    }
]