[
    {
        "content": "<p>I'm looking for a function (or macro) that returns the root directory of a git repo when run from a file inside the repo (sort of how <code>@__DIR__</code> does it, but then should return the git root dir). Has anybody implemented this?</p>",
        "id": 284618029,
        "sender_full_name": "Martin Roa",
        "timestamp": 1654093229
    },
    {
        "content": "<p>I came up with this approach:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">gitrootdir</span><span class=\"p\">(</span><span class=\"n\">currdir</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"nb\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">currdir</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">homedir</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">nothing</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">currdir</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">\"/\"</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">nothing</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">\".git\"</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">readdir</span><span class=\"p\">(</span><span class=\"n\">currdir</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">currdir</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">currdir</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">currdir</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"n\">gitrootdir</span><span class=\"p\">(</span><span class=\"nd\">@__DIR__</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>If someone has a better approach or an improvement for this one, please let me know.</p>",
        "id": 284621511,
        "sender_full_name": "Martin Roa",
        "timestamp": 1654094637
    },
    {
        "content": "<p>There's probably someting in  <code>LibGit2</code> for this</p>",
        "id": 284621881,
        "sender_full_name": "Sukera",
        "timestamp": 1654094782
    },
    {
        "content": "<p>Thanks! There is indeed <code>LibGit2.path(repo::GitRepo)</code>.</p>",
        "id": 284623008,
        "sender_full_name": "Martin Roa",
        "timestamp": 1654095256
    },
    {
        "content": "<p>Actually, this didn't work because I would need to previously call <code>LibGit2.GitRepo(path::AbstractString)</code> which expects the path to the repo's root dir.</p>",
        "id": 284625090,
        "sender_full_name": "Martin Roa",
        "timestamp": 1654096084
    },
    {
        "content": "<p>your approach seems fine. I'd check <code>isdir(joinpath(currdir, \".git\"))</code> instead to avoid the <code>readdir</code> call and also abort the loop when <code>dirname(currdir)==currdir</code> (in theory that's enough and you shouldn't need the additional checks against <code>homedir</code> and <code>/</code>, especially since the latter will only work on unixes)</p>",
        "id": 284625390,
        "sender_full_name": "Sebastian Pfitzner",
        "timestamp": 1654096220
    },
    {
        "content": "<p>Awesome. Thanks.</p>",
        "id": 284625486,
        "sender_full_name": "Martin Roa",
        "timestamp": 1654096270
    },
    {
        "content": "<p>may also need a try-catch around <code>isdir</code>, since that can throw</p>",
        "id": 284625805,
        "sender_full_name": "Sebastian Pfitzner",
        "timestamp": 1654096421
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"274361\">Martin Roa</span> has marked this topic as resolved.</p>",
        "id": 284629151,
        "sender_full_name": "Notification Bot",
        "timestamp": 1654097957
    },
    {
        "content": "<p><code>git rev-parse --show-prefix</code> tells you where you are relative to the repository root.</p>",
        "id": 284644275,
        "sender_full_name": "Gunnar Farneb√§ck",
        "timestamp": 1654104937
    },
    {
        "content": "<p>Didn't know about that one. Thanks.</p>",
        "id": 284644982,
        "sender_full_name": "Martin Roa",
        "timestamp": 1654105268
    },
    {
        "content": "<p>There's also <code>git rev-parse --show-toplevel</code> which returns the root dir of the repo as an absolute path. This would also work in the (unusual) case that someone doesn't have a <code>.git</code> directory and has <code>GIT_DIR</code> and <code>GIT_WORK_TREE</code> defined instead (or the equivalent cli options enabled).</p>",
        "id": 284710486,
        "sender_full_name": "Sundar R",
        "timestamp": 1654155931
    }
]