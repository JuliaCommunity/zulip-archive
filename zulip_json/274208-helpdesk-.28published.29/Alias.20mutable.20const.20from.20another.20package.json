[
    {
        "content": "<p>Say I have a package <code>A</code> with the following:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">module</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"></span>\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"sc\">'a'</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"k\">end</span><span class=\"w\"></span>\n</code></pre></div>\n<p>and I want to alias <code>foo</code> in a dependent package <code>B</code></p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">module</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"w\"></span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"></span>\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">foo</span><span class=\"w\"></span>\n<span class=\"k\">end</span><span class=\"w\"></span>\n</code></pre></div>\n<p>if <code>A.foo</code> is then updated (e.g. via <code>A.foo[2] = 'b'</code>) I find that <code>B.foo</code> holds the value of <code>A.foo</code> at (pre?)compile time, which is not what I want. Is there a way that <code>B.foo</code> can simply be an alias for <code>A.foo</code> ?</p>",
        "id": 307676477,
        "sender_full_name": "Timothy",
        "timestamp": 1667463873
    },
    {
        "content": "<p>do you want to reexport <code>A.foo</code> for users of <code>B</code>..?</p>",
        "id": 307676899,
        "sender_full_name": "Sukera",
        "timestamp": 1667464079
    },
    {
        "content": "<p>wait, how are you observing that change?</p>",
        "id": 307677086,
        "sender_full_name": "Sukera",
        "timestamp": 1667464166
    },
    {
        "content": "<p>if you have </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">module</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"w\"></span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"></span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"w\"></span>\n<span class=\"k\">end</span><span class=\"w\"></span>\n</code></pre></div>\n<p>then the <code>A.foo</code> in <code>C</code> _should_ be different from the <code>A.foo</code> in <code>B</code>, I think</p>",
        "id": 307677216,
        "sender_full_name": "Sukera",
        "timestamp": 1667464213
    },
    {
        "content": "<p>regardless, this works:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">module</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"sc\">'a'</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"n\">Main</span><span class=\"o\">.</span><span class=\"n\">A</span><span class=\"w\"></span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">module</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"n\">A</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"n\">Main</span><span class=\"o\">.</span><span class=\"n\">B</span><span class=\"w\"></span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">module</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"n\">A</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"n\">B</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">f</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nd\">@show</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">===</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"o\">.</span><span class=\"n\">foo</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"n\">Main</span><span class=\"o\">.</span><span class=\"n\">C</span><span class=\"w\"></span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"o\">.</span><span class=\"n\">C</span><span class=\"w\"></span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">f</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">===</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"o\">.</span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">true</span><span class=\"w\"></span>\n<span class=\"nb\">true</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 307677450,
        "sender_full_name": "Sukera",
        "timestamp": 1667464297
    }
]