[
    {
        "content": "<p>I don't have much experience with webdev and appreciate if someone can give a hand. Suppose I want to read the contents of this URL into a JSON or <a href=\"https://github.com/search?q=Tables.jl&amp;type=Repositories\">Tables.jl</a> table:</p>\n<p><a href=\"https://apitempo.inmet.gov.br/estacoes/T\">https://apitempo.inmet.gov.br/estacoes/T</a></p>\n<p>I can get the page with <a href=\"https://github.com/search?q=HTTP.jl&amp;type=Repositories\">HTTP.jl</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span> <span class=\"n\">HTTP</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">HTTP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s\">\"https://apitempo.inmet.gov.br/estacoes/T\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">body</span>\n<span class=\"mi\">233853</span><span class=\"o\">-</span><span class=\"n\">element</span> <span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">UInt8</span><span class=\"p\">}</span><span class=\"o\">:</span>\n <span class=\"mh\">0x5b</span>\n <span class=\"mh\">0x7b</span>\n <span class=\"mh\">0x22</span>\n <span class=\"mh\">0x43</span>\n    <span class=\"o\">⋮</span>\n <span class=\"mh\">0x30</span>\n <span class=\"mh\">0x22</span>\n <span class=\"mh\">0x7d</span>\n <span class=\"mh\">0x5d</span>\n</code></pre></div>\n<p>How to reinterpret these bits as a JSON or DataFrame directly?</p>",
        "id": 247801448,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1627733987
    },
    {
        "content": "<p>Would you recommend using <a href=\"https://github.com/search?q=Gumbo.jl&amp;type=Repositories\">Gumbo.jl</a> for this task or <a href=\"https://github.com/search?q=HTTP.jl&amp;type=Repositories\">HTTP.jl</a> suffices?</p>",
        "id": 247801495,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1627734007
    },
    {
        "content": "<p>I can convert the body to a string with <code>String(r.body)</code>, but how to convert the string into a JSON or table?</p>",
        "id": 247802022,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1627734749
    },
    {
        "content": "<p>Oh nevermind, JSON.parse on the resulting string just works <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 247802081,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1627734843
    },
    {
        "content": "<p>If you use JSON3, you can also do <code>JSON3.read(bytes)</code> to avoid constructing the string first. JSON3 also does clever things to reuse the memory of the bytes themselves and expose nice Julia objects on top of that memory. (But this probably only matters for massive files or if you are processing many of them).</p>",
        "id": 248762158,
        "sender_full_name": "Eric Hanson",
        "timestamp": 1628415749
    },
    {
        "content": "<p>for what is worth, you can download files in-memory also with <code>Downloads.jl</code> (which is now a stdlib, so don't even need to use third-party packages):</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"k\">using</span> <span class=\"n\">Downloads</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"n\">take!</span><span class=\"p\">(</span><span class=\"n\">Downloads</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s\">\"https://apitempo.inmet.gov.br/estacoes/T\"</span><span class=\"p\">,</span> <span class=\"kt\">IOBuffer</span><span class=\"p\">()))</span>\n<span class=\"mi\">233857</span><span class=\"o\">-</span><span class=\"n\">element</span> <span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">UInt8</span><span class=\"p\">}</span><span class=\"o\">:</span>\n <span class=\"mh\">0x5b</span>\n <span class=\"mh\">0x7b</span>\n <span class=\"mh\">0x22</span>\n <span class=\"mh\">0x43</span>\n <span class=\"mh\">0x44</span>\n <span class=\"mh\">0x5f</span>\n <span class=\"mh\">0x4f</span>\n <span class=\"mh\">0x53</span>\n <span class=\"mh\">0x43</span>\n <span class=\"mh\">0x41</span>\n <span class=\"mh\">0x52</span>\n <span class=\"mh\">0x22</span>\n <span class=\"mh\">0x3a</span>\n <span class=\"mh\">0x22</span>\n <span class=\"mh\">0x30</span>\n    <span class=\"o\">⋮</span>\n <span class=\"mh\">0x30</span>\n <span class=\"mh\">0x30</span>\n <span class=\"mh\">0x2e</span>\n <span class=\"mh\">0x30</span>\n <span class=\"mh\">0x30</span>\n <span class=\"mh\">0x30</span>\n <span class=\"mh\">0x2d</span>\n <span class=\"mh\">0x30</span>\n <span class=\"mh\">0x33</span>\n <span class=\"mh\">0x3a</span>\n <span class=\"mh\">0x30</span>\n <span class=\"mh\">0x30</span>\n <span class=\"mh\">0x22</span>\n <span class=\"mh\">0x7d</span>\n <span class=\"mh\">0x5d</span>\n</code></pre></div>",
        "id": 248790445,
        "sender_full_name": "Mosè Giordano",
        "timestamp": 1628459139
    }
]