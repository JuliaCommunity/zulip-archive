[
    {
        "content": "<p>Does <code>methodswith</code> only return names that have been exported into the Main namespace? Even the <code>methodswith(type, Module)</code> form only returns methods of functions which already exist in the Main namespace. </p>\n<p>Concretely: XLSX doesn't export any of its functions, including <code>sheetnames</code>. If I've done <code>using XLSX</code> and have a <code>XLSXFile</code> object <code>x</code>, then <code>methodswith(typeof(x), XLSX)</code> returns nothing (<code>0-element Vector{Method}</code>), even though <code>XLSX.sheetnames</code> accepts <code>XLSXFile</code> objects. </p>\n<p><code>methodswith(typeof(x))</code> without specifying a module returns methods of functions like <code>close</code> and <code>getindex</code>, functions which already exist in Main but which have methods in XLSX. </p>\n<p>Is there  a way to get the list of the methods that accept an <code>XLSXFile</code>, whether or not their names exist in Main? (Doing <code>XLSX</code> followed by <code>Alt-M</code> to change the current module doesn't change the above behaviour either, which is what led me to believe <code>methodswith</code> is operating based on the <code>Main</code> namespace specifically, and not whatever the current namespace happens to be.)</p>",
        "id": 388982979,
        "sender_full_name": "Sundar R",
        "timestamp": 1693831494
    },
    {
        "content": "<p><a href=\"https://github.com/JuliaLang/julia/blob/8e14322b5aa344639dd86bf9eabb84afe831fcba/stdlib/InteractiveUtils/src/InteractiveUtils.jl#L224\">yes</a>. imho that's a bug or at the very least warrants an additional <code>all</code> kwarg</p>",
        "id": 388983901,
        "sender_full_name": "Sebastian Pfitzner",
        "timestamp": 1693831769
    },
    {
        "content": "<p>also see <a href=\"https://github.com/JuliaLang/julia/issues/33866\">https://github.com/JuliaLang/julia/issues/33866</a></p>",
        "id": 389012128,
        "sender_full_name": "Sebastian Pfitzner",
        "timestamp": 1693840345
    }
]