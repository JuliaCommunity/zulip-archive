[
    {
        "content": "<p>Hello, </p>\n<p>I have </p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">begin</span>\n<span class=\"n\">Sessions</span> <span class=\"o\">=</span> <span class=\"s\">\"Piano\"</span><span class=\"p\">,</span><span class=\"s\">\"Guitar\"</span><span class=\"p\">,</span><span class=\"s\">\"Harmonica\"</span>\n<span class=\"n\">Wall_E</span> <span class=\"o\">=</span> <span class=\"n\">DataFrame</span><span class=\"p\">((</span><span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"kt\">Any</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mf\">10.</span><span class=\"o\">..</span><span class=\"p\">],</span> <span class=\"n\">Cost</span> <span class=\"o\">=</span> <span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">50</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">Sessions</span> <span class=\"o\">=</span> <span class=\"n\">String</span><span class=\"p\">[</span><span class=\"s\">\"</span><span class=\"si\">$Sessions</span><span class=\"s\">\"</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"kp\">in</span> <span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"p\">]))</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>How can I create a random array of <br>\nelements in the dataframe?  </p>\n<p>Thank you,</p>",
        "id": 229388102,
        "sender_full_name": "QuBit",
        "timestamp": 1615242661
    },
    {
        "content": "<p>This is weird code, why do you have <code>begin</code> and <code>end</code> here? Why are you passing a <code>NamedTuple</code> to the <code>DataFrame</code> constructor rather than just using the keywords? Why are you creating <code>ID</code> as <code>Any[1:10...]</code>? </p>\n<p>To answer your question though, <code>rand</code> can sample from any collection, so you want:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">ID</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">Cost</span> <span class=\"o\">=</span> <span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">50</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">Sessions</span> <span class=\"o\">=</span> <span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">Sessions</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n</code></pre></div>",
        "id": 229442340,
        "sender_full_name": "Nils",
        "timestamp": 1615280033
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"269318\">@Nils</span> , <br>\nI am using <a href=\"https://github.com/search?q=Pluto.jl&amp;type=Repositories\">Pluto.jl</a>. <br>\nAlso, I am new to using Julia and used<br>\ncode that was posted here. <br>\nThanks for your response, saved<br>\nme loads of time.</p>",
        "id": 229443212,
        "sender_full_name": "QuBit",
        "timestamp": 1615280464
    },
    {
        "content": "<p>As a general aside, there's no need to always quote everyone's messages - they appear right above yours most of the time anyway, so it just adds unnecessary visual clutter.</p>\n<p>Understood re Pluto, which I guess is where the <code>begin ... end</code> comes from. I would suggest to leave this out, and when you create minimum working examples to illustrate your issues just run them in a fresh Julia REPL session. If something then doesn't work in Pluto that's a Pluto specific issue and you should ask on the Pluto topic, but when just discussing DataFrame operations it's a bit of a distraction.</p>\n<p>FInally, I would strongly encourage you to read through the DataFrames documentation, and work through the tutorial here: <a href=\"https://github.com/bkamins/Julia-DataFrames-Tutorial\">https://github.com/bkamins/Julia-DataFrames-Tutorial</a> - I have a feeling that you'll be able to answer 95% of your own questions after doing so.</p>",
        "id": 229448775,
        "sender_full_name": "Nils",
        "timestamp": 1615283001
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"269318\">@Nils</span> , <br>\nNoted -- I will remove the code block designations<br>\nfor <a href=\"https://github.com/search?q=Pluto.jl&amp;type=Repositories\">Pluto.jl</a> to not confuse the potential readers &amp; <br>\nwill not keep the quoted materials from any <br>\nrespondents. Thank you for the resource will <br>\nexplore it now! </p>\n<p>Best,</p>",
        "id": 229449603,
        "sender_full_name": "QuBit",
        "timestamp": 1615283395
    },
    {
        "content": "<p>I would also recommend to read series of blog posts in <a href=\"https://bkamins.github.io/\">https://bkamins.github.io/</a> There you will usually find explanations of implementation details, close to real world examples, best practices and so on.</p>\n<p>You may start from</p>\n<ul>\n<li><a href=\"https://bkamins.github.io/julialang/2020/12/24/minilanguage.html\">https://bkamins.github.io/julialang/2020/12/24/minilanguage.html</a></li>\n<li><a href=\"https://bkamins.github.io/julialang/2021/01/22/transforming.html\">https://bkamins.github.io/julialang/2021/01/22/transforming.html</a></li>\n<li><a href=\"https://bkamins.github.io/julialang/2020/09/13/pseudobroadcasting.html\">https://bkamins.github.io/julialang/2020/09/13/pseudobroadcasting.html</a></li>\n<li><a href=\"https://bkamins.github.io/julialang/2020/09/20/row-aggregation.html\">https://bkamins.github.io/julialang/2020/09/20/row-aggregation.html</a></li>\n</ul>\n<p>and if you know pandas or R dataframes<br>\n<a href=\"https://bkamins.github.io/julialang/2020/09/25/comparisons.html\">https://bkamins.github.io/julialang/2020/09/25/comparisons.html</a></p>",
        "id": 229452734,
        "sender_full_name": "Kwaku Oskin",
        "timestamp": 1615284856
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"272771\">Andrey Oskin</span> </p>\n<p>I will add this to my growing catalog of <br>\nJulia references. Thank you very much.</p>",
        "id": 229455106,
        "sender_full_name": "QuBit",
        "timestamp": 1615285965
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 229492961,
        "sender_full_name": "Michael Alexander",
        "timestamp": 1615303134
    }
]