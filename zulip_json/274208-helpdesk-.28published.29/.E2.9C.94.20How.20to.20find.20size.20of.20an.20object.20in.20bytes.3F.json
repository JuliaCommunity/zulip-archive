[
    {
        "content": "<p>The <code>sizeof</code> function from Base returns the size of the \"pointers\" apparently, it doesn't account for the buffer size:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"kt\">A</span><span class=\"p\">{</span><span class=\"kt\">V</span><span class=\"p\">}</span>\n<span class=\"w\">         </span><span class=\"n\">a</span><span class=\"o\">::</span><span class=\"kt\">V</span>\n<span class=\"w\">       </span><span class=\"k\">end</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"p\">(</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">10000</span><span class=\"p\">))</span>\n<span class=\"kt\">A</span><span class=\"p\">{</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Float64</span><span class=\"p\">}}([</span><span class=\"mf\">0.8986201930614641</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.4380709243355351</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.00045792138769884527</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.5289490273804567</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.6269368643057421</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.20649195243751506</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.07710997000926856</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.536498794232181</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.4267722308408214</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.9107359146688295</span><span class=\"w\">  </span><span class=\"o\">…</span><span class=\"w\">  </span><span class=\"mf\">0.18391510235668862</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.3585581170771124</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.5766750582775166</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.97806775515992</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.8836059221020682</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.08132306098743225</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.7069638671825478</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.5282713222766646</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.42890603564883734</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.5912185651454117</span><span class=\"p\">])</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">sizeof</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"mi\">8</span>\n</code></pre></div>",
        "id": 421644291,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708000603
    },
    {
        "content": "<p>We are developing an application with very large 3D models of the subsurface, and Julia is crashing with 32Gb of RAM. We are trying to pin-point the objects that are consuming most of the memory, and suspect that they cannot eat 32Gb of memory alone. Is the Julia runtime too heavy memory-wise?</p>",
        "id": 421644921,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708000819
    },
    {
        "content": "<p>(Julia v1.10.0)</p>",
        "id": 421645369,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708000965
    },
    {
        "content": "<p>Base.summarysize</p>",
        "id": 421650135,
        "sender_full_name": "Jakob Nybo Nissen",
        "timestamp": 1708002561
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"272650\">@Jakob Nybo Nissen</span> !</p>",
        "id": 421650477,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708002656
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"273172\">Júlio Hoffimann</span> has marked this topic as resolved.</p>",
        "id": 421650484,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708002659
    }
]