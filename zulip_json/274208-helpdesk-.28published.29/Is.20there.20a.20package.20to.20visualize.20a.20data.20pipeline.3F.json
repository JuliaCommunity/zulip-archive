[
    {
        "content": "<p>Hey fellas, is there a package that creates DAGs in order to visualize a data processing pipeline? I mean, suppose I have a database, and I extract some data and apply a series of transformations and joins and so on, and produce a final dataframe. I wish to visualize this pipe in a diagram...</p>",
        "id": 280873113,
        "sender_full_name": "Davi Sales Barreira",
        "timestamp": 1651498038
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312038\">@Andrew Baas</span>, do we have something like this in AlgebraicJulia? <br>\nDoes <a href=\"https://github.com/search?q=Semagrams.jl&amp;type=Repositories\">Semagrams.jl</a> fit here?</p>",
        "id": 280882329,
        "sender_full_name": "TheCedarPrince",
        "timestamp": 1651502623
    },
    {
        "content": "<p>Semagrams wouldn't really work here, as that's more of a graphical editor for these.<br>\n<a href=\"https://github.com/search?q=Catlab.jl&amp;type=Repositories\">Catlab.jl</a> does this kind of visualization of wiring diagrams through Graphviz and includes an <code>@program</code> macro for defining a wiring diagram (see this page of the documentation <a href=\"https://algebraicjulia.github.io/Catlab.jl/dev/generated/wiring_diagrams/wd_cset/\">https://algebraicjulia.github.io/Catlab.jl/dev/generated/wiring_diagrams/wd_cset/</a>). This requires you to define the generators (component boxes with input/output signatures) as a presentation (using <code>@present</code>) and then describe the data pipeline as a series of functions in the <code>@program</code> macro.</p>\n<p>There is also an imperative API for constructing these programmatically, which could be more useful in this case (<a href=\"https://algebraicjulia.github.io/Catlab.jl/dev/generated/wiring_diagrams/wiring_diagram_basics/\">https://algebraicjulia.github.io/Catlab.jl/dev/generated/wiring_diagrams/wiring_diagram_basics/</a>)</p>",
        "id": 280883555,
        "sender_full_name": "Andrew Baas",
        "timestamp": 1651503130
    },
    {
        "content": "<p>Thanks for the answers. I actually am looking for something more in the graphical... I guess I'll write some functions in Luxor to do what I want.</p>",
        "id": 281006433,
        "sender_full_name": "Davi Sales Barreira",
        "timestamp": 1651581523
    },
    {
        "content": "<p>If one of the diagrams in Kroki is suitable (Pikchr for example), it might be easier to use <a href=\"https://github.com/search?q=Kroki.jl&amp;type=Repositories\">Kroki.jl</a> instead.</p>",
        "id": 281170753,
        "sender_full_name": "Braden",
        "timestamp": 1651677508
    }
]