[
    {
        "content": "<p>Is there a feature in VSCode to plot the memory used by each variable in a Julia session? Something like an interactive pie chart:</p>\n<p><a href=\"/user_uploads/7178/ZTSVuVq00UaWTXGTeD19kLst/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/7178/ZTSVuVq00UaWTXGTeD19kLst/image.png\" title=\"image.png\"><img src=\"/user_uploads/7178/ZTSVuVq00UaWTXGTeD19kLst/image.png\"></a></div>",
        "id": 421651436,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708002953
    },
    {
        "content": "<p><a href=\"https://github.com/JuliaCI/Coverage.jl?tab=readme-ov-file#memory-allocation\">https://github.com/JuliaCI/Coverage.jl?tab=readme-ov-file#memory-allocation</a></p>",
        "id": 421651890,
        "sender_full_name": "Kyle Beggs",
        "timestamp": 1708003095
    },
    {
        "content": "<p>It doesn't plot like a pie chart, but there are tools you can use to plot a flamegraph</p>",
        "id": 421652068,
        "sender_full_name": "Kyle Beggs",
        "timestamp": 1708003160
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"424813\">@Kyle Beggs</span> , I used this <code>--track-allocation</code> option in the past, but it is not exactly what I am looking for. The option you mentioned only saves files to disk where Julia allocated memory line by line in the scripts.</p>",
        "id": 421652085,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708003166
    },
    {
        "content": "<p>I am looking for memory usage in a session at any given time. I have variables loaded in a session, and would like to see which variables are consuming most of the memory, makes sense?</p>",
        "id": 421652295,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708003220
    },
    {
        "content": "<p>Ah, I see. I agree this would be useful, don't know how to go about that. Sorry</p>",
        "id": 421652417,
        "sender_full_name": "Kyle Beggs",
        "timestamp": 1708003266
    },
    {
        "content": "<p>VSCode already has a <code>Julia</code> pane with all the variables in the session, but it doesn't show any memory size information.</p>",
        "id": 421652482,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708003294
    },
    {
        "content": "<p><a href=\"/user_uploads/7178/Zhbel4x4A72wwNaxmWOMnFJR/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/7178/Zhbel4x4A72wwNaxmWOMnFJR/image.png\" title=\"image.png\"><img src=\"/user_uploads/7178/Zhbel4x4A72wwNaxmWOMnFJR/image.png\"></a></div>",
        "id": 421652638,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708003348
    },
    {
        "content": "<p>Seems like you really just need to iterate through that list and call <code>summarysize</code> then you can sort and plot. The guys that develop the VSCode Julia extension would probably be able to do this somewhat easily</p>",
        "id": 421652881,
        "sender_full_name": "Kyle Beggs",
        "timestamp": 1708003450
    },
    {
        "content": "<p><code>summarysize</code> can sometimes take several minutes on large objects, I'll note</p>",
        "id": 421652921,
        "sender_full_name": "Timothy",
        "timestamp": 1708003470
    },
    {
        "content": "<p>That would be a super useful feature, specially if we can have an interactive pie chart that can zoom in the fields of structs in a tree-like structure.</p>",
        "id": 421653368,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708003637
    },
    {
        "content": "<p>I did the <code>Base.summarysize</code> for all objects in the session and they sum up to 9Gb, but <code>htop</code> is saying that Julia is consuming 16Gb</p>",
        "id": 421653473,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708003679
    },
    {
        "content": "<p>The runtime is basically doubling the memory usage of the session</p>",
        "id": 421653554,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708003698
    },
    {
        "content": "<p>Have you looked into heap snapshots and the various tools that can view them? <a href=\"https://discourse.julialang.org/t/plans-for-viewing-heap-snapshots/98696/2\">https://discourse.julialang.org/t/plans-for-viewing-heap-snapshots/98696/2</a></p>",
        "id": 421669957,
        "sender_full_name": "Brian Chen",
        "timestamp": 1708008532
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278065\">Brian Chen</span> <a href=\"#narrow/stream/274208-helpdesk-.28published.29/topic/VSCode.20and.20memory.20usage/near/421669957\">said</a>:</p>\n<blockquote>\n<p>Have you looked into heap snapshots and the various tools that can view them? <a href=\"https://discourse.julialang.org/t/plans-for-viewing-heap-snapshots/98696/2\">https://discourse.julialang.org/t/plans-for-viewing-heap-snapshots/98696/2</a></p>\n</blockquote>\n<p>First time I hear about it. Any visual feature in VSCode to inspect memory would be great.</p>",
        "id": 421671189,
        "sender_full_name": "Júlio Hoffimann",
        "timestamp": 1708008810
    },
    {
        "content": "<p><a href=\"https://github.com/JuliaLang/julia/issues/52680\">https://github.com/JuliaLang/julia/issues/52680</a></p>",
        "id": 421727282,
        "sender_full_name": "jar",
        "timestamp": 1708025989
    }
]