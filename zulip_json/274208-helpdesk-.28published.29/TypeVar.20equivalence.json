[
    {
        "content": "<p>Might anybody be able to explain this?</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"kt\">TypeVar</span><span class=\"p\">(</span><span class=\"ss\">:T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Union</span><span class=\"p\">{},</span><span class=\"w\"> </span><span class=\"kt\">Tuple</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kt\">TypeVar</span><span class=\"p\">(</span><span class=\"ss\">:T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Union</span><span class=\"p\">{},</span><span class=\"w\"> </span><span class=\"kt\">Tuple</span><span class=\"p\">)</span>\n<span class=\"nb\">false</span>\n</code></pre></div>",
        "id": 357912456,
        "sender_full_name": "Timothy",
        "timestamp": 1683905603
    },
    {
        "content": "<p>probably falls back to <code>===</code>?</p>",
        "id": 357914771,
        "sender_full_name": "Sukera",
        "timestamp": 1683906033
    },
    {
        "content": "<p>Shouldn't this be <code>egal</code> since the struct and all the values are immutable?</p>",
        "id": 357915203,
        "sender_full_name": "Timothy",
        "timestamp": 1683906099
    },
    {
        "content": "<p>I don't know, I haven't actually checked - I'm compiling from source at the moment, give me a sec</p>",
        "id": 357915556,
        "sender_full_name": "Sukera",
        "timestamp": 1683906153
    },
    {
        "content": "<p>No rush :)</p>",
        "id": 357915612,
        "sender_full_name": "Timothy",
        "timestamp": 1683906167
    },
    {
        "content": "<p>this <code>===</code> fallback is usually to \"blame\" though for <code>==</code> giving <code>false</code> unexpectedly</p>",
        "id": 357915641,
        "sender_full_name": "Sukera",
        "timestamp": 1683906173
    },
    {
        "content": "<p>yup, falls back to <code>===</code></p>",
        "id": 357916731,
        "sender_full_name": "Sukera",
        "timestamp": 1683906382
    },
    {
        "content": "<p>The reason they're different is this</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"kt\">TypeVar</span><span class=\"p\">(</span><span class=\"ss\">:T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Union</span><span class=\"p\">{},</span><span class=\"w\"> </span><span class=\"kt\">Tuple</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">objectid</span>\n<span class=\"mh\">0x9b328216bd30c6e0</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"kt\">TypeVar</span><span class=\"p\">(</span><span class=\"ss\">:T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Union</span><span class=\"p\">{},</span><span class=\"w\"> </span><span class=\"kt\">Tuple</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">objectid</span>\n<span class=\"mh\">0xb3dca792ef09a1bc</span>\n</code></pre></div>",
        "id": 357916884,
        "sender_full_name": "Sukera",
        "timestamp": 1683906420
    },
    {
        "content": "<p>Hmm, I thought <code>egal</code> / <code>===</code> for immutable structs was defined by <code>===</code> on its fields?</p>",
        "id": 357917060,
        "sender_full_name": "Timothy",
        "timestamp": 1683906455
    },
    {
        "content": "<p>they're not considered egal due to that - and my guess for the reasoning behind that is that while both <code>TypeVar</code>s describe the same extent, refining them _doesn't_ anymore</p>",
        "id": 357917214,
        "sender_full_name": "Sukera",
        "timestamp": 1683906485
    },
    {
        "content": "<p>also</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"kt\">TypeVar</span><span class=\"p\">(</span><span class=\"ss\">:T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Union</span><span class=\"p\">{},</span><span class=\"w\"> </span><span class=\"kt\">Tuple</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">isimmutable</span>\n<span class=\"nb\">false</span>\n</code></pre></div>",
        "id": 357917358,
        "sender_full_name": "Sukera",
        "timestamp": 1683906516
    },
    {
        "content": "<p>Ah, that's a surprise</p>",
        "id": 357917421,
        "sender_full_name": "Timothy",
        "timestamp": 1683906534
    }
]