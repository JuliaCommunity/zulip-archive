[
    {
        "content": "<p>I want to see if I can make it so an assignment to a custom array type  returns the entire array. Documentation for <code>=</code> says that \"<code>a[i] = v</code> calls <code>setindex!(a,v,i)</code>\". I tried this:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">import</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">setindex!</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"kt\">A</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"o\">::</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">Int</span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"p\">(</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"kt\">Int</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">setindex!</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">::</span><span class=\"kt\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">index</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"></span>\n<span class=\"k\">end</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but it doesn't work; it still returns only the assigned value.</p>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"go\">1</span>\n</code></pre></div>\n<p>It seems that <code>=</code> is not simply parsed to <code>setindex!</code>. Is there a way to define what should be returned in an assignment like this?</p>",
        "id": 307865557,
        "sender_full_name": "mbaz",
        "timestamp": 1667522733
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Meta</span><span class=\"o\">.</span><span class=\"nd\">@lower</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"w\"></span>\n<span class=\"o\">:</span><span class=\"p\">(</span><span class=\"o\">$</span><span class=\"p\">(</span><span class=\"kt\">Expr</span><span class=\"p\">(</span><span class=\"ss\">:thunk</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">CodeInfo</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"err\">@</span><span class=\"w\"> </span><span class=\"n\">none</span><span class=\"w\"> </span><span class=\"n\">within</span><span class=\"w\"> </span><span class=\"sb\">`top-level scope`</span><span class=\"w\"></span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">─</span><span class=\"w\">     </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">setindex!</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">└──</span><span class=\"w\">     </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"w\"></span>\n<span class=\"p\">))))</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 307866111,
        "sender_full_name": "jar",
        "timestamp": 1667523158
    },
    {
        "content": "<p>so I doubt it</p>",
        "id": 307866235,
        "sender_full_name": "jar",
        "timestamp": 1667523255
    },
    {
        "content": "<p>Oh, I should have thought about seeing the lowered code. Thanks!</p>",
        "id": 307866248,
        "sender_full_name": "mbaz",
        "timestamp": 1667523266
    },
    {
        "content": "<p>I agree, seems doubtful.</p>",
        "id": 307866318,
        "sender_full_name": "mbaz",
        "timestamp": 1667523339
    }
]