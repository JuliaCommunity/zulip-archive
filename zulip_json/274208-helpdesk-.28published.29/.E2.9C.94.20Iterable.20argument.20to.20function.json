[
    {
        "content": "<p>Is <a href=\"https://stackoverflow.com/questions/26350125/is-there-a-way-to-check-whether-a-type-is-iterable-within-julias-type-system\">this answer</a> on Stack overflow up to date? Is there a way to dispatch on whether an argument is iteratble? If not dispatch, is the given answer still the  best practice? I would think not since there's mutable(?)/stateful(?) iterators where you can destroy elements by iterating, right?</p>",
        "id": 284562637,
        "sender_full_name": "Alec",
        "timestamp": 1654053557
    },
    {
        "content": "<p>There is, unfortunately, no good way. Julia does not have a real trait system for this.<br>\nYou can use <code>hasmethod(iterate, (T,))</code>, but that is dynamic. The package <a href=\"https://github.com/search?q=Traits.jl&amp;type=Repositories\">Traits.jl</a> has <code>static_hasmethod</code>, but I wouldn't rely on it to be stable.</p>",
        "id": 284578422,
        "sender_full_name": "Jakob Nybo Nissen",
        "timestamp": 1654070251
    },
    {
        "content": "<p>There is a <code>Base.isiterable</code>, but that also just calls either <code>hasmethod</code> or <code>applicable</code></p>",
        "id": 284603992,
        "sender_full_name": "Sukera",
        "timestamp": 1654086680
    },
    {
        "content": "<p>there's no really good static way to do this today</p>",
        "id": 284604010,
        "sender_full_name": "Sukera",
        "timestamp": 1654086691
    },
    {
        "content": "<p>It would be really cool to have a way to dispatch on this, i.e. a way to automatically get traits from the presence/absence of methods.<br>\nOf course, if function <code>a</code> dispatches on whether a method of <code>b</code> exists, that requires a backedge from <code>b</code> to <code>a</code>.</p>",
        "id": 284606361,
        "sender_full_name": "Jakob Nybo Nissen",
        "timestamp": 1654087993
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"272612\">Alec</span> has marked this topic as resolved.</p>",
        "id": 284625158,
        "sender_full_name": "Notification Bot",
        "timestamp": 1654096117
    }
]