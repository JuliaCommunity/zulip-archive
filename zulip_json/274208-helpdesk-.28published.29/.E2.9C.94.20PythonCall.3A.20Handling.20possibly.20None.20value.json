[
    {
        "content": "<p>How to handle a Py value which can be None (with PythonCall)?</p>\n<p>The following seems quite verbose (and it fails if <code>x</code> is an ndarray)</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">PythonCall</span>\n\n<span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">handle_optional_value</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">::</span><span class=\"kt\">Py</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">pyconvert</span><span class=\"p\">(</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">pybuiltins</span><span class=\"o\">.</span><span class=\"n\">None</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">nothing</span>\n<span class=\"w\">    </span><span class=\"k\">end</span>\n<span class=\"w\">    </span><span class=\"c\"># something else</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
        "id": 350839478,
        "sender_full_name": "Jesper Stemann Andersen",
        "timestamp": 1681837348
    },
    {
        "content": "<p>I do not think that is verbose at all. There is a difference between being succinct and being so truncated as to be illegible. There seems to be an undue respect towards the latter, in many cases.</p>",
        "id": 350935497,
        "sender_full_name": "Santtu",
        "timestamp": 1681878006
    },
    {
        "content": "<p>Also, you should probably be using the <code>pyis</code> function from the PythonCall library instead of <code>==</code>, to compare <code>x</code> to <code>None</code> (<a href=\"https://cjdoris.github.io/PythonCall.jl/v0.2/pythoncall/#PythonCall.pyis\">link</a>).</p>",
        "id": 350936350,
        "sender_full_name": "Santtu",
        "timestamp": 1681878534
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">then</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">::</span><span class=\"kt\">Py</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">pyconvert</span><span class=\"p\">(</span><span class=\"kt\">Bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">pybuiltins</span><span class=\"o\">.</span><span class=\"n\">None</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">nothing</span>\n<span class=\"w\">    </span><span class=\"k\">end</span>\n<span class=\"w\">   </span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">then</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span><span class=\"n\">x</span>\n<span class=\"w\">   </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
        "id": 350939301,
        "sender_full_name": "jar",
        "timestamp": 1681880601
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"432905\">Jesper Stemann Andersen</span> has marked this topic as resolved.</p>",
        "id": 350987423,
        "sender_full_name": "Notification Bot",
        "timestamp": 1681895936
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598897\">Santtu</span> <a href=\"#narrow/stream/274208-helpdesk-.28published.29/topic/.E2.9C.94.20PythonCall.3A.20Handling.20possibly.20None.20value/near/350936350\">said</a>:</p>\n<blockquote>\n<p>Also, you should probably be using the <code>pyis</code> function from the PythonCall library instead of <code>==</code>, to compare <code>x</code> to <code>None</code> (<a href=\"https://cjdoris.github.io/PythonCall.jl/v0.2/pythoncall/#PythonCall.pyis\">link</a>).</p>\n</blockquote>\n<p>Thanks - this was what I was looking for.</p>",
        "id": 350987562,
        "sender_full_name": "Jesper Stemann Andersen",
        "timestamp": 1681895971
    }
]