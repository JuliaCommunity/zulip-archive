[
    {
        "content": "<p>I have a file like this:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"c\"># x y z  vmap wmap d_str  dx dy dz</span>\n    <span class=\"mf\">201.37400</span>    <span class=\"mf\">193.90800</span>    <span class=\"mf\">237.37600</span> <span class=\"mf\">0.34808</span> <span class=\"mf\">0.05243</span> <span class=\"mf\">0.95427</span>  <span class=\"mf\">0.86271141</span> <span class=\"o\">-</span><span class=\"mf\">0.41003201</span>  <span class=\"mf\">0.29597765</span>\n    <span class=\"mf\">201.01700</span>    <span class=\"mf\">193.58800</span>    <span class=\"mf\">237.45800</span> <span class=\"mf\">0.22788</span> <span class=\"mf\">0.01797</span> <span class=\"mf\">0.97622</span>  <span class=\"mf\">0.86271141</span> <span class=\"o\">-</span><span class=\"mf\">0.41003201</span>  <span class=\"mf\">0.29597765</span>\n    <span class=\"mf\">218.37300</span>    <span class=\"mf\">191.85400</span>    <span class=\"mf\">170.69900</span> <span class=\"mf\">0.00000</span> <span class=\"mf\">0.00000</span> <span class=\"mf\">0.00000</span>  <span class=\"mf\">0.00000000</span>  <span class=\"mf\">0.00000000</span>  <span class=\"mf\">0.00000000</span>\n    <span class=\"mf\">208.55000</span>    <span class=\"mf\">230.82100</span>    <span class=\"mf\">194.24000</span> <span class=\"mf\">0.02981</span> <span class=\"mf\">0.00932</span> <span class=\"mf\">0.96908</span> <span class=\"o\">-</span><span class=\"mf\">0.08724227</span> <span class=\"o\">-</span><span class=\"mf\">0.91048766</span>  <span class=\"mf\">0.40422890</span>\n</code></pre></div>\n<p>What I would like to get is a dataframe with column names from the header (x, y, z, vmap...). But CSV is having a hard time figuring out the format of the file and I can't seem to find, how to configure it manually.</p>\n<p>For reference, DelimitedFiles works better for this file. The only problems are that header has an extra token in the beginning (\"#\") and data has an empty column as the last column, but both can be removed manually. Should I just go with DelimitedFiles, or is there a nice way to make it work with CSV?</p>",
        "id": 240593595,
        "sender_full_name": "Moorits Muru",
        "timestamp": 1622202937
    },
    {
        "content": "<p>You can skip first line (there is a special argument for that in <a href=\"https://github.com/search?q=CSV.jl&amp;type=Repositories\">CSV.jl</a>) and it should figure out the rest.</p>",
        "id": 240601046,
        "sender_full_name": "Kwaku Oskin",
        "timestamp": 1622207226
    },
    {
        "content": "<p>Unfortunately, then it thinks that the delimter is ' ' and fills first 4 columns with missings, then has a value and again 3 missings, because that's how many whitespaces there are between the values. <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 240601808,
        "sender_full_name": "Moorits Muru",
        "timestamp": 1622207595
    },
    {
        "content": "<p>Ah, it's not csv, in a sense is not comma separated.</p>",
        "id": 240602133,
        "sender_full_name": "Kwaku Oskin",
        "timestamp": 1622207776
    },
    {
        "content": "<p>I would love to hear about this too! I have data formatted in a very similar way that I have to deal with, and the closest I have been able to get is by manually dropping the <code>#</code> character and doing something like:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">CSV</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"p\">(</span>\n    <span class=\"s\">\"./test_data.txt\"</span><span class=\"p\">,</span>\n    <span class=\"n\">delim</span> <span class=\"o\">=</span> <span class=\"sc\">' '</span><span class=\"p\">,</span>\n    <span class=\"n\">ignorerepeated</span> <span class=\"o\">=</span> <span class=\"nb\">true</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<p>but it would be fantastic if there was a way to parse the header with the comment character included in the original file</p>",
        "id": 240623128,
        "sender_full_name": "Ian Weaver",
        "timestamp": 1622216858
    },
    {
        "content": "<p>Perhaps a feature request could be to enable <code>header::Regex</code> that captures the names or something?</p>",
        "id": 240625177,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1622217788
    },
    {
        "content": "<p>Sounds good, just opened! <a href=\"https://github.com/JuliaData/CSV.jl/issues/840\">https://github.com/JuliaData/CSV.jl/issues/840</a></p>",
        "id": 240636315,
        "sender_full_name": "Ian Weaver",
        "timestamp": 1622223078
    }
]