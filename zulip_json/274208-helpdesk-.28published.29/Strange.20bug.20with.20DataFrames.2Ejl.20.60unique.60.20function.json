[
    {
        "content": "<p>So, I'm facing a very strange bug with <a href=\"https://github.com/search?q=DataFrames.jl&amp;type=Repositories\">DataFrames.jl</a> . I don't know what might be causing it. I have a dataframe with 778 columns and 31 k rows. Once I use <code>unique(df)</code> everything freezes, and the CPU usage goes to the roof. I'm using Julia 1.7.2 and DataFrames v1.3.2.</p>",
        "id": 290876547,
        "sender_full_name": "Davi Sales Barreira",
        "timestamp": 1658833528
    },
    {
        "content": "<p>Not sure that's a bug - just a lot of work for <code>unique</code> to perform? What happens if you do <code>combine(groupby(df, names(df)), nrow)</code>?</p>",
        "id": 291025857,
        "sender_full_name": "Nils",
        "timestamp": 1658924610
    },
    {
        "content": "<p><code>unique</code> is not a cheap operation.  Not also you might be hitting a hashing catastrophe, I've been burned by that a couple of times.  What I mean by that is that the default hashing algorithm gets expensive for large or deeply-nested objects.  Do you have any objects in your dataframe that might be very expensive to hash?  (sometimes I've run into that problem with DataFrames themselves, which tend to be quite expensive to hash)</p>",
        "id": 291043225,
        "sender_full_name": "Expanding Man",
        "timestamp": 1658932511
    },
    {
        "content": "<p>I'd imagine this could easily go wrong with plenty of <code>String</code> in the data and the ensuing GC pressure, so maybe <code>InlineString</code>s can help.</p>",
        "id": 291326513,
        "sender_full_name": "Nils",
        "timestamp": 1659101261
    }
]