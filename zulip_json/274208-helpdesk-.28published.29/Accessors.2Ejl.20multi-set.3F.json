[
    {
        "content": "<p>I might have missed it, but is there a way to <code>set</code> multiple fields at once? Something like:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">obj</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"4\"</span><span class=\"p\">))</span>\n\n<span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nd\">@set</span><span class=\"w\"> </span><span class=\"n\">obj</span><span class=\"w\"> </span><span class=\"k\">begin</span>\n<span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n<span class=\"n\">_b</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>Where the result is that <code>x ==  (a=2, b=(2, 4, \"4\"))</code></p>\n<p><span class=\"user-mention\" data-user-id=\"373536\">@aplavin</span> ?</p>",
        "id": 535209062,
        "sender_full_name": "Alec",
        "timestamp": 1755640871
    },
    {
        "content": "<p>Using <code>setall</code> with <a href=\"https://juliaregistries.github.io/General/packages/redirect_to_repo/AccessorsExtra\">AccessorsExtra.jl</a>'s  <a href=\"https://aplavin.github.io/AccessorsExtra.jl/notebooks/examples.html\">multi-optics</a>: </p>\n<div class=\"codehilite\" data-code-language=\"Julia console\"><pre><span></span><code><span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">obj</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"4\"</span><span class=\"p\">))</span>\n<span class=\"go\">(a = 1, b = (2, 3, \"4\"))</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">AccessorsExtra</span>\n\n<span class=\"gp\">julia&gt;</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">setall</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nd\">@optics</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]),</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"go\">(a = 2, b = (2, 4, \"4\"))</span>\n</code></pre></div>",
        "id": 535216968,
        "sender_full_name": "Sundar R",
        "timestamp": 1755647241
    },
    {
        "content": "<p>Or you can use <a href=\"https://juliaregistries.github.io/General/packages/redirect_to_repo/Chain\">Chain.jl</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nd\">@chain</span><span class=\"w\"> </span><span class=\"n\">obj</span><span class=\"w\"> </span><span class=\"k\">begin</span>\n<span class=\"w\">    </span><span class=\"nd\">@set</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n<span class=\"w\">    </span><span class=\"nd\">@set</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
        "id": 535217137,
        "sender_full_name": "Daniel Matz",
        "timestamp": 1755647409
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"272612\">@Alec</span>: are you just looking for more convenient syntax? For now, there's nothing special in Accessors, see <a href=\"https://github.com/JuliaObjects/Accessors.jl/issues/15\">https://github.com/JuliaObjects/Accessors.jl/issues/15</a>.</p>",
        "id": 535217325,
        "sender_full_name": "aplavin",
        "timestamp": 1755647571
    },
    {
        "content": "<p>The recommended way is to use a piping package, such as <a href=\"https://juliaregistries.github.io/General/packages/redirect_to_repo/DataPipes\">DataPipes.jl</a> highlighted in that issue:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">Accessors</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DataPipes</span>\n\n<span class=\"n\">obj</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"4\"</span><span class=\"p\">))</span>\n\n<span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nd\">@p</span><span class=\"w\"> </span><span class=\"k\">let</span>\n<span class=\"w\">    </span><span class=\"n\">obj</span>\n<span class=\"w\">    </span><span class=\"nd\">@set</span><span class=\"w\"> </span><span class=\"n\">__</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n<span class=\"w\">    </span><span class=\"nd\">@set</span><span class=\"w\"> </span><span class=\"n\">__</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
        "id": 535217401,
        "sender_full_name": "aplavin",
        "timestamp": 1755647630
    },
    {
        "content": "<p>It's nontrivial to significantly improve over generic piping syntax like that :)</p>\n<p>Recently (<a href=\"https://github.com/JuliaObjects/Accessors.jl/issues/204\">https://github.com/JuliaObjects/Accessors.jl/issues/204</a>), there was another idea for multi-set syntax: <code>@set obj.(a = 2, b[2] = 4)</code>. Maybe something along these lines would be a nice improvement?..</p>",
        "id": 535217535,
        "sender_full_name": "aplavin",
        "timestamp": 1755647769
    }
]