[
    {
        "content": "<p>is it only me that I might not have something well configured or generally <a href=\"https://github.com/search?q=LanguageServer.jl&amp;type=Repositories\">LanguageServer.jl</a> and meta-programming don't dance together ?<br>\nIf that's the out of the box state, are there any nifty solutions ?</p>",
        "id": 327037582,
        "sender_full_name": "Filippos Christou",
        "timestamp": 1676032010
    },
    {
        "content": "<p>sadly that's the state of things :/</p>",
        "id": 327040528,
        "sender_full_name": "Sukera",
        "timestamp": 1676032805
    },
    {
        "content": "<p>hmm. any possible solutions or even discussions in the horizon ? this can get rather wild with package using a lot of macros (like <a href=\"https://github.com/search?q=JuMP.jl&amp;type=Repositories\">JuMP.jl</a> and <a href=\"https://github.com/search?q=Makie.jl&amp;type=Repositories\">Makie.jl</a> to name a few popular ones)</p>",
        "id": 327043043,
        "sender_full_name": "Filippos Christou",
        "timestamp": 1676033575
    },
    {
        "content": "<p>macros are tricky because they are running actual user code on the source AST</p>",
        "id": 327043359,
        "sender_full_name": "Sukera",
        "timestamp": 1676033661
    },
    {
        "content": "<p>maybe <span class=\"user-mention\" data-user-id=\"208845\">@Sebastian Pfitzner</span> knows about this though</p>",
        "id": 327043444,
        "sender_full_name": "Sukera",
        "timestamp": 1676033685
    },
    {
        "content": "<p>I completely lack how knowledge on how <a href=\"https://github.com/search?q=LanguageServer.jl&amp;type=Repositories\">LanguageServer.jl</a> works at the moment. Does it not evaluate anything and just does static AST analysis ? then it's tough.</p>",
        "id": 327044633,
        "sender_full_name": "Filippos Christou",
        "timestamp": 1676034021
    },
    {
        "content": "<p>what about <a href=\"https://github.com/search?q=JET.jl&amp;type=Repositories\">JET.jl</a> ? I think JET interprets some code and as I see <a href=\"https://aviatesk.github.io/JET.jl/stable/jetanalysis/#jetanalysis-toplevel-entry\">here</a>  it also expands the macros. that should work..</p>",
        "id": 327044790,
        "sender_full_name": "Filippos Christou",
        "timestamp": 1676034071
    },
    {
        "content": "<p>I remember some discussion about incorcporating JET as a linter and I've heard VSCode people already have something that works, but not sure what the stage is there for big adoption in <a href=\"https://github.com/search?q=LanguageServer.jl&amp;type=Repositories\">LanguageServer.jl</a></p>",
        "id": 327045021,
        "sender_full_name": "Filippos Christou",
        "timestamp": 1676034134
    },
    {
        "content": "<p>JET works on a completely different level</p>",
        "id": 327045221,
        "sender_full_name": "Sukera",
        "timestamp": 1676034205
    },
    {
        "content": "<p>you wouldn't use JET solely as a linter, you're probably thinking of the (not at all finished/workable) <a href=\"https://github.com/aviatesk/JETLS.jl\">https://github.com/aviatesk/JETLS.jl</a></p>",
        "id": 327045494,
        "sender_full_name": "Sukera",
        "timestamp": 1676034292
    },
    {
        "content": "<p>which tries to incorporate the things <a href=\"https://github.com/search?q=JET.jl&amp;type=Repositories\">JET.jl</a> reports as issues via a LanguageServer</p>",
        "id": 327045568,
        "sender_full_name": "Sukera",
        "timestamp": 1676034323
    },
    {
        "content": "<p>doesn't integrate with the existing <a href=\"https://github.com/search?q=LanguageServer.jl&amp;type=Repositories\">LanguageServer.jl</a></p>",
        "id": 327045592,
        "sender_full_name": "Sukera",
        "timestamp": 1676034333
    },
    {
        "content": "<p>at the moment, <a href=\"https://github.com/search?q=LS.jl&amp;type=Repositories\">LS.jl</a> does its own parsing, but I'm not sure that it actually expands macros during that (as that may have sideffects)</p>",
        "id": 327045745,
        "sender_full_name": "Sukera",
        "timestamp": 1676034372
    },
    {
        "content": "<p>in theory we could do some very limited analysis of macro code, but a generic solution is not really possible with the current <a href=\"https://github.com/search?q=LS.jl&amp;type=Repositories\">LS.jl</a> design</p>",
        "id": 327049132,
        "sender_full_name": "Sebastian Pfitzner",
        "timestamp": 1676035319
    },
    {
        "content": "<p>julia has some introspection tools, like<code>@which</code>, <code>methods</code>, .... ofc to use these you need to evaluate the code. Does the current design of <a href=\"https://github.com/search?q=LanguageServer.jl&amp;type=Repositories\">LanguageServer.jl</a> make use of such tools , i.e. evaluates the code ?</p>",
        "id": 327051051,
        "sender_full_name": "Filippos Christou",
        "timestamp": 1676035797
    },
    {
        "content": "<p>The core issue is that the language server would need to get VASTLY more information from a julia session that has loaded the package code. There just is no way a julia session in the current form can provide that information though, especially not for top level code (which is evaluated eagerly)</p>",
        "id": 327051616,
        "sender_full_name": "Sukera",
        "timestamp": 1676035904
    }
]