[
    {
        "content": "<p>I was wondering why the following doesn't work \"out of the box\":</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"k\">in</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"n\">enumerate</span><span class=\"p\">([</span><span class=\"s\">\"a\"</span><span class=\"p\">,</span> <span class=\"s\">\"b\"</span><span class=\"p\">,</span> <span class=\"s\">\"c\"</span><span class=\"p\">]))</span>\n           <span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span>\n       <span class=\"k\">end</span>\n<span class=\"n\">ERROR</span><span class=\"o\">:</span> <span class=\"kt\">MethodError</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">method</span> <span class=\"n\">matching</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">Base</span><span class=\"o\">.</span><span class=\"n\">Iterators</span><span class=\"o\">.</span><span class=\"kt\">Enumerate</span><span class=\"p\">{</span><span class=\"kt\">Vector</span><span class=\"p\">{</span><span class=\"kt\">String</span><span class=\"p\">}})</span>\n<span class=\"n\">Closest</span> <span class=\"n\">candidates</span> <span class=\"n\">are</span><span class=\"o\">:</span>\n  <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">Tuple</span><span class=\"p\">)</span> <span class=\"n\">at</span> <span class=\"n\">tuple</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">488</span>\n  <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">Pair</span><span class=\"p\">{</span><span class=\"kt\">A</span><span class=\"p\">,</span> <span class=\"kt\">B</span><span class=\"p\">})</span> <span class=\"k\">where</span> <span class=\"p\">{</span><span class=\"kt\">A</span><span class=\"p\">,</span> <span class=\"kt\">B</span><span class=\"p\">}</span> <span class=\"n\">at</span> <span class=\"n\">pair</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">48</span>\n  <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"o\">::</span><span class=\"kt\">Union</span><span class=\"p\">{</span><span class=\"kt\">SubString</span><span class=\"p\">{</span><span class=\"kt\">String</span><span class=\"p\">},</span> <span class=\"kt\">String</span><span class=\"p\">})</span> <span class=\"n\">at</span> <span class=\"n\">strings</span><span class=\"o\">/</span><span class=\"n\">substring</span><span class=\"o\">.</span><span class=\"n\">jl</span><span class=\"o\">:</span><span class=\"mi\">166</span>\n  <span class=\"o\">...</span>\n<span class=\"n\">Stacktrace</span><span class=\"o\">:</span>\n <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"n\">top</span><span class=\"o\">-</span><span class=\"n\">level</span> <span class=\"n\">scope</span>\n   <span class=\"err\">@</span> <span class=\"o\">./</span><span class=\"n\">REPL</span><span class=\"p\">[</span><span class=\"mi\">44</span><span class=\"p\">]</span><span class=\"o\">:</span><span class=\"mi\">1</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"k\">using</span> <span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">Iterators</span><span class=\"o\">:</span> <span class=\"n\">Reverse</span>\n\n<span class=\"n\">julia</span><span class=\"o\">&gt;</span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"k\">in</span> <span class=\"n\">Reverse</span><span class=\"p\">(</span><span class=\"n\">enumerate</span><span class=\"p\">([</span><span class=\"s\">\"a\"</span><span class=\"p\">,</span> <span class=\"s\">\"b\"</span><span class=\"p\">,</span> <span class=\"s\">\"c\"</span><span class=\"p\">]))</span>\n           <span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span>\n       <span class=\"k\">end</span>\n<span class=\"mi\">3</span><span class=\"n\">c2b1a</span>\n</code></pre></div>\n<p>I am on <code>1.7.0-rc1</code>. Is this worth opening an issue or making a PR?</p>",
        "id": 257214441,
        "sender_full_name": "Adrian Hill",
        "timestamp": 1634049799
    },
    {
        "content": "<p>You can use <code>Iterators.reverse</code></p>",
        "id": 257214906,
        "sender_full_name": "Fredrik Ekre",
        "timestamp": 1634049979
    }
]